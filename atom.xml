<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Coleduck&#39;s Blog</title>
  
  
  <link href="https://coleduck.cn/atom.xml" rel="self"/>
  
  <link href="https://coleduck.cn/"/>
  <updated>2023-06-18T10:02:38.939Z</updated>
  <id>https://coleduck.cn/</id>
  
  <author>
    <name>Coleduck</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>杭州义益计组软件仿真 - 指令设计综合实验</title>
    <link href="https://coleduck.cn/2023/06/18/0001-10/"/>
    <id>https://coleduck.cn/2023/06/18/0001-10/</id>
    <published>2023-06-18T03:38:39.568Z</published>
    <updated>2023-06-18T10:02:38.939Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验8"><a href="#计算机组成原理实验8" class="headerlink" title="计算机组成原理实验8"></a>计算机组成原理实验8</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1) 掌握指令设计方法，自主设计指令</span><br><span class="line">2) 掌握使用自己设计的指令编写程序的方法</span><br></pre></td></tr></table></figure><br><h2 id="实验内容及原理"><a href="#实验内容及原理" class="headerlink" title="实验内容及原理"></a>实验内容及原理</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">实验内容</button></li><li class="tab"><button type="button" data-href="#-2">实验原理</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;实验内容：</span><br><span class="line">•定义指令SUB ADDR，指令码为D4，实现功能：[addr]-drdr；</span><br><span class="line">•改写简单模型机中的ADD ADDR指令，使之能判别进位标志；</span><br><span class="line">•定义指令JMPC ADDR，指令码为DC，实现功能：若cy=1，addr pc；</span><br><span class="line">•运用上述指令，结合简单模型机五条指令，编写程序实现：将地址为20H的内存单元中的数据（初始值为0），加上一个输入数据</span><br><span class="line">（50H）,存放到20H内存单元，并输出到OUT单元显示，并循环累加，当数据即将溢出时，转做减法操作，当减到即将溢出时，又做</span><br><span class="line">加法操作，如此循环。</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="https://s2.loli.net/2023/06/18/waQxY4TKmEqhvNo.png" alt="0ac91d1bfb79e1261306556ee9a6a5f.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><br><h2 id="实验主要仪器设备"><a href="#实验主要仪器设备" class="headerlink" title="实验主要仪器设备"></a>实验主要仪器设备</h2><blockquote><p><strong>略</strong></p></blockquote><br><h2 id="实验步骤、数据记录及总结分析"><a href="#实验步骤、数据记录及总结分析" class="headerlink" title="实验步骤、数据记录及总结分析"></a>实验步骤、数据记录及总结分析</h2><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">存储器</button></li><li class="tab"><button type="button" data-href="#-2">微存储器</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="https://s2.loli.net/2023/06/18/O6CWsmIGKfJt91r.png" alt="453c9a1f2ced83421d729905fea23d3.png"><br><img src="https://s2.loli.net/2023/06/18/1ry6tBLUHOvgfIw.png" alt="dcfae6aa873c31a20badcf9f851b6c0.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="https://s2.loli.net/2023/06/18/Ahz1wyYgBDOZlbG.png" alt="8de2c21627fbcc3566722e5257305f2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="实验结果与结论"><a href="#实验结果与结论" class="headerlink" title="实验结果与结论"></a>实验结果与结论</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一个周期输出结果：</span><br><span class="line">00H -&gt; 50H -&gt; A0H -&gt;F0H -&gt; A0H -&gt; 50H -&gt; 00H</span><br><span class="line"></span><br><span class="line">J(4)散转入口地址=微代码下址（OR）0,0,0,0,0,FC,FZ</span><br><span class="line">因为是或的逻辑关系，如果我们想用FZ，而与FC无关，来控制分支的话，</span><br><span class="line">只需要设置微代码下址为xxxxx10即可。</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="存在疑问"><a href="#存在疑问" class="headerlink" title="存在疑问"></a>存在疑问</h3><blockquote><p><strong>略</strong></p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验8&quot;&gt;&lt;a href=&quot;#计算机组成原理实验8&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验8&quot;&gt;&lt;/a&gt;计算机组成原理实验8&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>杭州义益计组软件仿真 - 带移位模型机实验</title>
    <link href="https://coleduck.cn/2023/06/18/0001-09/"/>
    <id>https://coleduck.cn/2023/06/18/0001-09/</id>
    <published>2023-06-18T03:38:33.138Z</published>
    <updated>2023-06-18T10:14:40.833Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验9"><a href="#计算机组成原理实验9" class="headerlink" title="计算机组成原理实验9"></a>计算机组成原理实验9</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1) 掌握指令设计方法，自主设计指令</span><br><span class="line">2) 掌握使用自己设计的指令编写程序的方法</span><br></pre></td></tr></table></figure><br><h2 id="实验内容及原理"><a href="#实验内容及原理" class="headerlink" title="实验内容及原理"></a>实验内容及原理</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">实验内容</button></li><li class="tab"><button type="button" data-href="#-2">实验原理</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;实验内容一：</span><br><span class="line">•利用定义的RR指令编程序实现输出指示灯”10000000”(来源于input单元)从左往右循环移动。</span><br><span class="line">•利用定义的RR ADDR编程序实现输出指示灯”10000000”(来源于input单元)从左往右循环移动。</span><br><span class="line"></span><br><span class="line">&gt;实验内容二：</span><br><span class="line">•利用定义的FIVE指令编程序实现输出指示灯”00000001”(来源于input单元)循环乘5输出。</span><br><span class="line">•定义指令FIVE ADDR实现功能[addr]*5DR，并用该指令来实现上述程序。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="https://s2.loli.net/2023/06/18/QS276JzyZjXvbte.png" alt="b0500cb6a2c237dfa50bf8cf741657d.png"><br><img src="https://s2.loli.net/2023/06/18/vM2Tyqu4iPs6VW1.png" alt="189b823e4f5aaeabc9fc1158a7792a8.png"><br><img src="https://s2.loli.net/2023/06/18/odADt8COPcJWuMx.png" alt="d63295fc436955f2b755eb7120e2dd6.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><br><h2 id="实验主要仪器设备"><a href="#实验主要仪器设备" class="headerlink" title="实验主要仪器设备"></a>实验主要仪器设备</h2><blockquote><p><strong>略</strong></p></blockquote><br><h2 id="实验步骤、数据记录及总结分析"><a href="#实验步骤、数据记录及总结分析" class="headerlink" title="实验步骤、数据记录及总结分析"></a>实验步骤、数据记录及总结分析</h2><h3 id="实验一-RR实现循环右移-初始值10H"><a href="#实验一-RR实现循环右移-初始值10H" class="headerlink" title="实验一 RR实现循环右移(初始值10H)"></a>实验一 RR实现循环右移(初始值10H)</h3><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">存储器1</button></li><li class="tab"><button type="button" data-href="#-2">微存储器1</button></li><li class="tab"><button type="button" data-href="#-3">实验结果1</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="https://s2.loli.net/2023/06/18/4JDUdYnhZraFjP6.png" alt="88085a8e96c8a20324ce114442c5033.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="https://s2.loli.net/2023/06/18/S3wrkLRcIKXyTaG.png" alt="a729d5b72073d1e8a62b8db69895a91.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><p>前三轮输出：08H，04H，02H</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="实验二-RR-ADDR实现循环右移-初始值10H"><a href="#实验二-RR-ADDR实现循环右移-初始值10H" class="headerlink" title="实验二 RR ADDR实现循环右移(初始值10H)"></a>实验二 RR ADDR实现循环右移(初始值10H)</h3><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">存储器2</button></li><li class="tab"><button type="button" data-href="#-2">微存储器2</button></li><li class="tab"><button type="button" data-href="#-3">实验结果2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="https://s2.loli.net/2023/06/18/cfoU8dNHSk752ua.png" alt="7dd58b7b1e4b92c6f80ed7cce04b3b8.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="https://s2.loli.net/2023/06/18/qyb1ZNocQ4rlEtJ.png" alt="009f1b374ba0d53a41bf44b4d2659e5.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><p>前三轮输出：10H，08H，04H</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="实验三-FIVE实现循环乘5-初始值01H"><a href="#实验三-FIVE实现循环乘5-初始值01H" class="headerlink" title="实验三 FIVE实现循环乘5(初始值01H)"></a>实验三 FIVE实现循环乘5(初始值01H)</h3><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">存储器3</button></li><li class="tab"><button type="button" data-href="#-2">微存储器3</button></li><li class="tab"><button type="button" data-href="#-3">实验结果3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><p><img src="https://s2.loli.net/2023/06/18/P19xDuHgCkFGh6A.png" alt="87ad0383d160d8569c1cf6fa59617af.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="https://s2.loli.net/2023/06/18/eTU3h7mLg4t6FVq.png" alt="963c7ff09d02632edccadb451e3ce1a.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><p>前三轮输出：05H，19H，7DH</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="思考题"><a href="#思考题" class="headerlink" title="思考题"></a>思考题</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">定义指令FIVE ADDR1 ADDR2实现功能[addr1]*5[addr2]，思考要实现实验二的程序，还需要定义什么指令？如何实现？</span><br><span class="line"></span><br><span class="line">解答：</span><br><span class="line"></span><br><span class="line">指令: FIVE ADDR1 ADDR2</span><br><span class="line">指令格式: D4 addr1 addr2</span><br><span class="line">功能: [addr1] * 5 -&gt; [addr2]</span><br><span class="line"></span><br><span class="line">PC-&gt;AR PC+1PC-B, B-AR, PC+1</span><br><span class="line">RAM-&gt;AR/M-R, B-AR</span><br><span class="line">RAM-&gt;DA1/M-R, B-DA1</span><br><span class="line">RAM-&gt;299/M-R, S1S0=11</span><br><span class="line">PC-&gt;AR PC+1PC-B, B-AR, PC+1</span><br><span class="line">RAM-&gt;DR/M-R, B-DR</span><br><span class="line">299-&gt;DA1/299-B, B-DA1</span><br><span class="line">299-&gt;循环左移/299-B, S1S0M=010</span><br><span class="line">299-&gt;循环左移/299-B, S1S0M=010</span><br><span class="line">299-&gt;DA2/299-B, B-DA2</span><br><span class="line">DR-&gt;ARDR-B,B-AR</span><br><span class="line">DA1+DA2-&gt; [AR]/299-B, /M-W</span><br></pre></td></tr></table></figure><h3 id="存在疑问"><a href="#存在疑问" class="headerlink" title="存在疑问"></a>存在疑问</h3><blockquote><p><strong>略</strong></p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验9&quot;&gt;&lt;a href=&quot;#计算机组成原理实验9&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验9&quot;&gt;&lt;/a&gt;计算机组成原理实验9&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Qt实验 - 二维绘图</title>
    <link href="https://coleduck.cn/2023/06/18/0002-09/"/>
    <id>https://coleduck.cn/2023/06/18/0002-09/</id>
    <published>2023-06-18T03:20:03.408Z</published>
    <updated>2023-06-18T10:06:38.466Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验9"><a href="#C-桌面应用程序实验9" class="headerlink" title="C++桌面应用程序实验9"></a>C++桌面应用程序实验9</h1><h2 id="第1题"><a href="#第1题" class="headerlink" title="第1题"></a>第1题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 创建一个简单窗口， 按下鼠标左键，拖动鼠标，在用户区上画出一个矩形，矩形左上角以初始按下鼠标的点，右下角为鼠标当前</span><br><span class="line">位置，放开鼠标，窗口用户区显示一个最后的矩形。按下键盘的‘l’(英文字母L的小写)，矩形放大，按下‘s’键，矩形缩小，并能用</span><br><span class="line">方向键实现所画矩形按相应方向移动。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">mainwindow.h</button></li><li class="tab"><button type="button" data-href="#-2">mainwindow.cpp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MAINWINDOW_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAINWINDOW_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MainWindow</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span> : <span class="keyword">public</span> QMainWindow</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">paintEvent</span><span class="params">(QPaintEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">keyPressEvent</span><span class="params">(QKeyEvent *event)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QPoint st = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    QPoint ed = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MainWindow</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MainWindow</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MainWindow *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MAINWINDOW_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMouseEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPen&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(event-&gt;<span class="built_in">button</span>() == Qt::LeftButton)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;st = <span class="keyword">this</span>-&gt;ed = event-&gt;<span class="built_in">pos</span>();</span><br><span class="line"><span class="comment">//        qDebug() &lt;&lt; st.x() &lt;&lt; &quot; &quot; &lt;&lt; st.y() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">        QCursor cursor;</span><br><span class="line">        cursor.<span class="built_in">setShape</span>(Qt::CrossCursor);</span><br><span class="line">        QApplication::<span class="built_in">setOverrideCursor</span>(cursor);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//    qDebug() &lt;&lt; st.x() &lt;&lt; &quot; &quot; &lt;&lt; st.y() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"><span class="comment">//    qDebug() &lt;&lt; ed.x() &lt;&lt; &quot; &quot; &lt;&lt; ed.y() &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(event);</span><br><span class="line">    QApplication::<span class="built_in">restoreOverrideCursor</span>();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event-&gt;<span class="built_in">buttons</span>() == Qt::LeftButton)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;ed = event-&gt;<span class="built_in">pos</span>();</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; st.<span class="built_in">x</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; st.<span class="built_in">y</span>() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; ed.<span class="built_in">x</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ed.<span class="built_in">y</span>() &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">        QMainWindow::<span class="built_in">update</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::keyPressEvent</span><span class="params">(QKeyEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QPoint e = (ed - st) / <span class="number">8</span>;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">if</span> (event-&gt;<span class="built_in">key</span>() == Qt::Key_L)</span><br><span class="line">    &#123;</span><br><span class="line">        ed += e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event-&gt;<span class="built_in">key</span>() == Qt::Key_S)</span><br><span class="line">    &#123;</span><br><span class="line">        ed -= e;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event-&gt;<span class="built_in">key</span>() == Qt::Key_Up)</span><br><span class="line">    &#123;</span><br><span class="line">        st.<span class="built_in">setY</span>(st.<span class="built_in">y</span>() - p);</span><br><span class="line">        ed.<span class="built_in">setY</span>(ed.<span class="built_in">y</span>() - p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event-&gt;<span class="built_in">key</span>() == Qt::Key_Down)</span><br><span class="line">    &#123;</span><br><span class="line">        st.<span class="built_in">setY</span>(st.<span class="built_in">y</span>() + p);</span><br><span class="line">        ed.<span class="built_in">setY</span>(ed.<span class="built_in">y</span>() + p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event-&gt;<span class="built_in">key</span>() == Qt::Key_Left)</span><br><span class="line">    &#123;</span><br><span class="line">        st.<span class="built_in">setX</span>(st.<span class="built_in">x</span>() - p);</span><br><span class="line">        ed.<span class="built_in">setX</span>(ed.<span class="built_in">x</span>() - p);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event-&gt;<span class="built_in">key</span>() == Qt::Key_Right)</span><br><span class="line">    &#123;</span><br><span class="line">        st.<span class="built_in">setX</span>(st.<span class="built_in">x</span>() + p);</span><br><span class="line">        ed.<span class="built_in">setX</span>(ed.<span class="built_in">x</span>() + p);</span><br><span class="line">    &#125;</span><br><span class="line">    QMainWindow::<span class="built_in">update</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    <span class="function">QPen <span class="title">pen</span><span class="params">(Qt::black, <span class="number">5</span>, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin)</span></span>;</span><br><span class="line">    painter.<span class="built_in">setPen</span>(pen);</span><br><span class="line">    painter.<span class="built_in">drawRect</span>(st.<span class="built_in">x</span>(), st.<span class="built_in">y</span>(), ed.<span class="built_in">x</span>() - st.<span class="built_in">x</span>(), ed.<span class="built_in">y</span>() - st.<span class="built_in">y</span>());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第2题"><a href="#第2题" class="headerlink" title="第2题"></a>第2题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.  做一个简单的画图程序，基本功能：</span><br><span class="line"></span><br><span class="line">1） 按“L”后，用鼠标拖拽能在屏幕上画直线；</span><br><span class="line">2） 按“E”后,用鼠标托拽能在屏幕上画矩形</span><br><span class="line">3） 按“C”后，用鼠标拖拽能在屏幕上画圆</span><br><span class="line">4） 按“R”“G”“B”能够改变所画图形为红、绿、蓝色</span><br><span class="line">5） 对上述功能做菜单、工具栏和状态栏</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">mainwindow.h</button></li><li class="tab"><button type="button" data-href="#-2">mainwindow.cpp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MAINWINDOW_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAINWINDOW_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MainWindow</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span> : <span class="keyword">public</span> QMainWindow</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">paintEvent</span><span class="params">(QPaintEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QPoint st = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    QPoint ed = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="type">bool</span> Rect = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">bool</span> Circle = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">bool</span> Line = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">bool</span> Red = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">bool</span> Green = <span class="literal">false</span>;</span><br><span class="line">    <span class="type">bool</span> Blue = <span class="literal">false</span>;</span><br><span class="line">    QString shape, color, pos;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MainWindow</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MainWindow</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_2_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_3_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_4_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_5_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_6_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MainWindow *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MAINWINDOW_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMouseEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPainter&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPen&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QLabel&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">statusBar</span>()-&gt;<span class="built_in">showMessage</span>(<span class="string">&quot;Status is here...&quot;</span>);</span><br><span class="line">    shape = <span class="string">&quot;无&quot;</span>; color = <span class="string">&quot;无&quot;</span>, pos = <span class="string">&quot;无&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(event-&gt;<span class="built_in">button</span>() == Qt::LeftButton)</span><br><span class="line">    &#123;</span><br><span class="line">        Red = Green = Blue = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">this</span>-&gt;st = <span class="keyword">this</span>-&gt;ed = event-&gt;<span class="built_in">pos</span>();</span><br><span class="line"></span><br><span class="line">        QCursor cursor;</span><br><span class="line">        cursor.<span class="built_in">setShape</span>(Qt::CrossCursor);</span><br><span class="line">        QApplication::<span class="built_in">setOverrideCursor</span>(cursor);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(event);</span><br><span class="line">    QApplication::<span class="built_in">restoreOverrideCursor</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event-&gt;<span class="built_in">buttons</span>() == Qt::LeftButton)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;ed = event-&gt;<span class="built_in">pos</span>();</span><br><span class="line">        QMainWindow::<span class="built_in">update</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::paintEvent</span><span class="params">(QPaintEvent *)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QPainter <span class="title">painter</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pos != <span class="string">&quot;无&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        pos = <span class="string">&quot;(&quot;</span> + QString::<span class="built_in">number</span>(st.<span class="built_in">x</span>()) + <span class="string">&quot;,&quot;</span> + QString::<span class="built_in">number</span>(st.<span class="built_in">y</span>()) +</span><br><span class="line">              <span class="string">&quot;) -&gt; (&quot;</span> + QString::<span class="built_in">number</span>(ed.<span class="built_in">x</span>()) + <span class="string">&quot;,&quot;</span> + QString::<span class="built_in">number</span>(ed.<span class="built_in">y</span>()) + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">statusBar</span>()-&gt;<span class="built_in">showMessage</span>(<span class="string">&quot;形状：&quot;</span> + shape + <span class="string">&quot;  /  颜色：&quot;</span> + color + <span class="string">&quot;  /  坐标：&quot;</span> + pos);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 画笔颜色</span></span><br><span class="line">    <span class="function">QPen <span class="title">pen</span><span class="params">(Qt::black, <span class="number">5</span>, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin)</span></span>;</span><br><span class="line">    <span class="function">QPen <span class="title">pen_r</span><span class="params">(Qt::red, <span class="number">5</span>, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin)</span></span>;</span><br><span class="line">    <span class="function">QPen <span class="title">pen_g</span><span class="params">(Qt::green, <span class="number">5</span>, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin)</span></span>;</span><br><span class="line">    <span class="function">QPen <span class="title">pen_b</span><span class="params">(Qt::blue, <span class="number">5</span>, Qt::SolidLine, Qt::RoundCap, Qt::RoundJoin)</span></span>;</span><br><span class="line">    <span class="keyword">if</span> (Red)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.<span class="built_in">setPen</span>(pen_r);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Green)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.<span class="built_in">setPen</span>(pen_g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Blue)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.<span class="built_in">setPen</span>(pen_b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        painter.<span class="built_in">setPen</span>(pen);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//形状</span></span><br><span class="line">    <span class="keyword">if</span> (Line)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.<span class="built_in">drawLine</span>(st.<span class="built_in">x</span>(), st.<span class="built_in">y</span>(), ed.<span class="built_in">x</span>(), ed.<span class="built_in">y</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Rect)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.<span class="built_in">drawRect</span>(st.<span class="built_in">x</span>(), st.<span class="built_in">y</span>(), ed.<span class="built_in">x</span>() - st.<span class="built_in">x</span>(), ed.<span class="built_in">y</span>() - st.<span class="built_in">y</span>());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Circle)</span><br><span class="line">    &#123;</span><br><span class="line">        painter.<span class="built_in">drawEllipse</span>(st.<span class="built_in">x</span>(), st.<span class="built_in">y</span>(), ed.<span class="built_in">x</span>() - st.<span class="built_in">x</span>(), ed.<span class="built_in">y</span>() - st.<span class="built_in">y</span>());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_action_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Line = <span class="literal">true</span>; Rect = Circle = <span class="literal">false</span>;</span><br><span class="line">    shape = <span class="string">&quot;直线&quot;</span>; color = <span class="string">&quot;黑色(默认)&quot;</span>; pos = <span class="string">&quot;(0,0) -&gt; (0,0)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_action_2_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Rect = <span class="literal">true</span>; Circle = Line = <span class="literal">false</span>;</span><br><span class="line">    shape = <span class="string">&quot;矩形&quot;</span>; color = <span class="string">&quot;黑色(默认)&quot;</span>; pos = <span class="string">&quot;(0,0) -&gt; (0,0)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_action_3_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Circle = <span class="literal">true</span>; Rect = Line = <span class="literal">false</span>;</span><br><span class="line">    shape = <span class="string">&quot;圆&quot;</span>; color = <span class="string">&quot;黑色(默认)&quot;</span>; pos = <span class="string">&quot;(0,0) -&gt; (0,0)&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_action_4_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Red = <span class="literal">true</span>; Green = Blue = <span class="literal">false</span>; color = <span class="string">&quot;红色&quot;</span>;</span><br><span class="line">    QMainWindow::<span class="built_in">update</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_action_5_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Green = <span class="literal">true</span>; Red = Blue = <span class="literal">false</span>; color = <span class="string">&quot;绿色&quot;</span>;</span><br><span class="line">    QMainWindow::<span class="built_in">update</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_action_6_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Blue = <span class="literal">true</span>; Green = Red = <span class="literal">false</span>; color = <span class="string">&quot;蓝色&quot;</span>;</span><br><span class="line">    QMainWindow::<span class="built_in">update</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验9&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验9&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验9&quot;&gt;&lt;/a&gt;C++桌面应用程序实验9&lt;/h1&gt;&lt;h2 id=&quot;第1题&quot;&gt;&lt;a href=&quot;#第1题&quot; class=&quot;</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="QT creator" scheme="https://coleduck.cn/tags/QT-creator/"/>
    
  </entry>
  
  <entry>
    <title>杭州义益计组软件仿真 - 简单模型机循环加(减)法实验</title>
    <link href="https://coleduck.cn/2023/05/14/0001-08/"/>
    <id>https://coleduck.cn/2023/05/14/0001-08/</id>
    <published>2023-05-14T06:09:32.006Z</published>
    <updated>2023-06-18T03:53:27.414Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验8"><a href="#计算机组成原理实验8" class="headerlink" title="计算机组成原理实验8"></a>计算机组成原理实验8</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1) 了解存储器的工作原理</span><br><span class="line">2) 了解6116芯片结构与功能</span><br><span class="line">3) 掌握存储器读写方法</span><br><span class="line">4) 理解内存地址与内存内容</span><br></pre></td></tr></table></figure><br><h2 id="实验内容及原理"><a href="#实验内容及原理" class="headerlink" title="实验内容及原理"></a>实验内容及原理</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">实验内容</button></li><li class="tab"><button type="button" data-href="#-2">实验原理</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;实验内容一：</span><br><span class="line">•根据简单模型机已经定义的5条指令，编程实现以下功能：</span><br><span class="line">•从输入单元输入数据20H；</span><br><span class="line">•将该输入数据与地址为20H的内存单元中存储的数据（[20H]）相加后，存放回地址为20H的内存单元中，并在输出单元显示。</span><br><span class="line">•一直重复该过程实现循环累加。</span><br><span class="line"></span><br><span class="line">&gt;实验内容二：</span><br><span class="line">•新定义一条减法指令SUB，实现功能 [ADDR]-R0R0。</span><br><span class="line">•编程实现以下功能：</span><br><span class="line">•从输入单元输入数据20H；</span><br><span class="line">•将地址为20H的内存单元中存储的数据（[20H]）减去该输入数据后，存放回地址为20H的内存单元中，并在输出单元显示。</span><br><span class="line">•一直重复该过程实现循环累减。</span><br><span class="line">注：[20H]中数据预置为80H。</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><p><img src="https://s2.loli.net/2023/05/12/XGUQioLCahYfnmV.jpg" alt="图片4.jpg"><br><img src="https://s2.loli.net/2023/05/12/Atscx6qQZfwrDpX.jpg" alt="图片3.jpg"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">J(1)散转的方式：</span><br><span class="line"></span><br><span class="line">当指令码I7 I6=11时</span><br><span class="line">散转入口地址=微代码下址（OR）0，1，0，I5，I4，I3，I2</span><br><span class="line"></span><br><span class="line">当指令码I7 I6≠11时</span><br><span class="line">散转入口地址=微代码下址（OR）0，0，0，I7，I6，I5，I4</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><br><h2 id="实验主要仪器设备"><a href="#实验主要仪器设备" class="headerlink" title="实验主要仪器设备"></a>实验主要仪器设备</h2><blockquote><p><strong>略</strong></p></blockquote><br><h2 id="实验步骤、数据记录及总结分析"><a href="#实验步骤、数据记录及总结分析" class="headerlink" title="实验步骤、数据记录及总结分析"></a>实验步骤、数据记录及总结分析</h2><h3 id="操作过程"><a href="#操作过程" class="headerlink" title="操作过程"></a>操作过程</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.打开软件</span><br><span class="line">2.打开简单模型机</span><br><span class="line">3.仿真</span><br><span class="line">4.下载</span><br><span class="line">5.关闭音响，</span><br><span class="line">6.在主存储器和微存储器里填入以下内容</span><br><span class="line">7.输入数据键入20H</span><br><span class="line">8.运行</span><br></pre></td></tr></table></figure><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><p><img src="https://s2.loli.net/2023/05/12/rRUXJpw6qMunbdG.png" alt="a25eb21ac8ace119efafad5fb0b8163.png"><br><img src="https://s2.loli.net/2023/05/12/4J9Eksh2twMmRiT.png" alt="3c6ad4d3e7329141c6479395cd44b7b.png"></p><h3 id="实验结果与结论"><a href="#实验结果与结论" class="headerlink" title="实验结果与结论"></a>实验结果与结论</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">80 -&gt; 60 -&gt; 40 -&gt; 20 -&gt; 00 -&gt; E0 -&gt; C0 -&gt; A0 -&gt; 80 -&gt; 60 -&gt; …</span><br></pre></td></tr></table></figure><h3 id="存在疑问"><a href="#存在疑问" class="headerlink" title="存在疑问"></a>存在疑问</h3><blockquote><p><strong>略</strong></p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验8&quot;&gt;&lt;a href=&quot;#计算机组成原理实验8&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验8&quot;&gt;&lt;/a&gt;计算机组成原理实验8&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>杭州义益计组软件仿真 - 存储器读写实验</title>
    <link href="https://coleduck.cn/2023/05/14/0001-07/"/>
    <id>https://coleduck.cn/2023/05/14/0001-07/</id>
    <published>2023-05-14T06:09:32.005Z</published>
    <updated>2023-06-18T03:53:34.567Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验7"><a href="#计算机组成原理实验7" class="headerlink" title="计算机组成原理实验7"></a>计算机组成原理实验7</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1) 了解存储器的工作原理</span><br><span class="line">2) 了解6116芯片结构与功能</span><br><span class="line">3) 掌握存储器读写方法</span><br><span class="line">4) 理解内存地址与内存内容</span><br></pre></td></tr></table></figure><br><h2 id="实验内容及原理"><a href="#实验内容及原理" class="headerlink" title="实验内容及原理"></a>实验内容及原理</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">初始数据</button></li><li class="tab"><button type="button" data-href="#-2">实验内容</button></li><li class="tab"><button type="button" data-href="#-3">实验原理</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在内存中存入初始数据。</span><br><span class="line"></span><br><span class="line">地址    数据</span><br><span class="line">01H     80H</span><br><span class="line">02H     40H</span><br><span class="line">03H     </span><br><span class="line">40H     11H</span><br><span class="line">80H     22H</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;实验内容一：</span><br><span class="line"></span><br><span class="line">将地址分别为01、02的内存中的数据相加后，写入到地址为03的内存中。并在OUT单元读出。</span><br><span class="line"></span><br><span class="line">&gt;实验内容二：</span><br><span class="line"></span><br><span class="line">在实验一的基础上，将地址分别为01、02的内存中的数据为地址的内存中的数据相加后，写入到地址为03的内存中的数据</span><br><span class="line">为地址的内存单元中，并在OUT单元读出。这里地址01和02中存储的数据都是一个内存地址（假设分别为A和B），而真正</span><br><span class="line">要进行加法运算的操作数据存放在地址A和B中；类似的，内存地址03中存储的数据也是一个地址（假设为C），则最后加法</span><br><span class="line">运算的结果应该存放在地址C中。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">6116芯片主要引脚功能（见下图1）：</span><br><span class="line">D7-D0：8位数据输入输出，芯片的数据输入/输出共用一个引脚。</span><br><span class="line">A10-A0：11位地址线，指示芯片内部的2048个存储单元编号。</span><br><span class="line">/CS：片选控制信号，低电平时，芯片可进行读写操作，高电平时，芯片保存信息不能进行读写操作。</span><br><span class="line">/WE：写控制信号，低电平时，把数据线上的数据写入到地址线A10-A0指示的存储器单元中。</span><br><span class="line">/OE：读控制信号，低电平时，把地址线A10-A0指示的存储器单元的数据读出到数据线上。</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/05/03/nF3oQpNECfrlHJt.jpg" alt="图片1.jpg"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">计组实验箱中存储器工作模式（见下图2）：</span><br><span class="line"></span><br><span class="line">内存地址与内存内容：</span><br><span class="line">内存用于存放当前正在执行的数据和程序。</span><br><span class="line">内存地址就是对内存中每个存储单元的一个编号，方便对某个特定存储单元的访问。</span><br><span class="line">内存内容是存储单元中存储的数据，可以是指令、操作数、地址等。</span><br><span class="line">如果把内存看成一个酒店，那么存储单元就是客房，内存地址就是房号，内存内容就是客房里的房客。略有不同的是，内</span><br><span class="line">存这个酒店的客房里不一定是房客，也有可能放了一张字条，上面写着“给105的房客送果盘”（指令）；也有可能里面放了</span><br><span class="line">一张206的房卡（地址），你可以去206找那里的房客。</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/05/03/quHA8lERznS1jih.png" alt="图片2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><br><h2 id="实验主要仪器设备"><a href="#实验主要仪器设备" class="headerlink" title="实验主要仪器设备"></a>实验主要仪器设备</h2><blockquote><p><strong>略</strong></p></blockquote><br><h2 id="实验步骤、数据记录及总结分析"><a href="#实验步骤、数据记录及总结分析" class="headerlink" title="实验步骤、数据记录及总结分析"></a>实验步骤、数据记录及总结分析</h2><h3 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h3><blockquote><mark class="hl-label orange">&nbsp;</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Input unit/#IO-R</td><td align="center">Manual unit/#IO-R</td></tr><tr><td align="center">2</td><td align="center">Output unit/#IO-W</td><td align="center">Manual unit/#IO-W</td></tr><tr><td align="center">3</td><td align="center">ALU unit/#/ALU-B</td><td align="center">Manual unit/#/ALU-B</td></tr><tr><td align="center">4</td><td align="center">ALU unit/#S3~S0MCI</td><td align="center">Manual unit/#S3~S0MCI</td></tr><tr><td align="center">5</td><td align="center">ALU unit/#B-DA1</td><td align="center">Manual unit/#B-DA1</td></tr><tr><td align="center">6</td><td align="center">ALU unit/#B-DA2</td><td align="center">Manual unit/#B-DA2</td></tr><tr><td align="center">7</td><td align="center">Manual unit/#/M-W</td><td align="center">MEM unit/#/M-W</td></tr><tr><td align="center">8</td><td align="center">Manual unit/#/M-R</td><td align="center">MEM unit/#/M-R</td></tr><tr><td align="center">9</td><td align="center">Address unit/#A7~A0</td><td align="center">MEM unit/#A7~A0</td></tr><tr><td align="center">10</td><td align="center">Manual unit/#KA</td><td align="center">REG unit/#B-R0</td></tr><tr><td align="center">11</td><td align="center">Manual unit/#KB</td><td align="center">REG unit/#/R0-B</td></tr></tbody></table></blockquote><h3 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h3><blockquote><mark class="hl-label blue">实验一</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN(01)-&gt;AR</td><td align="center">/IO-R, B-AR</td></tr><tr><td align="center">2</td><td align="center">MEM-&gt;DA1</td><td align="center">/M-R, B-DA1</td></tr><tr><td align="center">3</td><td align="center">IN(02)-&gt;AR</td><td align="center">/IO-R, B-AR</td></tr><tr><td align="center">4</td><td align="center">MEM-&gt;DA2</td><td align="center">/M-R, B-DA2</td></tr><tr><td align="center">5</td><td align="center">IN(03)-&gt;AR</td><td align="center">/IO-R, B-AR</td></tr><tr><td align="center">6</td><td align="center">ALU(加法)-&gt;MEM</td><td align="center">/ALU-B, S3~S0MCI=100101, /M-W</td></tr><tr><td align="center">7</td><td align="center">MEM-&gt;OUT</td><td align="center">/M-R, IO-W</td></tr></tbody></table></blockquote><blockquote><mark class="hl-label blue">实验二</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN(01)-&gt;AR</td><td align="center">/IO-R, B-AR</td></tr><tr><td align="center">2</td><td align="center">MEM-&gt;R0</td><td align="center">/M-R, B-R0</td></tr><tr><td align="center">3</td><td align="center">R0-&gt;AR</td><td align="center">/R0-B, B-AR</td></tr><tr><td align="center">4</td><td align="center">*(01)-&gt;DA1</td><td align="center">/M-R, B-DA1</td></tr><tr><td align="center">5</td><td align="center">IN(02)-&gt;AR</td><td align="center">/IO-R, B-AR</td></tr><tr><td align="center">6</td><td align="center">MEM-&gt;R0</td><td align="center">/M-R, B-R0</td></tr><tr><td align="center">7</td><td align="center">R0-&gt;AR</td><td align="center">/R0-B, B-AR</td></tr><tr><td align="center">8</td><td align="center">*(02)-&gt;DA2</td><td align="center">/M-R, B-DA2</td></tr><tr><td align="center">9</td><td align="center">IN(03)-&gt;AR</td><td align="center">/IO-R, B-AR</td></tr><tr><td align="center">10</td><td align="center">MEM-&gt;R0</td><td align="center">/M-R, B-R0</td></tr><tr><td align="center">11</td><td align="center">R0-&gt;AR</td><td align="center">/R0-B, B-AR</td></tr><tr><td align="center">12</td><td align="center">LU(加法)-&gt;MEM</td><td align="center">/ALU-B, S3~S0MCI=100101, /M-W</td></tr><tr><td align="center">13</td><td align="center">MEM-&gt;OUT</td><td align="center">/M-R, IO-W</td></tr></tbody></table></blockquote><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">地址    数据</span><br><span class="line">01H     80H</span><br><span class="line">02H     40H</span><br><span class="line">03H     C0H</span><br><span class="line">40H     11H</span><br><span class="line">80H     22H</span><br><span class="line">C0H     33H</span><br></pre></td></tr></table></figure><h3 id="实验结果与结论"><a href="#实验结果与结论" class="headerlink" title="实验结果与结论"></a>实验结果与结论</h3><blockquote><p><strong>略</strong></p></blockquote><h3 id="存在疑问"><a href="#存在疑问" class="headerlink" title="存在疑问"></a>存在疑问</h3><blockquote><p><strong>略</strong></p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验7&quot;&gt;&lt;a href=&quot;#计算机组成原理实验7&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验7&quot;&gt;&lt;/a&gt;计算机组成原理实验7&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Logisim实验 - 4位快速加法器</title>
    <link href="https://coleduck.cn/2023/05/14/0001-06/"/>
    <id>https://coleduck.cn/2023/05/14/0001-06/</id>
    <published>2023-05-14T06:09:32.003Z</published>
    <updated>2023-06-18T03:41:32.962Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验6"><a href="#计算机组成原理实验6" class="headerlink" title="计算机组成原理实验6"></a>计算机组成原理实验6</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">•   掌握先行进位的原理</span><br><span class="line">•   能利用相关知识设计4位先行进位电路并利用设计的4位先行进位电路构造4位快速加法器</span><br><span class="line">•   理解串行加法器与先行快速加法器在时间延迟上的区别</span><br></pre></td></tr></table></figure><br><h2 id="实验原理"><a href="#实验原理" class="headerlink" title="实验原理"></a>实验原理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果能打破进位链依赖，提前得到所有全加器所需的进位输入信号，则所有全加器都可以并行运算，从而提高</span><br><span class="line">运算性能。n位串行加法电路中和数与进位输出的逻辑表达式如下：</span><br><span class="line">Si = Xi ⊕ Yi ⊕ Ci          Ci+1 = Xi&amp;Yi + (Xi ⊕ Yi)&amp;Ci</span><br><span class="line">若设Gi = Xi&amp;Yi，Pi = Xi ⊕ Yi：</span><br><span class="line">当Gi=1时，Ci+1一定为1，所以将Gi称为进位生成函数；</span><br><span class="line">当Pi=1时，进位输入信号Ci才能传递到进位输出Ci+1处，所以将Pi称为进位传递函数。</span><br><span class="line"></span><br><span class="line">有了进位生成函数和进位传递函数，则Si和Ci+1可转换为：</span><br><span class="line">Si = Pi ⊕ Ci           Ci+1 = Gi + Pi&amp;Ci</span><br><span class="line">由递推关系推导可得到：</span><br><span class="line">Cn = Gn-1 + Pn-1&amp;Gn-2 + Pn-1&amp;Pn-2&amp;Gn-3 + … + Pn-1&amp;Pn-2…P1&amp;P0&amp;C0</span><br><span class="line">由此我们可以利用额外的组合逻辑电路提前产生各位加法运算需要的所有进位输入，再利用Si=Pi ⊕ Ci进行</span><br><span class="line">一级异或门运算即可得到最终的和数。</span><br><span class="line"></span><br><span class="line">G* = G3 + P3&amp;G2 + P3&amp;P2&amp;G1 + P3&amp;P2&amp;P1&amp;G0，称为成组进位生成函数；</span><br><span class="line">P* = P3&amp;P2&amp;P1&amp;P0 ，称为成组进位传递函数。</span><br><span class="line">则有C4 = G* + P&amp;C0</span><br><span class="line"></span><br><span class="line">(tips:  &#x27;+&#x27; 代表或 , &#x27;&amp;&#x27; 代表与 , &#x27;⊕&#x27; 代表异或)</span><br></pre></td></tr></table></figure><br><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用logisim打开“实验06 4位快速加法器（教学版）.circ”文件。</span><br><span class="line"></span><br><span class="line">1. 完成“4位先行进位74182”子电路（注意不要改变封装）。</span><br><span class="line">2. 完成“4位快速加法器”电路。</span><br><span class="line">3. 保存电路文件为“学号姓名实验06.circ”并上传到ftp相关目录（实验06）。</span><br></pre></td></tr></table></figure><br><h2 id="4位先行进位74182"><a href="#4位先行进位74182" class="headerlink" title="4位先行进位74182"></a>4位先行进位74182</h2><mark class="hl-label green">连线图</mark> <p><img src="https://s2.loli.net/2023/04/19/eGHMLBmQPkzbKNf.png" alt="4位先行进位74182-0.png"></p><mark class="hl-label green">封装电路图</mark> <p><img src="https://s2.loli.net/2023/04/19/TLvzSpOf6uN3snt.png" alt="4位先行进位74182-1.png"></p><h2 id="4位快速加法器"><a href="#4位快速加法器" class="headerlink" title="4位快速加法器"></a>4位快速加法器</h2><p>采用了 ‘4位先行进位74182’ 的封装电路</p><p><img src="https://s2.loli.net/2023/04/19/uXe4Lz8UGy5F2CN.png" alt="4位快速加法器.png"></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验6&quot;&gt;&lt;a href=&quot;#计算机组成原理实验6&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验6&quot;&gt;&lt;/a&gt;计算机组成原理实验6&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="Logisim" scheme="https://coleduck.cn/tags/Logisim/"/>
    
  </entry>
  
  <entry>
    <title>Logisim实验 - 8位串行可控加减法</title>
    <link href="https://coleduck.cn/2023/05/14/0001-05/"/>
    <id>https://coleduck.cn/2023/05/14/0001-05/</id>
    <published>2023-05-14T06:09:32.001Z</published>
    <updated>2023-06-18T03:41:44.362Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验5"><a href="#计算机组成原理实验5" class="headerlink" title="计算机组成原理实验5"></a>计算机组成原理实验5</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">•   理解多位可控加减法电路的实现原理</span><br><span class="line">•   了解隧道标签和探针的作用</span><br><span class="line">•   掌握logisim子电路封装的方法</span><br><span class="line">•   掌握logisim子电路的使用方法</span><br></pre></td></tr></table></figure><br><h2 id="实验原理"><a href="#实验原理" class="headerlink" title="实验原理"></a>实验原理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">将n个全加器的进位链串联，即可得到n位串行加法器。</span><br><span class="line">两个操作数Xn-1Xn-2···X0与Yn-1Yn-2···Y0相加，和为Sn-1Sn-2···S0 。Xn-1与Yn-1为符号位，Cn为最</span><br><span class="line">高位进位，溢出检测信号overflow= CnꚚCn-1。</span><br><span class="line"></span><br><span class="line">由于补码运算的特殊性质，减法可以通过加法实现，只需将减数Y的补码进行适当变化后送入加法器中即可实</span><br><span class="line">现减法运算，具体公式如下：</span><br><span class="line">[X-Y]补 = [X]补 + [-Y]补 = [X]补 - [Y]补</span><br><span class="line">[-Y]补 = -[Y]补 ------- [-Y]补可以通过对[Y]补连同符号位一起逐位取反、末位加1来得到。</span><br><span class="line"></span><br><span class="line">在n位串行加法器的基础上，增加一个加减控制信号Sub。当Sub =0时，正常进行加法运算；当Sub=1时进行减</span><br><span class="line">法运算，实际就是利用Sub信号来实现减数的逐位取反、末位加1，然后进行加法运算。当进行有符号减法时，</span><br><span class="line">溢出判断与加法相同。</span><br></pre></td></tr></table></figure><br><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">利用logisim打开“实验05 8位串行可控加减法（教学版）.circ”文件。</span><br><span class="line"></span><br><span class="line">1. 添加电路“一位全加器FA封装”，实现一位全加器的子电路，其电路封装与引脚功能描述如表1。</span><br><span class="line">2. 在对应子电路中利用已封装好的全加器设计8位串行加法器电路，其电路封装与引脚功能描述如表2。</span><br><span class="line">3. 在对应子电路中利用已封装好的全加器设计8位串行可控加减法电路，其电路封装与引脚功能描述如表3。</span><br><span class="line">4. 保存电路文件为“学号姓名实验05.circ”并上传到ftp相关目录（实验05）。</span><br></pre></td></tr></table></figure><br><h2 id="一位全加器FA"><a href="#一位全加器FA" class="headerlink" title="一位全加器FA"></a>一位全加器FA</h2><mark class="hl-label green">连线图</mark> <p><img src="https://s2.loli.net/2023/04/19/nptCu1w4xVIgBNP.png" alt="一位全加器FA-0.png"></p><mark class="hl-label green">封装电路图</mark> <p><img src="https://s2.loli.net/2023/04/19/4jbEwc5vkCrO3NM.png" alt="一位全加器FA-1.png"></p><h2 id="八位可控加减法器"><a href="#八位可控加减法器" class="headerlink" title="八位可控加减法器"></a>八位可控加减法器</h2><p>采用了 ‘一位全加器FA’ 的封装电路</p><p><img src="https://s2.loli.net/2023/04/19/qxg64U8tHhIN3Y2.png" alt="8位可控加减法器.png"></p><h2 id="八位桶形移位器"><a href="#八位桶形移位器" class="headerlink" title="八位桶形移位器"></a>八位桶形移位器</h2><p>采用了八位二路选择器的封装电路</p><p><img src="https://s2.loli.net/2023/04/19/1OI3ncMiYdHsRGV.png" alt="八位桶形移位器.png"></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验5&quot;&gt;&lt;a href=&quot;#计算机组成原理实验5&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验5&quot;&gt;&lt;/a&gt;计算机组成原理实验5&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="Logisim" scheme="https://coleduck.cn/tags/Logisim/"/>
    
  </entry>
  
  <entry>
    <title>Logisim实验 - 8位桶形移位器</title>
    <link href="https://coleduck.cn/2023/05/14/0001-04/"/>
    <id>https://coleduck.cn/2023/05/14/0001-04/</id>
    <published>2023-05-14T06:09:32.000Z</published>
    <updated>2023-06-18T03:41:51.007Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验4"><a href="#计算机组成原理实验4" class="headerlink" title="计算机组成原理实验4"></a>计算机组成原理实验4</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">•   了解桶形移位器的工作原理</span><br><span class="line">•   掌握多路选择器、移位器、分线器的使用方法</span><br></pre></td></tr></table></figure><br><h2 id="实验原理"><a href="#实验原理" class="headerlink" title="实验原理"></a>实验原理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对于固定位数的移位运算，逻辑实现不需要逻辑器件，只需要对原有数据位进行简单重组即可。</span><br><span class="line">对于可变参数的移位运算，可分解成若干个固定位数的移位运算的组合来实现。例如x&lt;&lt;y，假设x为32位变</span><br><span class="line">量，移位参数y为5位变量，则可以将可变移位运算按权值分解成5个固定位数的移位运算（1、2、4、8、16）</span><br><span class="line">的组合，其实现电路常称为桶形移位器。</span><br><span class="line">下图为桶形移位器的原理图，虚线所示路径为y=5的运算路径。</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/04/19/xFPwq3oQDdz6IkJ.png" alt="ppt.png"></p><br><h2 id="实验内容"><a href="#实验内容" class="headerlink" title="实验内容"></a>实验内容</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 设计一个桶形移位器电路，使得32位输入数据X能够进行可变位数的移位操作。</span><br><span class="line">2. 使用戳工具测试上述电路。</span><br></pre></td></tr></table></figure><br><h2 id="一位二路选择器"><a href="#一位二路选择器" class="headerlink" title="一位二路选择器"></a>一位二路选择器</h2><mark class="hl-label green">连线图</mark> <p><img src="https://s2.loli.net/2023/04/19/pWJiLsbkGoVmXvj.png" alt="一位二路选择器-0.png"></p><mark class="hl-label green">封装电路图</mark> <p><img src="https://s2.loli.net/2023/04/19/ZrQodUXkDSc1w2g.png" alt="一位二路选择器-1.png"></p><h2 id="八位二路选择器"><a href="#八位二路选择器" class="headerlink" title="八位二路选择器"></a>八位二路选择器</h2><p>采用了 ‘一位二路选择器’ 的封装电路</p><mark class="hl-label green">连线图</mark> <p><img src="https://s2.loli.net/2023/04/19/qkeXRJ6YcMa5mNf.png" alt="八位二路选择器-1.png"></p><mark class="hl-label green">封装电路图</mark> <p><img src="https://s2.loli.net/2023/04/19/16JvlnEpLmWOVuZ.png" alt="八位二路选择器-0.png"></p><h2 id="八位桶形移位器"><a href="#八位桶形移位器" class="headerlink" title="八位桶形移位器"></a>八位桶形移位器</h2><p>采用了 ‘八位二路选择器’ 的封装电路</p><p><img src="https://s2.loli.net/2023/04/19/1OI3ncMiYdHsRGV.png" alt="八位桶形移位器.png"></p><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验4&quot;&gt;&lt;a href=&quot;#计算机组成原理实验4&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验4&quot;&gt;&lt;/a&gt;计算机组成原理实验4&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="Logisim" scheme="https://coleduck.cn/tags/Logisim/"/>
    
  </entry>
  
  <entry>
    <title>计组实验 - 移位运算器</title>
    <link href="https://coleduck.cn/2023/05/14/0001-03/"/>
    <id>https://coleduck.cn/2023/05/14/0001-03/</id>
    <published>2023-05-14T06:09:31.998Z</published>
    <updated>2023-06-18T03:42:20.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验3"><a href="#计算机组成原理实验3" class="headerlink" title="计算机组成原理实验3"></a>计算机组成原理实验3</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">•   了解移位寄存器芯片（74LS299）的逻辑功能</span><br><span class="line">•   了解移位控制实验中数据输入、左移、右移方法及在实际中的用处</span><br><span class="line">•   验证移位控制的组合功能</span><br></pre></td></tr></table></figure><br><h2 id="实验内容及原理"><a href="#实验内容及原理" class="headerlink" title="实验内容及原理"></a>实验内容及原理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;实验内容一：</span><br><span class="line"></span><br><span class="line">(1)将数据80H实现循环右移</span><br><span class="line">(2)将数据01H实现循环左移</span><br><span class="line">(3)验证带CY循环移位和不带CY循环移位的区别</span><br><span class="line">(4)不带CY循环右移操作流程</span><br><span class="line">(5)尝试把时钟单元的开关“STEP”切换为“RUN”来连续循环移位。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;实验内容二：</span><br><span class="line"></span><br><span class="line">(1)计算数据F0H*3/4，把结果输出到输出部件（OUT）。</span><br><span class="line">(2)F0H*3/4=F0H*(1/2+1/4)=F0H*(1-1/4)</span><br><span class="line">(3)乘以1/2相当于右移一位，乘以1/4相当于右移两位</span><br><span class="line">(4)移一位需要一个时钟脉冲（T4），移两位需要两个时钟脉冲</span><br><span class="line">(5)如果是乘以5/8，应该怎样做？</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;实验原理：</span><br><span class="line"></span><br><span class="line">74LS299芯片主要引脚功能：</span><br><span class="line">•   IO7-IO0：8位数据输入输出，芯片的数据输入/输出共用一个引脚。</span><br><span class="line">•   S0、S1：功能控制端，控制数据输入、左移、右移等逻辑功能。</span><br><span class="line">•   OE1、OE2：使能端，低电平有效。</span><br><span class="line">•   CP：时钟输入端，数据的输入、移位需要在时钟脉冲的同步控制下执行。</span><br><span class="line">•   MR：清零端，低电平有效，清零移位寄存器。</span><br><span class="line">•   Q7：高位左移输出，左移时接受D7的信号。</span><br><span class="line">•   Q0：低位右移输出，右移时接受D0的信号。</span><br><span class="line">•   DS7：高位右移输入，右移时向D7输入信号。</span><br><span class="line">•   DS0：低位左移输入，左移时向D0输入信号。</span><br></pre></td></tr></table></figure><br><h2 id="实验主要仪器设备"><a href="#实验主要仪器设备" class="headerlink" title="实验主要仪器设备"></a>实验主要仪器设备</h2><blockquote><p><strong>略</strong></p></blockquote><br><h2 id="实验步骤、数据记录及总结分析"><a href="#实验步骤、数据记录及总结分析" class="headerlink" title="实验步骤、数据记录及总结分析"></a>实验步骤、数据记录及总结分析</h2><h3 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h3><blockquote><mark class="hl-label orange">&nbsp</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Input unit/#IO-R</td><td align="center">Manual unit/#IO-R</td></tr><tr><td align="center">2</td><td align="center">Output unit/#IO-W</td><td align="center">Manual unit/#IO-W</td></tr><tr><td align="center">3</td><td align="center">ALU unit/#/ALU-B</td><td align="center">Manual unit/#/ALU-B</td></tr><tr><td align="center">4</td><td align="center">ALU unit/#/299-B</td><td align="center">Manual unit/#/299-B</td></tr><tr><td align="center">5</td><td align="center">ALU unit/#S3~S0MCI</td><td align="center">Manual unit/#S3~S0MCI</td></tr><tr><td align="center">6</td><td align="center">ALU unit/#B-DA1</td><td align="center">Manual unit/#B-DA1</td></tr><tr><td align="center">7</td><td align="center">ALU unit/#B-DA2</td><td align="center">Manual unit/#B-DA2</td></tr><tr><td align="center">8</td><td align="center">ALU unit/#/CYCN</td><td align="center">Manual unit/#/CYCN</td></tr><tr><td align="center">9</td><td align="center">ALU unit/#/CYNCN</td><td align="center">Manual unit/#/CYNCN</td></tr><tr><td align="center">10</td><td align="center">Main Control unit/#T4</td><td align="center">Clock unit/#T4</td></tr></tbody></table></blockquote><h3 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h3><blockquote><mark class="hl-label blue">不带CY循环右移</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN-&gt;299</td><td align="center">/IO-R, (S1S0)=11,T4</td></tr><tr><td align="center">2</td><td align="center">299不带CY循环右移-&gt;OUT</td><td align="center">/299-B,(S1S0,M)=100,T4,B-IO-W</td></tr></tbody></table></blockquote><blockquote><mark class="hl-label blue">FOH×3/4的减法实现</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN-&gt;DA1</td><td align="center">/IO-R,B-DA1</td></tr><tr><td align="center">2</td><td align="center">IN-&gt;299</td><td align="center">/IO-R,(S1S0)=11,T4</td></tr><tr><td align="center">3</td><td align="center">299右移2次-&gt;DA2</td><td align="center">/299-B,(S1S0)=10,T4,T4,B-DA2</td></tr><tr><td align="center">4</td><td align="center">ALU-&gt;OUT</td><td align="center">/ALU-B,(S3~S0,M,CI)=011000,IO-W</td></tr></tbody></table></blockquote><blockquote><mark class="hl-label blue">FOH×3/4的加法实现</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN-&gt;299</td><td align="center">/IO-R,(S1S0)=11,T4</td></tr><tr><td align="center">2</td><td align="center">299右移1次-&gt;DA1</td><td align="center">/299-B,(S1S0,M)=100,T4,B-DA1</td></tr><tr><td align="center">3</td><td align="center">IN-&gt;299</td><td align="center">/IO-R,(S1S0)=11,T4</td></tr><tr><td align="center">4</td><td align="center">299右移2次-&gt;DA2</td><td align="center">/299-B,(S1S0,M)=100,T4,T4,B-DA2</td></tr><tr><td align="center">5</td><td align="center">ALU-&gt;OUT</td><td align="center">/ALU-B,(S3~S0,M,CI)=100101,IO-W</td></tr></tbody></table></blockquote><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><blockquote><ol><li>进行四种移位实验：不带CY循环右移、带CY循环右移、不带CY循环左移、带CY循环左移。<br>每移一位，观察总线上的数据显示，并记录到下表中：<table><thead><tr><th align="center">T4次数</th><th align="center">不带CY循环右移</th><th align="center">带CY循环右移</th><th align="center">不带CY循环左移</th><th align="center">带CY循环左移</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">10000000</td><td align="center">10110110</td><td align="center">10001000</td><td align="center">11011101</td></tr><tr><td align="center">1</td><td align="center">01000000</td><td align="center">01011011</td><td align="center">00010001</td><td align="center">10111010</td></tr><tr><td align="center">2</td><td align="center">00100000</td><td align="center">00101101</td><td align="center">00100010</td><td align="center">01110101</td></tr><tr><td align="center">3</td><td align="center">00010000</td><td align="center">10010110</td><td align="center">01000100</td><td align="center">11101011</td></tr><tr><td align="center">4</td><td align="center">00001000</td><td align="center">11001011</td><td align="center">10001000</td><td align="center">11010110</td></tr><tr><td align="center">5</td><td align="center">00000100</td><td align="center">01100101</td><td align="center">00010001</td><td align="center">10101101</td></tr><tr><td align="center">6</td><td align="center">00000010</td><td align="center">10110010</td><td align="center">00100010</td><td align="center">01011011</td></tr><tr><td align="center">7</td><td align="center">00000001</td><td align="center">11011001</td><td align="center">01000100</td><td align="center">10110111</td></tr><tr><td align="center">8</td><td align="center">10000000</td><td align="center">01101100</td><td align="center">10001000</td><td align="center">01101110</td></tr><tr><td align="center">9</td><td align="center">01000000</td><td align="center">10110110</td><td align="center">00010001</td><td align="center">11011101</td></tr></tbody></table></li></ol></blockquote><blockquote><ol start="2"><li>FOH × 3/4 = B4H</li></ol></blockquote><h3 id="实验结果与结论"><a href="#实验结果与结论" class="headerlink" title="实验结果与结论"></a>实验结果与结论</h3><blockquote><p><strong>略</strong></p></blockquote><h3 id="存在疑问"><a href="#存在疑问" class="headerlink" title="存在疑问"></a>存在疑问</h3><blockquote><p><strong>略</strong></p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验3&quot;&gt;&lt;a href=&quot;#计算机组成原理实验3&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验3&quot;&gt;&lt;/a&gt;计算机组成原理实验3&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="EDA实验箱" scheme="https://coleduck.cn/tags/EDA%E5%AE%9E%E9%AA%8C%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>计组实验 - 算术运算</title>
    <link href="https://coleduck.cn/2023/05/14/0001-02/"/>
    <id>https://coleduck.cn/2023/05/14/0001-02/</id>
    <published>2023-05-14T06:09:31.996Z</published>
    <updated>2023-06-18T03:42:18.869Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验2"><a href="#计算机组成原理实验2" class="headerlink" title="计算机组成原理实验2"></a>计算机组成原理实验2</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">•   了解简单运算器的数据传输方式</span><br><span class="line">•   验证运算器芯片（74LS181）的算术运算功能</span><br><span class="line">•   了解运算标志位，掌握进位标志位、零标志位的判定方法以及它们在运算中的作用</span><br></pre></td></tr></table></figure><br><h2 id="实验内容及原理"><a href="#实验内容及原理" class="headerlink" title="实验内容及原理"></a>实验内容及原理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;实验内容一：</span><br><span class="line"></span><br><span class="line">根据P68表11-4，验证“操作”列各项操作理论运算结果与实验结果是否一致，并完成表格。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;实验内容二：</span><br><span class="line"></span><br><span class="line">(1)从输入部件（INPUT）自行输入两个数送入ALU部件进行减法运算，</span><br><span class="line">   判断借位标志CY和零标志ZI，以比较两个数的大小。</span><br><span class="line">(2)实现3465H和12A7H相加和相减结果保存到两个通用寄存器中并读出。</span><br><span class="line">(3)加法操作流程</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&gt;实验原理：</span><br><span class="line"></span><br><span class="line">74LS181芯片主要引脚功能：</span><br><span class="line">•   A[3..0]：第一组操作数据输入端。</span><br><span class="line">•   B[3..0]：第二组操作数据输人端。</span><br><span class="line">•   F[3..0]：操作结果数据输出端。</span><br><span class="line">•   S[3..0]：操作功能控制端。</span><br><span class="line">•   CN：低端进位接收端。</span><br><span class="line">•   CN4:高端进位输出端。</span><br><span class="line">•   M：算术/逻辑功能控制端。</span><br><span class="line"></span><br><span class="line">算术运算标志位：</span><br><span class="line">•   进位标志CF</span><br><span class="line">        运算结果最高位产生进位或借位，其值为1；否则为0。</span><br><span class="line">        常用于加减运算、无符号数比较大小等。</span><br><span class="line">•   零标志ZF</span><br><span class="line">        如果运算结果为0，则其值为1；否则为0。</span><br><span class="line">        可用于判断两数是否相等。</span><br><span class="line">•   奇偶标志PF</span><br><span class="line">        运算结果中“1”的个数为偶数，则其值为1；否则为0。</span><br><span class="line">        可用于数据校验。</span><br><span class="line">•   溢出标志OF</span><br><span class="line">        运算结果溢出，则其值为1；否则为0。</span><br><span class="line">        注意“溢出”和“进位”的区别。</span><br><span class="line"></span><br><span class="line">相关控制信号：</span><br><span class="line">•   T4：外部脉冲信号，判断CY、ZI标志的时钟脉冲。</span><br><span class="line">•   /CLR：清零信号，清除CY、ZI标志的控制信号。</span><br><span class="line">•   /CYCN：带低端进位输入的进位标志CY产生控制端。</span><br><span class="line">•   /CYNCN：不带低端进位输入的进位标志CY产生控制端。</span><br></pre></td></tr></table></figure><br><h2 id="实验主要仪器设备"><a href="#实验主要仪器设备" class="headerlink" title="实验主要仪器设备"></a>实验主要仪器设备</h2><blockquote><p><strong>略</strong></p></blockquote><br><h2 id="实验步骤、数据记录及总结分析"><a href="#实验步骤、数据记录及总结分析" class="headerlink" title="实验步骤、数据记录及总结分析"></a>实验步骤、数据记录及总结分析</h2><h3 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h3><blockquote><mark class="hl-label orange">实验内容一：算术运算</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Input unit/#IO-R</td><td align="center">Manual unit/#IO-R</td></tr><tr><td align="center">2</td><td align="center">Output unit/#IO-W</td><td align="center">Manual unit/#IO-W</td></tr><tr><td align="center">3</td><td align="center">ALU unit/#/ALU-B</td><td align="center">Manual unit/#/ALU-B</td></tr><tr><td align="center">4</td><td align="center">ALU unit/#S3~S0MCI</td><td align="center">Manual unit/#S3~S0MCI</td></tr><tr><td align="center">5</td><td align="center">ALU unit/#B-DA1</td><td align="center">Manual unit/#B-DA1</td></tr><tr><td align="center">6</td><td align="center">ALU unit/#B-DA2</td><td align="center">Manual unit/#B-DA2</td></tr><tr><td align="center">7</td><td align="center">ALU unit/#/CYCN</td><td align="center">Manual unit/#/CYCN</td></tr><tr><td align="center">8</td><td align="center">ALU unit/#/CYNCN</td><td align="center">Manual unit/#/CYNCN</td></tr><tr><td align="center">9</td><td align="center">Main Control unit/#T4</td><td align="center">Clock unit/#T4</td></tr></tbody></table></blockquote><blockquote><mark class="hl-label orange">实验内容二：16位数进（借）位加减法</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Input unit/#IO-R</td><td align="center">Manual unit/#IO-R</td></tr><tr><td align="center">2</td><td align="center">Output unit/#IO-W</td><td align="center">Manual unit/#IO-W</td></tr><tr><td align="center">3</td><td align="center">ALU unit/#/ALU-B</td><td align="center">Manual unit/#B-AR</td></tr><tr><td align="center">4</td><td align="center">ALU unit/#S3~S0MCI</td><td align="center">Manual unit/#S3~S0MCI</td></tr><tr><td align="center">5</td><td align="center">ALU unit/#B-DA1</td><td align="center">Manual unit/#B-DA1</td></tr><tr><td align="center">6</td><td align="center">ALU unit/#B-DA2</td><td align="center">Manual unit/#B-DA2</td></tr><tr><td align="center">7</td><td align="center">ALU unit/#/CYCN</td><td align="center">Manual unit/#/CYCN</td></tr><tr><td align="center">8</td><td align="center">ALU unit/#/CYNCN</td><td align="center">Manual unit/#/CYNCN</td></tr><tr><td align="center">9</td><td align="center">Main Control unit/#T4</td><td align="center">Clock unit/#T4</td></tr><tr><td align="center">10</td><td align="center">REG unit/#B-R1</td><td align="center">Manual unit/#KA</td></tr><tr><td align="center">11</td><td align="center">REG unit/#B-R0</td><td align="center">Manual unit/#KB</td></tr><tr><td align="center">12</td><td align="center">REG unit/#/R1-B</td><td align="center">Manual unit/#/R1-B</td></tr><tr><td align="center">13</td><td align="center">REG unit/#/R0-B</td><td align="center">Manual unit/#/R0-B</td></tr></tbody></table></blockquote><h3 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h3><blockquote><mark class="hl-label blue">实验内容一：算术运算</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN-&gt;DA1</td><td align="center">/IO-R, B-DA1</td></tr><tr><td align="center">2</td><td align="center">IN-&gt;DA2</td><td align="center">/IO-R, B-DA2</td></tr><tr><td align="center">3</td><td align="center">ALU-&gt;OUT</td><td align="center">/ALU-B, S3~S0MCI=100101, IO-W</td></tr></tbody></table></blockquote><blockquote><mark class="hl-label blue">实验内容二：16位数进（借）位加减法</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN-&gt;DA1</td><td align="center">/IO-R, B-DA1</td></tr><tr><td align="center">2</td><td align="center">IN-&gt;DA2</td><td align="center">/IO-R, B-DA2</td></tr><tr><td align="center">3</td><td align="center">ALU-&gt;R0</td><td align="center">B-AR，S3~S0MCI=100101, KA</td></tr><tr><td align="center">4</td><td align="center">判断CY</td><td align="center">/CYCN或/CYNCN, T4</td></tr><tr><td align="center">5</td><td align="center">IN-&gt;DA1</td><td align="center">/IO-R, B-DA1</td></tr><tr><td align="center">6</td><td align="center">IN-&gt;DA2</td><td align="center">/IO-R, B-DA2</td></tr><tr><td align="center">7</td><td align="center">ALU-&gt;R1</td><td align="center">/CYCN, B-AR, S3~S0MCI=100101, KB</td></tr><tr><td align="center">8</td><td align="center">R1-&gt;OUT</td><td align="center">/R1-B, IO-W</td></tr><tr><td align="center">9</td><td align="center">R0-&gt;OUT</td><td align="center">/R0-B, IO-W</td></tr></tbody></table></blockquote><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><blockquote><ol><li>验证F=A，F=B，F=A加B，F=A减B， F=(A+/B)加(A*B)，F=/(A⊕B)运算结果，<br> 验证理论运算结果与实验结果是否一致。（F[7..0]列填16进制数）<table><thead><tr><th align="center">操作</th><th align="center">S[3..0]</th><th align="center">M</th><th align="center">CN</th><th align="center">A[7..0]</th><th align="center">B[7..0]</th><th align="center">F[7..0]</th></tr></thead><tbody><tr><td align="center">F=A</td><td align="center">1111</td><td align="center">1</td><td align="center">x</td><td align="center">65H</td><td align="center">A7H</td><td align="center">65H</td></tr><tr><td align="center">F=B</td><td align="center">1010</td><td align="center">1</td><td align="center">x</td><td align="center">65H</td><td align="center">A7H</td><td align="center">A7H</td></tr><tr><td align="center">F=A加B</td><td align="center">1001</td><td align="center">0</td><td align="center">1</td><td align="center">65H</td><td align="center">A7H</td><td align="center">0CH</td></tr><tr><td align="center">F=A减B</td><td align="center">0110</td><td align="center">0</td><td align="center">0</td><td align="center">65H</td><td align="center">A7H</td><td align="center">BEH</td></tr><tr><td align="center">F=(A+/B)加(A*B)</td><td align="center">1010</td><td align="center">0</td><td align="center">1</td><td align="center">65H</td><td align="center">A7H</td><td align="center">A2H</td></tr><tr><td align="center">F=/(A⊕B)</td><td align="center">1001</td><td align="center">1</td><td align="center">x</td><td align="center">65H</td><td align="center">A7H</td><td align="center">3DH</td></tr></tbody></table></li></ol></blockquote><blockquote><ol start="2"><li>3465H + 12A7H = 470CH<br> 3465H - 12A7H = 21BEH</li></ol></blockquote><h3 id="实验结果与结论"><a href="#实验结果与结论" class="headerlink" title="实验结果与结论"></a>实验结果与结论</h3><blockquote><p><strong>略</strong></p></blockquote><h3 id="存在疑问"><a href="#存在疑问" class="headerlink" title="存在疑问"></a>存在疑问</h3><blockquote><p><strong>略</strong></p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验2&quot;&gt;&lt;a href=&quot;#计算机组成原理实验2&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验2&quot;&gt;&lt;/a&gt;计算机组成原理实验2&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="EDA实验箱" scheme="https://coleduck.cn/tags/EDA%E5%AE%9E%E9%AA%8C%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>计组实验 - 输入输出控制</title>
    <link href="https://coleduck.cn/2023/05/14/0001-01/"/>
    <id>https://coleduck.cn/2023/05/14/0001-01/</id>
    <published>2023-05-14T06:09:31.994Z</published>
    <updated>2023-06-18T03:42:16.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="计算机组成原理实验1"><a href="#计算机组成原理实验1" class="headerlink" title="计算机组成原理实验1"></a>计算机组成原理实验1</h1><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">•   熟悉实验台基本结构，了解各模块功能；</span><br><span class="line">•   理解控制信号的基本概念和作用；</span><br><span class="line">•   掌握输入模块与输出模块的功能、原理和操作方法。</span><br></pre></td></tr></table></figure><br><h2 id="实验内容及原理"><a href="#实验内容及原理" class="headerlink" title="实验内容及原理"></a>实验内容及原理</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&gt;实验内容：</span><br><span class="line">(1)实现从输入部件输入一个数据65H，并将之通过总线BUS从输出部件输出</span><br><span class="line">(2)把输入部件（INPUT）上的数据65H送到总线(BUS)：IN  BUS，涉及控制信号/IO-R。</span><br><span class="line">(3)把总线(BUS)上的数据送到输出部件(OUT)：BUS OUT，涉及控制信号/IO-W。</span><br><span class="line">(4)数据变换操作（clock单元代替开关）,OUT单元的数据随着INPUT单元的数据变化而变化（连续脉冲）。</span><br></pre></td></tr></table></figure><br><h2 id="实验主要仪器设备"><a href="#实验主要仪器设备" class="headerlink" title="实验主要仪器设备"></a>实验主要仪器设备</h2><blockquote><p><strong>略</strong></p></blockquote><br><h2 id="实验步骤、数据记录及总结分析"><a href="#实验步骤、数据记录及总结分析" class="headerlink" title="实验步骤、数据记录及总结分析"></a>实验步骤、数据记录及总结分析</h2><h3 id="连线"><a href="#连线" class="headerlink" title="连线"></a>连线</h3><blockquote><mark class="hl-label orange">实验内容：简单的输入输出</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">Input unit/#IO-R</td><td align="center">Manual unit/#IO-R</td></tr><tr><td align="center">2</td><td align="center">Output unit/#IO-W</td><td align="center">Manual unit/#IO-W</td></tr></tbody></table></blockquote><h3 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h3><blockquote><mark class="hl-label blue">实验内容：简单的输入输出</mark> <table><thead><tr><th align="center">序号</th><th align="center">源单元/源控制信号</th><th align="center">目的单元/目的控制信号</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">IN-&gt;OUT</td><td align="center">/IO-R, IO-W</td></tr></tbody></table></blockquote><h3 id="实验数据"><a href="#实验数据" class="headerlink" title="实验数据"></a>实验数据</h3><blockquote><p><strong>略</strong></p></blockquote><h3 id="实验结果与结论"><a href="#实验结果与结论" class="headerlink" title="实验结果与结论"></a>实验结果与结论</h3><blockquote><p><strong>略</strong></p></blockquote><h3 id="存在疑问"><a href="#存在疑问" class="headerlink" title="存在疑问"></a>存在疑问</h3><blockquote><p><strong>略</strong></p></blockquote><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;计算机组成原理实验1&quot;&gt;&lt;a href=&quot;#计算机组成原理实验1&quot; class=&quot;headerlink&quot; title=&quot;计算机组成原理实验1&quot;&gt;&lt;/a&gt;计算机组成原理实验1&lt;/h1&gt;&lt;h2 id=&quot;实验目的&quot;&gt;&lt;a href=&quot;#实验目的&quot; class=&quot;head</summary>
      
    
    
    
    <category term="计算机组成原理实验课" scheme="https://coleduck.cn/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86%E5%AE%9E%E9%AA%8C%E8%AF%BE/"/>
    
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="计算机组成原理" scheme="https://coleduck.cn/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/"/>
    
    <category term="EDA实验箱" scheme="https://coleduck.cn/tags/EDA%E5%AE%9E%E9%AA%8C%E7%AE%B1/"/>
    
  </entry>
  
  <entry>
    <title>Qt实验 - 事件，随机数和计时器练习</title>
    <link href="https://coleduck.cn/2023/05/14/0002-08/"/>
    <id>https://coleduck.cn/2023/05/14/0002-08/</id>
    <published>2023-05-14T06:09:31.990Z</published>
    <updated>2023-06-18T10:08:12.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验8"><a href="#C-桌面应用程序实验8" class="headerlink" title="C++桌面应用程序实验8"></a>C++桌面应用程序实验8</h1><h2 id="第1题"><a href="#第1题" class="headerlink" title="第1题"></a>第1题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">做一窗口，上面有一按钮</span><br><span class="line">（1）按下鼠标左键并拖动鼠标，按钮随着鼠标的光标移动，同时在状态栏显示鼠标以用户区坐标系表示的位置坐标；</span><br><span class="line">（2）当输入焦点在窗口上时，按下键盘上的Ctrl同时按下M的时候，窗口最大化显示；</span><br><span class="line">（3）做弹出式菜单“窗口”，下面三个菜单项“最大”“最小”“普通”，要求菜单项需要有图标，图标自定，要求使用qt的资</span><br><span class="line">     源；实现三个菜单项对应的功能；</span><br><span class="line">（4）在工具栏上添加上述三个菜单项所对应的Action。</span><br><span class="line">（5）在窗口上双击鼠标左键，窗口最大化，双击右键，由最大化恢复。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">dragpushbutton.h</button></li><li class="tab"><button type="button" data-href="#-2">dragpushbutton.cpp</button></li><li class="tab"><button type="button" data-href="#-3">mainwindow.h</button></li><li class="tab"><button type="button" data-href="#-4">mainwindow.cpp</button></li><li class="tab"><button type="button" data-href="#-5">注意事项！</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> DRAGPUSHBUTTON_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DRAGPUSHBUTTON_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMouseEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DragPushButton</span> : <span class="keyword">public</span> QPushButton</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">DragPushButton</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QPoint pressPoint;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// DRAGPUSHBUTTON_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dragpushbutton.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QString&gt;</span></span></span><br><span class="line"></span><br><span class="line">DragPushButton::<span class="built_in">DragPushButton</span>(QWidget *parent) : <span class="built_in">QPushButton</span>(parent)&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DragPushButton::mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(event-&gt;<span class="built_in">button</span>() == Qt::LeftButton)&#123;</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">raise</span>(); <span class="comment">//将此按钮移动到顶层显示</span></span><br><span class="line">        <span class="keyword">this</span>-&gt;pressPoint = event-&gt;<span class="built_in">pos</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">DragPushButton::mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(event-&gt;<span class="built_in">buttons</span>() == Qt::LeftButton)&#123;</span><br><span class="line">        QPoint curPos = <span class="keyword">this</span>-&gt;<span class="built_in">mapToParent</span>(event-&gt;<span class="built_in">pos</span>() - <span class="keyword">this</span>-&gt;pressPoint);</span><br><span class="line"><span class="comment">//        QString str = QString(&quot;按钮当前位置: (%1 , %2)&quot;).arg(event-&gt;pos().x()).arg(event-&gt;pos().y());</span></span><br><span class="line">        QString str = <span class="built_in">QString</span>(<span class="string">&quot;按钮相对全屏所在位置: (%1 , %2)&quot;</span>).<span class="built_in">arg</span>(curPos.<span class="built_in">x</span>()).<span class="built_in">arg</span>(curPos.<span class="built_in">y</span>());</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">move</span>(curPos);</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">        <span class="comment">//防止按钮移出父窗口</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;<span class="built_in">mapToParent</span>(<span class="keyword">this</span>-&gt;<span class="built_in">rect</span>().<span class="built_in">topLeft</span>()).<span class="built_in">x</span>() &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">move</span>(<span class="number">0</span>, <span class="keyword">this</span>-&gt;<span class="built_in">pos</span>().<span class="built_in">y</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;<span class="built_in">mapToParent</span>(<span class="keyword">this</span>-&gt;<span class="built_in">rect</span>().<span class="built_in">bottomRight</span>()).<span class="built_in">x</span>() &gt;= <span class="keyword">this</span>-&gt;<span class="built_in">parentWidget</span>()-&gt;<span class="built_in">rect</span>().<span class="built_in">width</span>())&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">move</span>(<span class="keyword">this</span>-&gt;<span class="built_in">parentWidget</span>()-&gt;<span class="built_in">rect</span>().<span class="built_in">width</span>() - <span class="keyword">this</span>-&gt;<span class="built_in">width</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">pos</span>().<span class="built_in">y</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;<span class="built_in">mapToParent</span>(<span class="keyword">this</span>-&gt;<span class="built_in">rect</span>().<span class="built_in">topLeft</span>()).<span class="built_in">y</span>() &lt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">move</span>(<span class="keyword">this</span>-&gt;<span class="built_in">pos</span>().<span class="built_in">x</span>(), <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>-&gt;<span class="built_in">mapToParent</span>(<span class="keyword">this</span>-&gt;<span class="built_in">rect</span>().<span class="built_in">bottomRight</span>()).<span class="built_in">y</span>() &gt;= <span class="keyword">this</span>-&gt;<span class="built_in">parentWidget</span>()-&gt;<span class="built_in">rect</span>().<span class="built_in">height</span>())&#123;</span><br><span class="line">            <span class="keyword">this</span>-&gt;<span class="built_in">move</span>(<span class="keyword">this</span>-&gt;<span class="built_in">pos</span>().<span class="built_in">x</span>(), <span class="keyword">this</span>-&gt;<span class="built_in">parentWidget</span>()-&gt;<span class="built_in">rect</span>().<span class="built_in">height</span>() - <span class="keyword">this</span>-&gt;<span class="built_in">height</span>());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MAINWINDOW_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAINWINDOW_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;dragpushbutton.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMenu&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMenuBar&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QAction&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MainWindow</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span> : <span class="keyword">public</span> QMainWindow</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseDoubleClickEvent</span><span class="params">(QMouseEvent *event)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mousePressEvent</span><span class="params">(QMouseEvent *event)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">keyPressEvent</span><span class="params">(QKeyEvent *event)</span> <span class="keyword">override</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QPoint offset;</span><br><span class="line"></span><br><span class="line">    QMenu pMenu;</span><br><span class="line"></span><br><span class="line">    DragPushButton *pbDrag;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">onTaskBoxContextMenuEvent</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_MainWindow_customContextMenuRequested</span><span class="params">(<span class="type">const</span> QPoint &amp;pos)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MainWindow</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MainWindow</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MainWindow *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MAINWINDOW_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mainwindow.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMouseEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QKeyEvent&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QLabel&gt;</span></span></span><br><span class="line"></span><br><span class="line">MainWindow::<span class="built_in">MainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 可拖动的按钮</span></span><br><span class="line">    pbDrag = <span class="keyword">new</span> <span class="built_in">DragPushButton</span>(<span class="keyword">this</span>);</span><br><span class="line">    pbDrag-&gt;<span class="built_in">resize</span>(<span class="number">300</span>, <span class="number">100</span>);</span><br><span class="line">    pbDrag-&gt;<span class="built_in">move</span>(<span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">statusBar</span>()-&gt;<span class="built_in">showMessage</span>(<span class="string">&quot;Status is here...&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mousePressEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event-&gt;<span class="built_in">button</span>() == Qt::LeftButton)</span><br><span class="line">    &#123;</span><br><span class="line">        QCursor cursor;</span><br><span class="line">        cursor.<span class="built_in">setShape</span>(Qt::CrossCursor);</span><br><span class="line">        QApplication::<span class="built_in">setOverrideCursor</span>(cursor);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mouseReleaseEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">Q_UNUSED</span>(event);</span><br><span class="line">    QApplication::<span class="built_in">restoreOverrideCursor</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mouseMoveEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString str = <span class="built_in">QString</span>(<span class="string">&quot;鼠标在用户区的坐标: (%1 , %2)&quot;</span>).<span class="built_in">arg</span>(event-&gt;<span class="built_in">pos</span>().<span class="built_in">x</span>()).<span class="built_in">arg</span>(event-&gt;<span class="built_in">pos</span>().<span class="built_in">y</span>());</span><br><span class="line">    <span class="built_in">statusBar</span>()-&gt;<span class="built_in">showMessage</span>(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::mouseDoubleClickEvent</span><span class="params">(QMouseEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event-&gt;<span class="built_in">button</span>() == Qt::LeftButton)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">setWindowState</span>(Qt::WindowFullScreen);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (event-&gt;<span class="built_in">button</span>() == Qt::RightButton)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">setWindowState</span>(Qt::WindowNoState);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::keyPressEvent</span><span class="params">(QKeyEvent *event)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event-&gt;<span class="built_in">modifiers</span>() == Qt::ControlModifier)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (event-&gt;<span class="built_in">key</span>() == Qt::Key_M)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">setWindowState</span>(Qt::WindowMaximized);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::on_MainWindow_customContextMenuRequested</span><span class="params">(<span class="type">const</span> QPoint &amp;<span class="comment">/*pos*/</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建菜单对象</span></span><br><span class="line">    QMenu *pMenu = <span class="keyword">new</span> <span class="built_in">QMenu</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    QAction *pChange1 = <span class="keyword">new</span> <span class="built_in">QAction</span>(<span class="built_in">tr</span>(<span class="string">&quot;最大&quot;</span>), <span class="keyword">this</span>);</span><br><span class="line">    QAction *pChange2 = <span class="keyword">new</span> <span class="built_in">QAction</span>(<span class="built_in">tr</span>(<span class="string">&quot;普通&quot;</span>), <span class="keyword">this</span>);</span><br><span class="line">    QAction *pChange3 = <span class="keyword">new</span> <span class="built_in">QAction</span>(<span class="built_in">tr</span>(<span class="string">&quot;最小&quot;</span>), <span class="keyword">this</span>);</span><br><span class="line">    pChange1-&gt;<span class="built_in">setData</span>(<span class="number">1</span>);</span><br><span class="line">    pChange2-&gt;<span class="built_in">setData</span>(<span class="number">2</span>);</span><br><span class="line">    pChange3-&gt;<span class="built_in">setData</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加图标</span></span><br><span class="line">    <span class="function">QIcon <span class="title">icon</span><span class="params">(<span class="string">&quot;:/image/coleduck.jpg&quot;</span>)</span></span>;</span><br><span class="line">    pChange1-&gt;<span class="built_in">setIcon</span>(icon);</span><br><span class="line">    pChange2-&gt;<span class="built_in">setIcon</span>(icon);</span><br><span class="line">    pChange3-&gt;<span class="built_in">setIcon</span>(icon);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//把QAction对象添加到菜单上</span></span><br><span class="line">    pMenu-&gt;<span class="built_in">addAction</span>(pChange1);</span><br><span class="line">    pMenu-&gt;<span class="built_in">addAction</span>(pChange2);</span><br><span class="line">    pMenu-&gt;<span class="built_in">addAction</span>(pChange3);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//连接鼠标右键点击信号</span></span><br><span class="line">    <span class="built_in">connect</span>(pChange1, <span class="built_in">SIGNAL</span>(<span class="built_in">triggered</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onTaskBoxContextMenuEvent</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(pChange2, <span class="built_in">SIGNAL</span>(<span class="built_in">triggered</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onTaskBoxContextMenuEvent</span>()));</span><br><span class="line">    <span class="built_in">connect</span>(pChange3, <span class="built_in">SIGNAL</span>(<span class="built_in">triggered</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onTaskBoxContextMenuEvent</span>()));</span><br><span class="line"></span><br><span class="line">    <span class="comment">//在鼠标右键点击的地方显示菜单</span></span><br><span class="line">    pMenu-&gt;<span class="built_in">exec</span>(<span class="built_in">cursor</span>().<span class="built_in">pos</span>());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//释放内存</span></span><br><span class="line">    QList&lt;QAction*&gt; list = pMenu-&gt;<span class="built_in">actions</span>();</span><br><span class="line">    foreach (QAction* pAction, list) <span class="keyword">delete</span> pAction;</span><br><span class="line">    <span class="keyword">delete</span> pMenu;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MainWindow::onTaskBoxContextMenuEvent</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QAction *pEven = <span class="built_in">qobject_cast</span>&lt;QAction *&gt;(<span class="keyword">this</span>-&gt;<span class="built_in">sender</span>()); <span class="comment">//this-&gt;sender()就是发信号者 QAction</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> iType = pEven-&gt;<span class="built_in">data</span>().<span class="built_in">toInt</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (iType)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">setWindowState</span>(Qt::WindowMaximized);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">setWindowState</span>(Qt::WindowNoState);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">setWindowState</span>(Qt::WindowMinimized);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MainWindow::~<span class="built_in">MainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一定要把 contextMenuPolicy 设置成 CustomContextMenu</span><br><span class="line">这样才可以使用自定义的弹出式菜单栏</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/05/12/ti2z7NFbxyjLSPo.png" alt="7960d707e41e2e3f2059692d93e5cbd.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第2题"><a href="#第2题" class="headerlink" title="第2题"></a>第2题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">目的与要求</button></li><li class="tab"><button type="button" data-href="#-2">实验准备</button></li><li class="tab"><button type="button" data-href="#-3">实验内容</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（1）掌握使用定时器的方法</span><br><span class="line">（2）掌握随机数的设置方法</span><br><span class="line">（3）会使用定时器实现时钟</span><br><span class="line">（4）了解图片显示的方法</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">做一窗口，上面有一按钮</span><br><span class="line">（1）了解信号和槽的基本使用方法</span><br><span class="line">（2）了解定时器和随机数的基本概念</span><br><span class="line">（3）准备好需要使用的图片文件</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用定时器可以在指定时间执行一些功能，而要实现随机效果就要使用随机数来实现。实验目标为新建程序实现电子时钟效</span><br><span class="line">果，并每隔一秒随机显示一张图片。</span><br><span class="line"></span><br><span class="line">（1）新建Qt Widgets应用，项目名称为mytimer，基类选择QWidget，类名为Widget。</span><br><span class="line">（2）完成项目创建后，双击widget.ui进入设计模式，然后向界面上拖入两个Push Button、一个Line Edit和一个Label部件，修改其显示文本，效果如下图所示。</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/05/12/GT8W7U9LDC4FlcE.jpg" alt="1.jpg"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">（3）然后到widget.h文件中添加类的前置声明：</span><br><span class="line">        class QTimer;</span><br><span class="line"></span><br><span class="line">   再添加一个私有槽声明：</span><br><span class="line">        private slots:</span><br><span class="line">          void timerUpdate();</span><br><span class="line"></span><br><span class="line">   和一个私有对象指针：</span><br><span class="line">        private:</span><br><span class="line">          QTimer *timer;</span><br><span class="line"></span><br><span class="line">（4）到widget.cpp中，先添加头文件包含：</span><br><span class="line">        #include &lt;QTimer&gt;</span><br><span class="line">        #include &lt;QDateTime&gt;</span><br><span class="line">        #include &lt;QRandomGenerator&gt;</span><br><span class="line">   然后在构造函数中添加如下代码：</span><br><span class="line">        timer = new QTimer(this);</span><br><span class="line">        //关联定时器溢出信号和相应的槽函数</span><br><span class="line">        connect(timer, &amp;QTimer::timeout, this, &amp;Widget::timerUpdate);</span><br><span class="line">   这里创建了一个定时器，并将其溢出信号和更新槽关联起来。</span><br><span class="line"></span><br><span class="line">（5）下面在widget.cpp文件中添加timerUpdate()函数的定义：</span><br><span class="line">        void Widget::timerUpdate()</span><br><span class="line">        &#123;</span><br><span class="line">            //获取系统现在的时间</span><br><span class="line">            QDateTime time = QDateTime::currentDateTime();</span><br><span class="line">            //设置系统时间显示格式</span><br><span class="line">            QString str = time.toString(&quot;yyyy-MM-dd hh:mm:ss dddd&quot;);</span><br><span class="line">            //在标签上显示时间</span><br><span class="line">            ui-&gt;lineEdit-&gt;setText(str);</span><br><span class="line"></span><br><span class="line">            int rand = QRandomGenerator::global()-&gt;bounded(5);  // 产生5以内随机整数即0-4</span><br><span class="line"></span><br><span class="line">            QPixmap pix = QPixmap(QString(&quot;../mytimer/images/%1.png&quot;).arg(rand));</span><br><span class="line">            ui-&gt;label-&gt;setPixmap(pix.scaled(ui-&gt;label-&gt;size(), Qt::IgnoreAspectRatio));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">     这里在行编辑器中显示了当前的时间。然后使用global()-&gt;bounded(5)产生5以内的随机数，并使用这个随机数来获取图片，并在标签中进行显示。</span><br><span class="line">     </span><br><span class="line">     关于随机数，Qt中是使用QRandomGenerator类实现的，它可以从一个高质量的随机数生成器来生成随机的数值。使用</span><br><span class="line">     时，可以在创建QRandomGenerator对象时直接给定一个数值作为种子来生成一组相同的随机数，给定不同的种子，那</span><br><span class="line">     么生成的随机数序列也是不同的，也可以使用seed()来设置种子。另外，可以使用bounded()函数来设置生成随机数</span><br><span class="line">     的范围，它有多种重载形式，例如bounded(256)可以生成 [0, 256)（包含0但不包含256）之间的一个随机整数；</span><br><span class="line">     bounded(5.0)可以生成[0,5)之间的双精度浮点数；bounded(-10, 10)生成随机数的范围是[-10, 10)。在实际编程</span><br><span class="line">     中，我们经常使用QRandomGenerator::global()来获取一个QRandomGenerator的全局实例。</span><br><span class="line"></span><br><span class="line">（6）前面代码中使用了0.png、1.png、2.png、3.png、4.png这样5张图片，需要复制5张图片到项目目录下面新建的</span><br><span class="line">     images目录中。当然，也可以将图片放到资源文件中。</span><br><span class="line"></span><br><span class="line">（7）在设计模式，分别右击“开始”按钮和“停止”按钮，选择转到槽，然后选择clicked()信号。将对应的槽函数修改如下：</span><br><span class="line">        // 开始按钮</span><br><span class="line">        void Widget::on_pushButton_clicked()</span><br><span class="line">        &#123;</span><br><span class="line">            timer-&gt;start(1000);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 停止按钮</span><br><span class="line">        void Widget::on_pushButton_2_clicked()</span><br><span class="line">        &#123;</span><br><span class="line">            timer-&gt;stop();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">     使用start()来启动定时器，其中参数用来指定溢出时间间隔，单位为毫秒。这里设置为1000，表明每隔1秒发射一次</span><br><span class="line">     timeout()信号。如果要停止定时器，可以调用stop()函数。</span><br><span class="line"></span><br><span class="line">（8）运行程序，点击“开始”按钮，会显示当前系统时间，并每隔一秒随机显示一张图片。效果如图5-2所示。</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/05/12/GXgHo6Ri7VtnP5h.jpg" alt="2.jpg"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">widget.h</button></li><li class="tab"><button type="button" data-href="#-2">widget.cpp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> WIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">Widget</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QTimer</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Widget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">timerUpdate</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_pb_run_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_pb_stop_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QTimer *timer;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> pre = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">Widget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">Widget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::Widget *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// WIDGET_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;widget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_widget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QTimer&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDateTime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QRandomGenerator&gt;</span></span></span><br><span class="line"></span><br><span class="line">Widget::<span class="built_in">Widget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::Widget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    timer = <span class="keyword">new</span> <span class="built_in">QTimer</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">connect</span>(timer, &amp;QTimer::timeout, <span class="keyword">this</span>, &amp;Widget::timerUpdate);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::timerUpdate</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//获取系统现在的时间</span></span><br><span class="line">    QDateTime time = QDateTime::<span class="built_in">currentDateTime</span>();</span><br><span class="line">    <span class="comment">//设置系统时间显示格式</span></span><br><span class="line">    QString str = time.<span class="built_in">toString</span>(<span class="string">&quot;yyyy-MM-dd hh:mm:ss dddd&quot;</span>);</span><br><span class="line">    <span class="comment">//在标签上显示时间</span></span><br><span class="line">    ui-&gt;lineEdit-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> rand = QRandomGenerator::<span class="built_in">global</span>()-&gt;<span class="built_in">bounded</span>(<span class="number">5</span>);  <span class="comment">// 产生5以内随机整数即0-4</span></span><br><span class="line">    <span class="keyword">while</span> (rand == pre)</span><br><span class="line">    &#123;</span><br><span class="line">        rand = QRandomGenerator::<span class="built_in">global</span>()-&gt;<span class="built_in">bounded</span>(<span class="number">5</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    pre = rand;</span><br><span class="line"></span><br><span class="line">    QPixmap pix = <span class="built_in">QPixmap</span>(<span class="built_in">QString</span>(<span class="string">&quot;../pro2/%1.jpg&quot;</span>).<span class="built_in">arg</span>(rand));</span><br><span class="line">    ui-&gt;label-&gt;<span class="built_in">setPixmap</span>(pix.<span class="built_in">scaled</span>(ui-&gt;label-&gt;<span class="built_in">size</span>(), Qt::IgnoreAspectRatio));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Widget::~<span class="built_in">Widget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::on_pb_run_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    timer-&gt;<span class="built_in">start</span>(<span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Widget::on_pb_stop_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    timer-&gt;<span class="built_in">stop</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验8&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验8&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验8&quot;&gt;&lt;/a&gt;C++桌面应用程序实验8&lt;/h1&gt;&lt;h2 id=&quot;第1题&quot;&gt;&lt;a href=&quot;#第1题&quot; class=&quot;</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="QT creator" scheme="https://coleduck.cn/tags/QT-creator/"/>
    
  </entry>
  
  <entry>
    <title>Qt实验 - 主窗口、资源的使用</title>
    <link href="https://coleduck.cn/2023/05/14/0002-07/"/>
    <id>https://coleduck.cn/2023/05/14/0002-07/</id>
    <published>2023-05-14T06:09:31.989Z</published>
    <updated>2023-06-18T10:08:09.263Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验7"><a href="#C-桌面应用程序实验7" class="headerlink" title="C++桌面应用程序实验7"></a>C++桌面应用程序实验7</h1><h2 id="第1题"><a href="#第1题" class="headerlink" title="第1题"></a>第1题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用Qt做一个基于主窗口的程序，用于处理文档，要求如下：</span><br><span class="line">1.要有菜单，其中至少有3个常用菜单项具有图标，快捷键，图标是基于qt资源的；</span><br><span class="line">2.要有工具栏，工具栏中有主要菜单项的按钮；</span><br><span class="line">3.状态栏，用于显示软件名称、作者，文档信息（字数或当前行列数，自定）</span><br><span class="line">4.有“关于”菜单项，弹出关于对话框，显示软件作者姓名、软件名称、开发日期</span><br><span class="line">5.软件“登录”菜单项，用于验证用户名、密码，点击登录菜单项后，弹出登录对话框，当用户输入用户名、密码点击确</span><br><span class="line">    定，核对已有用户名和密码，核对通过则进入，否则提示错误，并且重试；当登陆成功后，登陆菜单项变为灰色；“退</span><br><span class="line">    出当前用户”变为可用</span><br><span class="line">6.当登陆成功后，状态栏显示临时信息“当前用户为***（你登陆的用户名）”</span><br><span class="line">7.能够打开硬盘上已有记事本文档（使用标准对话框中的文件打开对话框）</span><br><span class="line">8.能够保存窗口显示文字为txt文件</span><br><span class="line">9.能够使用字体选择组合框更改显示字体</span><br><span class="line">10.右键弹出式菜单，能够关闭程序和选择字体。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">Logindialog.h</button></li><li class="tab"><button type="button" data-href="#-2">Mymainwindow.h</button></li><li class="tab"><button type="button" data-href="#-3">Mymainwindow.cpp</button></li><li class="tab"><button type="button" data-href="#-4">Logindialog.ui</button></li><li class="tab"><button type="button" data-href="#-5">Mymainwindow.ui</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> LOGINDIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGINDIALOG_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> Ui &#123;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginDialog</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginDialog</span> : <span class="keyword">public</span> QDialog</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">emit_login_log</span><span class="params">(QString &amp;str)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">LoginDialog</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line">    ~<span class="built_in">LoginDialog</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_LoginBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::LoginDialog *ui;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// LOGINDIALOG_H</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Logindialog.cpp:</span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;logindialog.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_logindialog.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QString&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"></span><br><span class="line">LoginDialog::<span class="built_in">LoginDialog</span>(QWidget *parent) :</span><br><span class="line">    <span class="built_in">QDialog</span>(parent),</span><br><span class="line">    <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::LoginDialog)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LoginDialog::~<span class="built_in">LoginDialog</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LoginDialog::on_LoginBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString Username = ui-&gt;Username-&gt;<span class="built_in">text</span>();</span><br><span class="line">    QString Password = ui-&gt;Password-&gt;<span class="built_in">text</span>();</span><br><span class="line">    <span class="keyword">if</span> (Username == <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;用户名不能为空&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Password == <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;密码不能为空&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (Username != Password)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;用户名或密码错误，请重新输入&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        emit <span class="built_in">emit_login_log</span>(Username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYMAINWINDOW_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYMAINWINDOW_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;logindialog.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MyMainWindow</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyMainWindow</span> : <span class="keyword">public</span> QMainWindow</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyMainWindow</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MyMainWindow</span>();</span><br><span class="line"></span><br><span class="line">    LoginDialog *login = <span class="keyword">new</span> <span class="built_in">LoginDialog</span>(<span class="keyword">this</span>);</span><br><span class="line">    QString User = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_O_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_A_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_L_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">login_log</span><span class="params">(QString &amp;str)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_textEdit_cursorPositionChanged</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_Q_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_action_S_triggered</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_MyMainWindow_customContextMenuRequested</span><span class="params">(<span class="type">const</span> QPoint &amp;pos)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">onTaskBoxContextMenuEvent</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MyMainWindow *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYMAINWINDOW_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mymainwindow.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mymainwindow.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMenu&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFileDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFontDialog&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line">MyMainWindow::<span class="built_in">MyMainWindow</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyMainWindow)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">    <span class="built_in">connect</span>(login, &amp;LoginDialog::emit_login_log, <span class="keyword">this</span>, &amp;MyMainWindow::login_log);</span><br><span class="line">    login-&gt;<span class="built_in">setWindowModality</span>(Qt::WindowModal);</span><br><span class="line"></span><br><span class="line">    QString str = <span class="string">&quot;软件作者姓名：一只柯尔鸭\n软件名称：QT第11周作业\n开发日期：2023-04-24\n&quot;</span>;</span><br><span class="line">    ui-&gt;textEdit-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line"></span><br><span class="line">    ui-&gt;action_Q-&gt;<span class="built_in">setEnabled</span>(<span class="literal">false</span>); <span class="comment">//禁用该菜单</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyMainWindow::~<span class="built_in">MyMainWindow</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::on_textEdit_cursorPositionChanged</span><span class="params">()</span> <span class="comment">//光标发生改变引起行号和列号的改变</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> row, col;</span><br><span class="line">    QTextCursor cursor;</span><br><span class="line">    cursor=ui-&gt;textEdit-&gt;<span class="built_in">textCursor</span>();</span><br><span class="line">    col = cursor.<span class="built_in">columnNumber</span>();</span><br><span class="line">    row = cursor.<span class="built_in">blockNumber</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//    qDebug() &lt;&lt; col &lt;&lt; &quot; &quot; &lt;&lt; row &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">    QString strcol = QString::<span class="built_in">number</span>(col, <span class="number">10</span>);</span><br><span class="line">    QString strrow = QString::<span class="built_in">number</span>(row, <span class="number">10</span>);</span><br><span class="line">    QString str = <span class="string">&quot;当前位置：&quot;</span> + strrow + <span class="string">&quot; 行 &quot;</span> + strcol + <span class="string">&quot; 列&quot;</span>;</span><br><span class="line">    ui-&gt;textInfo-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::login_log</span><span class="params">(QString &amp;str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString info = <span class="string">&quot;欢迎你，&quot;</span> + str + <span class="string">&quot; 登录成功！&quot;</span>;</span><br><span class="line">    User = str;</span><br><span class="line">    ui-&gt;textEdit-&gt;<span class="built_in">setText</span>(info);</span><br><span class="line">    ui-&gt;action_Q-&gt;<span class="built_in">setEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">    ui-&gt;action_L-&gt;<span class="built_in">setEnabled</span>(<span class="literal">false</span>);</span><br><span class="line">    login-&gt;<span class="built_in">hide</span>();</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; str &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::on_action_O_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString fileName = QFileDialog::<span class="built_in">getOpenFileName</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;文件对话框&quot;</span>), <span class="string">&quot;../&quot;</span>, <span class="string">&quot;txt(*.txt)&quot;</span>);</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;fileName: &quot;</span> &lt;&lt; fileName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!fileName.<span class="built_in">isEmpty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">QFile <span class="title">file</span><span class="params">(fileName)</span></span>;</span><br><span class="line">        <span class="type">bool</span> isok = file.<span class="built_in">open</span>(QIODevice::ReadOnly); <span class="comment">//打开方式为只读</span></span><br><span class="line">        <span class="keyword">if</span> (isok)</span><br><span class="line">        &#123;</span><br><span class="line">            QByteArray array = file.<span class="built_in">readAll</span>(); <span class="comment">//读取文本中全部文件</span></span><br><span class="line">            ui-&gt;textEdit-&gt;<span class="built_in">setText</span>(<span class="built_in">QString</span>(array));</span><br><span class="line">        &#125;</span><br><span class="line">        file.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::on_action_A_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QMessageBox::<span class="built_in">about</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;关于对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;软件作者姓名：一只柯尔鸭\n软件名称：QT第11周作业\n开发日期：2023-04-24\n&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::on_action_L_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    login-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::on_action_Q_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;action_Q-&gt;<span class="built_in">setEnabled</span>(<span class="literal">false</span>);</span><br><span class="line">    ui-&gt;action_L-&gt;<span class="built_in">setEnabled</span>(<span class="literal">true</span>);</span><br><span class="line">    QString info = <span class="string">&quot;您已安全退出，&quot;</span> + User + <span class="string">&quot; 欢迎下次登录！&quot;</span>;</span><br><span class="line">    ui-&gt;textEdit-&gt;<span class="built_in">setText</span>(info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::on_action_S_triggered</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString fileName = QFileDialog::<span class="built_in">getSaveFileName</span>(<span class="keyword">this</span>, <span class="string">&quot;save&quot;</span>, <span class="string">&quot;../&quot;</span>, <span class="string">&quot;txt(*.txt)&quot;</span>); <span class="comment">//写出文件的路径</span></span><br><span class="line">    <span class="keyword">if</span> (!fileName.<span class="built_in">isEmpty</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function">QFile <span class="title">file</span><span class="params">(fileName)</span></span>;</span><br><span class="line">        <span class="type">bool</span> isok = file.<span class="built_in">open</span>(QIODevice::WriteOnly); <span class="comment">//打开方式为只写</span></span><br><span class="line">        <span class="keyword">if</span> (isok)</span><br><span class="line">        &#123;</span><br><span class="line">            QString str = ui-&gt;textEdit-&gt;<span class="built_in">toPlainText</span>(); <span class="comment">//获取文本框中的内容</span></span><br><span class="line">            file.<span class="built_in">write</span>(str.<span class="built_in">toUtf8</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        file.<span class="built_in">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::on_MyMainWindow_customContextMenuRequested</span><span class="params">(<span class="type">const</span> QPoint &amp;<span class="comment">/*pos*/</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        <span class="comment">//创建菜单对象</span></span><br><span class="line">        QMenu *pMenu = <span class="keyword">new</span> <span class="built_in">QMenu</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        QAction *pChangeFont = <span class="keyword">new</span> <span class="built_in">QAction</span>(<span class="built_in">tr</span>(<span class="string">&quot;更改字体&quot;</span>), <span class="keyword">this</span>);</span><br><span class="line">        QAction *pQuitProcess = <span class="keyword">new</span> <span class="built_in">QAction</span>(<span class="built_in">tr</span>(<span class="string">&quot;退出程序&quot;</span>), <span class="keyword">this</span>);</span><br><span class="line">        pChangeFont-&gt;<span class="built_in">setData</span>(<span class="number">1</span>);</span><br><span class="line">        pQuitProcess-&gt;<span class="built_in">setData</span>(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//把QAction对象添加到菜单上</span></span><br><span class="line">        pMenu-&gt;<span class="built_in">addAction</span>(pChangeFont);</span><br><span class="line">        pMenu-&gt;<span class="built_in">addAction</span>(pQuitProcess);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//连接鼠标右键点击信号</span></span><br><span class="line">        <span class="built_in">connect</span>(pChangeFont, <span class="built_in">SIGNAL</span>(<span class="built_in">triggered</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onTaskBoxContextMenuEvent</span>()));</span><br><span class="line">        <span class="built_in">connect</span>(pQuitProcess, <span class="built_in">SIGNAL</span>(<span class="built_in">triggered</span>()), <span class="keyword">this</span>, <span class="built_in">SLOT</span>(<span class="built_in">onTaskBoxContextMenuEvent</span>()));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//在鼠标右键点击的地方显示菜单</span></span><br><span class="line">        pMenu-&gt;<span class="built_in">exec</span>(<span class="built_in">cursor</span>().<span class="built_in">pos</span>());</span><br><span class="line"></span><br><span class="line">        <span class="comment">//释放内存</span></span><br><span class="line">        QList&lt;QAction*&gt; list = pMenu-&gt;<span class="built_in">actions</span>();</span><br><span class="line">        foreach (QAction* pAction, list) <span class="keyword">delete</span> pAction;</span><br><span class="line">        <span class="keyword">delete</span> pMenu;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyMainWindow::onTaskBoxContextMenuEvent</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QAction *pEven = <span class="built_in">qobject_cast</span>&lt;QAction *&gt;(<span class="keyword">this</span>-&gt;<span class="built_in">sender</span>()); <span class="comment">//this-&gt;sender()就是发信号者 QAction</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取发送信息类型 1:更改字体 2:退出程序</span></span><br><span class="line">    <span class="type">int</span> iType = pEven-&gt;<span class="built_in">data</span>().<span class="built_in">toInt</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (iType)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">bool</span> ok;</span><br><span class="line">        QFont font = QFontDialog::<span class="built_in">getFont</span>(&amp;ok, <span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (ok) <span class="keyword">this</span>-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;没有选择字体！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><p><img src="https://s2.loli.net/2023/05/03/vW3o2TUn94riAzG.png" alt="1.png"><br><img src="https://s2.loli.net/2023/05/03/ORmqaSnItp9uVGP.png" alt="2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><p><img src="https://s2.loli.net/2023/05/03/OJIpan3FlEiLxDU.png" alt="3.png"><br><img src="https://s2.loli.net/2023/05/03/eAy9ICFcau7EozW.png" alt="4.png"><br><img src="https://s2.loli.net/2023/05/03/o4AlLQtkysgMW5Z.png" alt="5.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验7&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验7&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验7&quot;&gt;&lt;/a&gt;C++桌面应用程序实验7&lt;/h1&gt;&lt;h2 id=&quot;第1题&quot;&gt;&lt;a href=&quot;#第1题&quot; class=&quot;</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="QT creator" scheme="https://coleduck.cn/tags/QT-creator/"/>
    
  </entry>
  
  <entry>
    <title>Qt实验 - 窗口布局</title>
    <link href="https://coleduck.cn/2023/05/14/0002-06/"/>
    <id>https://coleduck.cn/2023/05/14/0002-06/</id>
    <published>2023-05-14T06:09:31.987Z</published>
    <updated>2023-06-18T10:06:29.127Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验6"><a href="#C-桌面应用程序实验6" class="headerlink" title="C++桌面应用程序实验6"></a>C++桌面应用程序实验6</h1><h2 id="第1题"><a href="#第1题" class="headerlink" title="第1题"></a>第1题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li><li class="tab"><button type="button" data-href="#-2">MyDialog.h</button></li><li class="tab"><button type="button" data-href="#-3">MyDialog.cpp</button></li><li class="tab"><button type="button" data-href="#-4">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">布局练习： 参看文档《Qt5开发及实例》（ftp://10.21.11.21/教师课件/计算机科学与技术系/宋超/Qt </span><br><span class="line">ebook）第3章，3.4节，基本布局，照着做图3.7界面（P80）（注意，可以按照该文档做，也可以使用Qt </span><br><span class="line">Designer做）</span><br></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2023/04/19/uyJR7SFCl9DZQe1.png" alt="lab02-pro1-0.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYDIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYDIALOG_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QLabel&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QLineEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QComboBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QTextEdit&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QGridLayout&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MyDialog</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyDialog</span> : <span class="keyword">public</span> QDialog</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">   <span class="comment">//左侧</span></span><br><span class="line">   QLabel *UserNameLabel;</span><br><span class="line">   QLabel *NameLabel;</span><br><span class="line">   QLabel *SexLabel;</span><br><span class="line">   QLabel *DepartmentLabel;</span><br><span class="line">   QLabel *AgeLabel;</span><br><span class="line">   QLabel *OtherLabel;</span><br><span class="line">   QLineEdit *UserNameLineEdit;</span><br><span class="line">   QLineEdit *NameLineEdit;</span><br><span class="line">   QComboBox *SexComboBox;</span><br><span class="line">   QTextEdit *DepartmentTextEdit;</span><br><span class="line">   QLineEdit *AgeLineEdit;</span><br><span class="line"></span><br><span class="line">   QGridLayout *LeftLayout;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//右上侧</span></span><br><span class="line">   QLabel *HeadLabel;</span><br><span class="line">   QLabel *HeadIconLabel;</span><br><span class="line">   QPushButton *UpdateHeadBtn;</span><br><span class="line"></span><br><span class="line">   QHBoxLayout *TopRightLayout;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//右下侧</span></span><br><span class="line">   QLabel *IntroductionLabel;</span><br><span class="line">   QTextEdit *IntroductionTextEdit;</span><br><span class="line"></span><br><span class="line">   QVBoxLayout *RightLayout;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//底部</span></span><br><span class="line">   QPushButton *OkBtn;</span><br><span class="line">   QPushButton *CancelBtn;</span><br><span class="line"></span><br><span class="line">   QHBoxLayout *ButtomLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyDialog</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MyDialog</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MyDialog *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYDIALOG_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mydialog.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mydialog.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPixmap&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MyDialog::<span class="built_in">MyDialog</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QDialog</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyDialog)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setWindowTitle</span>(<span class="built_in">tr</span>(<span class="string">&quot;UserInfo&quot;</span>));</span><br><span class="line">    <span class="comment">/******************* 左侧 *******************/</span></span><br><span class="line"></span><br><span class="line">    UserNameLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;用户名：&quot;</span>));</span><br><span class="line">    UserNameLineEdit = <span class="keyword">new</span> QLineEdit;</span><br><span class="line">    NameLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;姓名：&quot;</span>));</span><br><span class="line">    NameLineEdit = <span class="keyword">new</span> QLineEdit;</span><br><span class="line">    SexLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;性别：&quot;</span>));</span><br><span class="line">    SexComboBox = <span class="keyword">new</span> QComboBox;</span><br><span class="line">    SexComboBox-&gt;<span class="built_in">addItem</span>(<span class="built_in">tr</span>(<span class="string">&quot;女&quot;</span>));</span><br><span class="line">    SexComboBox-&gt;<span class="built_in">addItem</span>(<span class="built_in">tr</span>(<span class="string">&quot;男&quot;</span>));</span><br><span class="line">    DepartmentLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;部门：&quot;</span>));</span><br><span class="line">    DepartmentTextEdit = <span class="keyword">new</span> QTextEdit;</span><br><span class="line">    AgeLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;年龄：&quot;</span>));</span><br><span class="line">    AgeLineEdit = <span class="keyword">new</span> QLineEdit;</span><br><span class="line">    OtherLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;备注：&quot;</span>));</span><br><span class="line">    OtherLabel-&gt;<span class="built_in">setFrameStyle</span>(QFrame::Panel|QFrame::Sunken);</span><br><span class="line"></span><br><span class="line">    LeftLayout = <span class="keyword">new</span> <span class="built_in">QGridLayout</span>();</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(UserNameLabel, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(UserNameLineEdit, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(NameLabel, <span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(NameLineEdit, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(SexLabel, <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(SexComboBox, <span class="number">2</span>, <span class="number">1</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(DepartmentLabel, <span class="number">3</span>, <span class="number">0</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(DepartmentTextEdit, <span class="number">3</span>, <span class="number">1</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(AgeLabel, <span class="number">4</span>, <span class="number">0</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(AgeLineEdit, <span class="number">4</span>, <span class="number">1</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">addWidget</span>(OtherLabel, <span class="number">5</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    LeftLayout-&gt;<span class="built_in">setColumnStretch</span>(<span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    LeftLayout-&gt;<span class="built_in">setColumnStretch</span>(<span class="number">1</span>, <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************* 右上侧 *******************/</span></span><br><span class="line"></span><br><span class="line">    HeadLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;头像：&quot;</span>));</span><br><span class="line">    HeadIconLabel = <span class="keyword">new</span> QLabel;</span><br><span class="line">    <span class="function">QPixmap <span class="title">icon</span><span class="params">(<span class="string">&quot;coleduck.jpg&quot;</span>)</span></span>;</span><br><span class="line">    HeadIconLabel-&gt;<span class="built_in">setPixmap</span>(icon);</span><br><span class="line">    HeadIconLabel-&gt;<span class="built_in">resize</span>(icon.<span class="built_in">width</span>(), icon.<span class="built_in">height</span>());</span><br><span class="line">    UpdateHeadBtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="built_in">tr</span>(<span class="string">&quot;更新&quot;</span>));</span><br><span class="line"></span><br><span class="line">    TopRightLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    TopRightLayout-&gt;<span class="built_in">setSpacing</span>(<span class="number">20</span>);</span><br><span class="line">    TopRightLayout-&gt;<span class="built_in">addWidget</span>(HeadLabel);</span><br><span class="line">    TopRightLayout-&gt;<span class="built_in">addWidget</span>(HeadIconLabel);</span><br><span class="line">    TopRightLayout-&gt;<span class="built_in">addWidget</span>(UpdateHeadBtn);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************* 右下侧 *******************/</span></span><br><span class="line"></span><br><span class="line">    IntroductionLabel = <span class="keyword">new</span> <span class="built_in">QLabel</span>(<span class="built_in">tr</span>(<span class="string">&quot;个人说明：&quot;</span>));</span><br><span class="line">    IntroductionTextEdit = <span class="keyword">new</span> QTextEdit;</span><br><span class="line"></span><br><span class="line">    RightLayout = <span class="keyword">new</span> <span class="built_in">QVBoxLayout</span>();</span><br><span class="line">    RightLayout-&gt;<span class="built_in">setMargin</span>(<span class="number">10</span>);</span><br><span class="line">    RightLayout-&gt;<span class="built_in">addLayout</span>(TopRightLayout);</span><br><span class="line">    RightLayout-&gt;<span class="built_in">addWidget</span>(IntroductionLabel);</span><br><span class="line">    RightLayout-&gt;<span class="built_in">addWidget</span>(IntroductionTextEdit);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/******************* 底部 *******************/</span></span><br><span class="line"></span><br><span class="line">    OkBtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="built_in">tr</span>(<span class="string">&quot;确定：&quot;</span>));</span><br><span class="line">    CancelBtn = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="built_in">tr</span>(<span class="string">&quot;取消：&quot;</span>));</span><br><span class="line"></span><br><span class="line">    ButtomLayout = <span class="keyword">new</span> <span class="built_in">QHBoxLayout</span>();</span><br><span class="line">    ButtomLayout-&gt;<span class="built_in">addStretch</span>();</span><br><span class="line">    ButtomLayout-&gt;<span class="built_in">addWidget</span>(OkBtn);</span><br><span class="line">    ButtomLayout-&gt;<span class="built_in">addWidget</span>(CancelBtn);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*******************************************/</span></span><br><span class="line">    QGridLayout *mainLayout = <span class="keyword">new</span> <span class="built_in">QGridLayout</span>(<span class="keyword">this</span>);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">setMargin</span>(<span class="number">15</span>);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">setSpacing</span>(<span class="number">10</span>);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addLayout</span>(LeftLayout, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addLayout</span>(RightLayout, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">addLayout</span>(ButtomLayout, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>);</span><br><span class="line">    mainLayout-&gt;<span class="built_in">setSizeConstraint</span>(QLayout::SetFixedSize);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyDialog::~<span class="built_in">MyDialog</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><p><img src="https://s2.loli.net/2023/04/19/KHj1mSG6gqnBic2.png" alt="lab02-pro1-1.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第2题"><a href="#第2题" class="headerlink" title="第2题"></a>第2题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li><li class="tab"><button type="button" data-href="#-2">MyWidget.h</button></li><li class="tab"><button type="button" data-href="#-3">MyWidget.cpp</button></li><li class="tab"><button type="button" data-href="#-4">MyWidget.ui</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 二、使用Designer进行布局设计</span><br><span class="line">(1) 建立一个以QWidget为窗口的项目Project_1</span><br><span class="line">(2) 在Designer中，设计教材图4-2(旧版4-3)所示的界面</span><br><span class="line">(3) 定义如图中所示的热键（提示：要设定Buddy关系）；确定每个部件的Tab order</span><br><span class="line">(4) 性别下拉框中，加入“男”，“女”两项</span><br><span class="line">(5) 年龄范围设为(10-60)，步长为1</span><br><span class="line">(6) PushButton的文本改为“保存”</span><br><span class="line">(7) 为“保存”按钮定义一个单击槽函数，处理如下事情：1. 检查姓名、邮箱项是否为空，如果是空的，弹出</span><br><span class="line">    一个对话框，提示哪项不能为空；2. 如果检查通过了，则根据姓名、性别、年龄和邮箱生成一个数据，</span><br><span class="line">    保存到一个链表list中。同时，利用qDebug函数输出该数据，看看是否正确。提示: 可以定义一个结构</span><br><span class="line">    体DataItem, 再使用std::list&lt;DataItem&gt;定义一个链表. std::list为C++标准库中的链表实现, 为</span><br><span class="line">    一个模板类, 使用时需要#include &lt;list&gt;</span><br><span class="line"></span><br><span class="line">三、数据与界面互动：扩展Project_1的功能</span><br><span class="line">（1） 把窗口最下面的LineEdit替换为两个按钮：Pre, Next.</span><br><span class="line">（2） 按下Pre键，窗口显示list中的上一条记录，按下Next键显示list中的下一条记录。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYWIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYWIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MyWidget</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">DataItem</span> &#123;</span><br><span class="line">    QString name;</span><br><span class="line">    QString sex;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    QString mail;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWidget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyWidget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MyWidget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    std::list&lt;DataItem&gt; values;</span><br><span class="line">    <span class="type">int</span> pos = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_SaveBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_PreBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_NextBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MyWidget *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYWIDGET_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">MyWidget::<span class="built_in">MyWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyWidget::~<span class="built_in">MyWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::on_SaveBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString name = ui-&gt;NameLineEdit-&gt;<span class="built_in">text</span>();</span><br><span class="line">    QString mail = ui-&gt;MailLineEdit-&gt;<span class="built_in">text</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (name == <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;姓名不能为空&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (mail == <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;邮箱不能为空&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        QString sex = ui-&gt;SexLineEdit-&gt;<span class="built_in">currentText</span>();</span><br><span class="line">        <span class="type">int</span> age = ui-&gt;AgeLineEdit-&gt;<span class="built_in">value</span>();</span><br><span class="line">        DataItem stu = &#123;name, sex, age, mail&#125;;</span><br><span class="line"></span><br><span class="line">        values.<span class="built_in">push_back</span>(stu);</span><br><span class="line">        cnt ++ ;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;成功录入第&quot;</span> &lt;&lt; cnt &lt;&lt; <span class="string">&quot;个学生&quot;</span> &lt;&lt; <span class="string">&quot;\n姓名：&quot;</span> &lt;&lt; name &lt;&lt; <span class="string">&quot;\n邮箱：&quot;</span> &lt;&lt; mail &lt;&lt; <span class="string">&quot;\n性别：&quot;</span> &lt;&lt; sex &lt;&lt; <span class="string">&quot;\n年龄：&quot;</span> &lt;&lt; age &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::on_PreBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!pos)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;当前已是第一个数据&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pos -- ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::list&lt;DataItem&gt;::iterator iter;</span><br><span class="line">    iter = values.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; pos; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">      iter ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;当前访问的是第&quot;</span> &lt;&lt; pos + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个学生信息&quot;</span> &lt;&lt; <span class="string">&quot;\n姓名：&quot;</span> &lt;&lt; iter-&gt;name &lt;&lt; <span class="string">&quot;\n邮箱：&quot;</span> &lt;&lt; iter-&gt;mail &lt;&lt; <span class="string">&quot;\n性别：&quot;</span> &lt;&lt; iter-&gt;sex &lt;&lt; <span class="string">&quot;\n年龄：&quot;</span> &lt;&lt; iter-&gt;age &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::on_NextBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pos + <span class="number">1</span> == cnt)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;当前已是最后一个数据&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pos ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    std::list&lt;DataItem&gt;::iterator iter;</span><br><span class="line">    iter = values.<span class="built_in">begin</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; pos; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">      iter ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;当前访问的是第&quot;</span> &lt;&lt; pos + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个学生信息&quot;</span> &lt;&lt; <span class="string">&quot;\n姓名：&quot;</span> &lt;&lt; iter-&gt;name &lt;&lt; <span class="string">&quot;\n邮箱：&quot;</span> &lt;&lt; iter-&gt;mail &lt;&lt; <span class="string">&quot;\n性别：&quot;</span> &lt;&lt; iter-&gt;sex &lt;&lt; <span class="string">&quot;\n年龄：&quot;</span> &lt;&lt; iter-&gt;age &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><p><img src="https://s2.loli.net/2023/04/19/b9FSth3W8mQD7UP.png" alt="lab02-pro2-1.png"><br><img src="https://s2.loli.net/2023/04/19/C5wiH7hjav2YMVJ.png" alt="lab02-pro2-2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第3题"><a href="#第3题" class="headerlink" title="第3题"></a>第3题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li><li class="tab"><button type="button" data-href="#-2">MyWidget.h</button></li><li class="tab"><button type="button" data-href="#-3">MyWidget.cpp</button></li><li class="tab"><button type="button" data-href="#-4">MyWidget.ui</button></li><li class="tab"><button type="button" data-href="#-5">LoginDialog.h</button></li><li class="tab"><button type="button" data-href="#-6">LoginDialog.cpp</button></li><li class="tab"><button type="button" data-href="#-7">LoginDialog.ui</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">四、做一基于QWidget的程序，上面有一个QTextEdit，还有两个按钮“登录”“更改密码”，请注意以上三个部</span><br><span class="line">件要求使用合理布局。当点击登录时，跳出登录界面如图所示用户能输入用户名、密码</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYWIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYWIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;logindialog.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MyWidget</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWidget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//    LoginDialog login;</span></span><br><span class="line">    LoginDialog *login = <span class="keyword">new</span> <span class="built_in">LoginDialog</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyWidget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MyWidget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_LoginBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">login_log</span><span class="params">(QString &amp;str)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">back</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MyWidget *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYWIDGET_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDebug&gt;</span></span></span><br><span class="line"></span><br><span class="line">MyWidget::<span class="built_in">MyWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"><span class="comment">//    LoginDialog *login = new LoginDialog(this);</span></span><br><span class="line">    <span class="built_in">connect</span>(login, &amp;LoginDialog::emit_login_log, <span class="keyword">this</span>, &amp;MyWidget::login_log);</span><br><span class="line">    <span class="built_in">connect</span>(login, &amp;LoginDialog::emit_back, <span class="keyword">this</span>, &amp;MyWidget::back);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyWidget::~<span class="built_in">MyWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::on_LoginBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    login-&gt;<span class="built_in">show</span>();</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">hide</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::login_log</span><span class="params">(QString &amp;str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ui-&gt;textEdit-&gt;<span class="built_in">setText</span>(str);</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">show</span>();</span><br><span class="line">    login-&gt;<span class="built_in">hide</span>();</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; str &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::back</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    login-&gt;<span class="built_in">hide</span>();</span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><p><img src="https://s2.loli.net/2023/04/19/XKm84TS57AjGpFL.png" alt="lab02-pro3-1.png"><br><img src="https://s2.loli.net/2023/04/19/ecx47vsZhnAomdr.png" alt="lab02-pro3-2.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> LOGINDIALOG_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LOGINDIALOG_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> Ui &#123;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginDialog</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LoginDialog</span> : <span class="keyword">public</span> QDialog</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">signals:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">emit_login_log</span><span class="params">(QString &amp;str)</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">emit_back</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> slots:</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_EnterBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">on_QuitBtn_clicked</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">LoginDialog</span><span class="params">(QWidget *parent = <span class="literal">nullptr</span>)</span></span>;</span><br><span class="line">    ~<span class="built_in">LoginDialog</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::LoginDialog *ui;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// LOGINDIALOG_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-6"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;logindialog.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_logindialog.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"></span><br><span class="line">LoginDialog::<span class="built_in">LoginDialog</span>(QWidget *parent) :</span><br><span class="line">    <span class="built_in">QDialog</span>(parent),</span><br><span class="line">    <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::LoginDialog)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LoginDialog::~<span class="built_in">LoginDialog</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LoginDialog::on_EnterBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString username = ui-&gt;UsernameLineEdit-&gt;<span class="built_in">text</span>();</span><br><span class="line">    QString password = ui-&gt;PasswordLineEdit-&gt;<span class="built_in">text</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (username == <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;用户名不能为空&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (password == <span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;Warnning&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;密码不能为空&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (username != <span class="string">&quot;admin&quot;</span> || password != <span class="string">&quot;admin&quot;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        QString str = <span class="string">&quot;用户名或密码错误，请重新输入&quot;</span>;</span><br><span class="line">        <span class="function">emit <span class="title">emit_login_log</span><span class="params">(str)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        QString str = <span class="string">&quot;欢迎你，&quot;</span> + username + <span class="string">&quot; 登录成功！&quot;</span>;</span><br><span class="line">        <span class="function">emit <span class="title">emit_login_log</span><span class="params">(str)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LoginDialog::on_QuitBtn_clicked</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">emit <span class="title">emit_back</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-7"><p><img src="https://s2.loli.net/2023/04/19/HlGNqI3s4BYpUh2.png" alt="lab02-pro3-3.png"><br><img src="https://s2.loli.net/2023/04/19/HOyivYKNTMo2xmf.png" alt="lab02-pro3-4.png"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验6&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验6&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验6&quot;&gt;&lt;/a&gt;C++桌面应用程序实验6&lt;/h1&gt;&lt;h2 id=&quot;第1题&quot;&gt;&lt;a href=&quot;#第1题&quot; class=&quot;</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="QT creator" scheme="https://coleduck.cn/tags/QT-creator/"/>
    
  </entry>
  
  <entry>
    <title>Qt实验 - 基础程序结构与控件使用</title>
    <link href="https://coleduck.cn/2023/05/14/0002-05/"/>
    <id>https://coleduck.cn/2023/05/14/0002-05/</id>
    <published>2023-05-14T06:09:31.985Z</published>
    <updated>2023-06-18T10:18:13.557Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验5"><a href="#C-桌面应用程序实验5" class="headerlink" title="C++桌面应用程序实验5"></a>C++桌面应用程序实验5</h1><h2 id="第1题"><a href="#第1题" class="headerlink" title="第1题"></a>第1题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目1</button></li><li class="tab"><button type="button" data-href="#-2">Project_1.pro</button></li><li class="tab"><button type="button" data-href="#-3">main.cpp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">题目要求：窗口与子部件的区别</span><br><span class="line">（1）新建一个空的Qt项目：Project_1；</span><br><span class="line">（2）在main函数中新建三个部件：一个widget，两个label。其中，一个label为子部件，即它的父对象为那个</span><br><span class="line">widget。分别设置它们的标题及文本。</span><br><span class="line">（3）显示窗口：widget以及那个非子部件的label</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">QT       += core gui</span><br><span class="line"></span><br><span class="line">greaterThan(QT_MAJOR_VERSION, 4): QT += widgets</span><br><span class="line"></span><br><span class="line">TEMPLATE = app</span><br><span class="line">#INCLUDEPATH += .</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">SOURCES += \</span><br><span class="line">        main.cpp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#TEMPLATE = app</span><br><span class="line">#CONFIG += console c++11</span><br><span class="line">#CONFIG -= app_bundle</span><br><span class="line">#CONFIG -= qt</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QtWidgets&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QApplication <span class="title">a</span><span class="params">(argc, argv)</span></span>;</span><br><span class="line">    QWidget * widget = <span class="keyword">new</span> <span class="built_in">QWidget</span>();</span><br><span class="line">    widget-&gt;<span class="built_in">setWindowTitle</span>(QObject::<span class="built_in">tr</span>(<span class="string">&quot;这是Widget&quot;</span>));</span><br><span class="line"></span><br><span class="line">    QLabel * label1 = <span class="keyword">new</span> <span class="built_in">QLabel</span>();</span><br><span class="line">    label1-&gt;<span class="built_in">setWindowTitle</span>(QObject::<span class="built_in">tr</span>(<span class="string">&quot;这是Label&quot;</span>));</span><br><span class="line">    label1-&gt;<span class="built_in">setText</span>(QObject::<span class="built_in">tr</span>(<span class="string">&quot;label1:我不是Widget的子部件&quot;</span>));</span><br><span class="line">    label1-&gt;<span class="built_in">resize</span>(<span class="number">500</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">    QLabel * label2 = <span class="keyword">new</span> <span class="built_in">QLabel</span>(widget);</span><br><span class="line">    label2-&gt;<span class="built_in">setText</span>(QObject::<span class="built_in">tr</span>(<span class="string">&quot;label2:我是Widget的子部件&quot;</span>));</span><br><span class="line">    label2-&gt;<span class="built_in">resize</span>(<span class="number">500</span>, <span class="number">50</span>);</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;Hello World!&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">    label1-&gt;<span class="built_in">show</span>();</span><br><span class="line">    widget-&gt;<span class="built_in">show</span>();</span><br><span class="line">    <span class="type">int</span> ret = a.<span class="built_in">exec</span>();</span><br><span class="line">    <span class="keyword">delete</span> widget;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第2题"><a href="#第2题" class="headerlink" title="第2题"></a>第2题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目2</button></li><li class="tab"><button type="button" data-href="#-2">Mywidget.cpp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">题目要求：熟悉模态和非模态对话框</span><br><span class="line">（1）新建一个Qt Widget Application项目：Project_2</span><br><span class="line">（2）在主窗口类的构造函数中，设置主窗口的标题为：I’m the main window</span><br><span class="line">（3）在主窗口类的构造函数中，定义一个基本对话框对象，设置其标题为：I’m a dialog</span><br><span class="line">（4）在主窗口类的构造函数中，以模态形式显示(3)中定义的对话框</span><br><span class="line">（5）撤消(4)操作，在主窗口类的构造函数中，以非模态形式显示(3)中定义的对话框</span><br><span class="line">（6）分析比较模态和非模态对话框的行为</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"></span><br><span class="line">MyWidget::<span class="built_in">MyWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;I’m the main window&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//    QDialog dialog(this);</span></span><br><span class="line"><span class="comment">//    dialog.show();</span></span><br><span class="line"><span class="comment">//    dialog.exec();</span></span><br><span class="line"></span><br><span class="line">    QDialog * dialog = <span class="keyword">new</span> <span class="built_in">QDialog</span>(<span class="keyword">this</span>);</span><br><span class="line">    dialog-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;I’m a dialog&quot;</span>);</span><br><span class="line">    dialog-&gt;<span class="built_in">resize</span>(<span class="number">500</span>, <span class="number">50</span>);</span><br><span class="line"><span class="comment">//    dialog-&gt;setModal(true);     //以模态形式显示</span></span><br><span class="line">    dialog-&gt;<span class="built_in">show</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyWidget::~<span class="built_in">MyWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第3题"><a href="#第3题" class="headerlink" title="第3题"></a>第3题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目3</button></li><li class="tab"><button type="button" data-href="#-2">myWidget.h</button></li><li class="tab"><button type="button" data-href="#-3">myWidget.cpp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">题目要求：一个Qt界面程序的一般框架结构。通常，为程序的主窗口定义一个类，并在这个类中完成主窗口中的子部件</span><br><span class="line">的创建以及信号的处理。这样，程序的GUI部分全部放在主窗口中实现，便于管理和维护</span><br><span class="line">（1）新建一个空的Qt项目：Project_3</span><br><span class="line">（2）新建一个主窗口类，继承于Widget</span><br><span class="line">（3）在main函数中定义一个主窗口实例，并显示。</span><br><span class="line">（4）运行程序</span><br><span class="line">（5）在主窗口中添加一个PushButton。注意：在主窗口类的构造函数中完成该操作，不要在main函数中。运行程序。</span><br><span class="line">（6）通过Qt Designer在主窗口放置一个label标签，位置与(5)中的PushButton不要重叠，并设置其文本为：</span><br><span class="line">I’m a label。运行程序。</span><br><span class="line">（7）尝试在主窗口类的构造函数中修改(6)中label的文本为：access from code。运行程序。</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYWIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYWIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMainWindow&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MyWidget</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWidget</span> : <span class="keyword">public</span> QMainWindow</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyWidget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MyWidget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QPushButton *myPushButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MyWidget *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYWIDGET_H</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line">MyWidget::<span class="built_in">MyWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QMainWindow</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    myPushButton = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;按钮&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    ui-&gt;label-&gt;<span class="built_in">setText</span>(<span class="string">&quot;access from code&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyWidget::~<span class="built_in">MyWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第4题"><a href="#第4题" class="headerlink" title="第4题"></a>第4题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目4</button></li><li class="tab"><button type="button" data-href="#-2">mywidget.h_</button></li><li class="tab"><button type="button" data-href="#-3">mywidget.cpp_</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">题目要求：熟悉信号槽机制。该题目在上面的Project_3上继续完成。</span><br><span class="line">（1）在主窗口类中定义一个slot槽函数changeLabelText()。</span><br><span class="line">（2）在主窗口类中把主窗口中PushButton的clicked信号与槽changeLabelText ()关联在一起. </span><br><span class="line">（3）在showDlg()完成如下处理：如果主窗口中的label的文本为: access from code，则修改其文本为：I’m </span><br><span class="line">a label；反之，则修改为：access from code。提示：字符串比较，可以用QString中的compare函数。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYWIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYWIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MyWidget</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWidget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">changeLabelText</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QPushButton *myPushButton;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyWidget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MyWidget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MyWidget *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYWIDGET_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QString&gt;</span></span></span><br><span class="line"></span><br><span class="line">MyWidget::<span class="built_in">MyWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">this</span>-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;I’m the main window&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QDialog * dialog = <span class="keyword">new</span> <span class="built_in">QDialog</span>(<span class="keyword">this</span>);</span><br><span class="line">    dialog-&gt;<span class="built_in">setWindowTitle</span>(<span class="string">&quot;I’m a dialog&quot;</span>);</span><br><span class="line">    dialog-&gt;<span class="built_in">resize</span>(<span class="number">500</span>, <span class="number">50</span>);</span><br><span class="line"><span class="comment">//    dialog-&gt;setModal(true);     //以模态形式显示</span></span><br><span class="line">    dialog-&gt;<span class="built_in">show</span>();</span><br><span class="line"></span><br><span class="line">    myPushButton = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;转换&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line"><span class="comment">//    ui-&gt;label-&gt;setText(&quot;access from code&quot;);</span></span><br><span class="line"><span class="comment">//    connect(myPushButton, SIGNAL(clicked()), this, SLOT(changeLabelText()));</span></span><br><span class="line">    <span class="built_in">connect</span>(myPushButton, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::changeLabelText);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyWidget::~<span class="built_in">MyWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::changeLabelText</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString str1 = <span class="string">&quot;access from code&quot;</span>;</span><br><span class="line">    QString str2 = <span class="string">&quot;I’m a label&quot;</span>;</span><br><span class="line">    QString str_now = ui-&gt;label-&gt;<span class="built_in">text</span>();</span><br><span class="line">    <span class="keyword">if</span> (QString::<span class="built_in">localeAwareCompare</span>(str_now, str1) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ui-&gt;label-&gt;<span class="built_in">setText</span>(str2);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (QString::<span class="built_in">localeAwareCompare</span>(str_now, str2) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ui-&gt;label-&gt;<span class="built_in">setText</span>(str1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="第5题"><a href="#第5题" class="headerlink" title="第5题"></a>第5题</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目5</button></li><li class="tab"><button type="button" data-href="#-2">mywidget.h</button></li><li class="tab"><button type="button" data-href="#-3">mywidget.cpp</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">题目要求：熟悉标准对话框</span><br><span class="line">（1）新建一个空的Qt项目：Project_4</span><br><span class="line">（2）新建一个主窗口类，继承于Widget</span><br><span class="line">（3）在Qt Designer中编辑主窗口界面，放置如教材中图3-11所示的按钮</span><br><span class="line">（4）增加并关联每个按钮单击的信号槽</span><br><span class="line">（5）在每个按钮对应的槽函数中，显示对应的标准对话框。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> MYWIDGET_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MYWIDGET_H</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWidget&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QPushButton&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWizard&gt;</span></span></span><br><span class="line"></span><br><span class="line">QT_BEGIN_NAMESPACE</span><br><span class="line"><span class="keyword">namespace</span> Ui &#123; <span class="keyword">class</span> <span class="title class_">MyWidget</span>; &#125;</span><br><span class="line">QT_END_NAMESPACE</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">QErrorMessage</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MyWidget</span> : <span class="keyword">public</span> QWidget</span><br><span class="line">&#123;</span><br><span class="line">    Q_OBJECT</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> slots:</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg2</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg3</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg4</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg5</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg6</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg7</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">show_Dlg8</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    QPushButton *myPushButton1;</span><br><span class="line">    QPushButton *myPushButton2;</span><br><span class="line">    QPushButton *myPushButton3;</span><br><span class="line">    QPushButton *myPushButton4;</span><br><span class="line">    QPushButton *myPushButton5;</span><br><span class="line">    QPushButton *myPushButton6;</span><br><span class="line">    QPushButton *myPushButton7;</span><br><span class="line">    QPushButton *myPushButton8;</span><br><span class="line"></span><br><span class="line">    QErrorMessage *errordlg;</span><br><span class="line"></span><br><span class="line">    <span class="function">QWizardPage *<span class="title">createPage1</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">QWizardPage *<span class="title">createPage2</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function">QWizardPage *<span class="title">createPage3</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">MyWidget</span>(QWidget *parent = <span class="literal">nullptr</span>);</span><br><span class="line">    ~<span class="built_in">MyWidget</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    Ui::MyWidget *ui;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// MYWIDGET_H</span></span></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;mywidget.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;ui_mywidget.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QtDebug&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QColorDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFileDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QFontDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QInputDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QMessageBox&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QProgressDialog&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QErrorMessage&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;QWizard&gt;</span></span></span><br><span class="line"></span><br><span class="line">MyWidget::<span class="built_in">MyWidget</span>(QWidget *parent)</span><br><span class="line">    : <span class="built_in">QWidget</span>(parent)</span><br><span class="line">    , <span class="built_in">ui</span>(<span class="keyword">new</span> Ui::MyWidget)</span><br><span class="line">&#123;</span><br><span class="line">    ui-&gt;<span class="built_in">setupUi</span>(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">    myPushButton1 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;颜色对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton1-&gt;<span class="built_in">setGeometry</span>(<span class="number">150</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton1, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg1);</span><br><span class="line"></span><br><span class="line">    myPushButton2 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;文件对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton2-&gt;<span class="built_in">setGeometry</span>(<span class="number">450</span>, <span class="number">100</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton2, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg2);</span><br><span class="line"></span><br><span class="line">    myPushButton3 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;字体对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton3-&gt;<span class="built_in">setGeometry</span>(<span class="number">150</span>, <span class="number">200</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton3, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg3);</span><br><span class="line"></span><br><span class="line">    myPushButton4 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;输入对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton4-&gt;<span class="built_in">setGeometry</span>(<span class="number">450</span>, <span class="number">200</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton4, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg4);</span><br><span class="line"></span><br><span class="line">    myPushButton5 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;消息对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton5-&gt;<span class="built_in">setGeometry</span>(<span class="number">150</span>, <span class="number">300</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton5, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg5);</span><br><span class="line"></span><br><span class="line">    myPushButton6 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;进度对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton6-&gt;<span class="built_in">setGeometry</span>(<span class="number">450</span>, <span class="number">300</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton6, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg6);</span><br><span class="line"></span><br><span class="line">    errordlg = <span class="keyword">new</span> <span class="built_in">QErrorMessage</span>(<span class="keyword">this</span>);</span><br><span class="line">    myPushButton7 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;错误信息对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton7-&gt;<span class="built_in">setGeometry</span>(<span class="number">150</span>, <span class="number">400</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton7, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg7);</span><br><span class="line"></span><br><span class="line">    myPushButton8 = <span class="keyword">new</span> <span class="built_in">QPushButton</span>(<span class="string">&quot;向导对话框&quot;</span>, <span class="keyword">this</span>);</span><br><span class="line">    myPushButton8-&gt;<span class="built_in">setGeometry</span>(<span class="number">450</span>, <span class="number">400</span>, <span class="number">150</span>, <span class="number">50</span>);</span><br><span class="line">    <span class="built_in">connect</span>(myPushButton8, &amp;QPushButton::clicked, <span class="keyword">this</span>, &amp;MyWidget::show_Dlg8);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyWidget::~<span class="built_in">MyWidget</span>()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">delete</span> ui;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QColor color = QColorDialog::<span class="built_in">getColor</span>(Qt::red, <span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;颜色对话框&quot;</span>));</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;color: &quot;</span> &lt;&lt; color;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QString fileName = QFileDialog::<span class="built_in">getOpenFileName</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;文件对话框&quot;</span>), <span class="string">&quot;D:&quot;</span>, <span class="built_in">tr</span>(<span class="string">&quot;图片文件(*png *jpg)&quot;</span>));</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;fileName: &quot;</span> &lt;&lt; fileName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> ok;</span><br><span class="line">    QFont font = QFontDialog::<span class="built_in">getFont</span>(&amp;ok, <span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">if</span> (ok) myPushButton3-&gt;<span class="built_in">setFont</span>(font);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;没有选择字体！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">bool</span> ok;</span><br><span class="line">    QString string = QInputDialog::<span class="built_in">getText</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;输入字符串对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;请输入用户名:&quot;</span>), QLineEdit::Normal, <span class="built_in">tr</span>(<span class="string">&quot;admin&quot;</span>), &amp;ok);</span><br><span class="line">    <span class="keyword">if</span> (ok) <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;string: &quot;</span> &lt;&lt; string;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> value1 = QInputDialog::<span class="built_in">getInt</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;输入整数对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;请输入-1000到1000之间的数值:&quot;</span>), <span class="number">100</span>, <span class="number">-1000</span>, <span class="number">1000</span>, <span class="number">10</span>, &amp;ok);</span><br><span class="line">    <span class="keyword">if</span> (ok) <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;value1: &quot;</span> &lt;&lt; value1;</span><br><span class="line"></span><br><span class="line">    <span class="type">double</span> value2 = QInputDialog::<span class="built_in">getDouble</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;输入浮点数对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;请输入-1000到1000之间的数值:&quot;</span>), <span class="number">0.00</span>, <span class="number">-1000</span>, <span class="number">1000</span>, <span class="number">2</span>, &amp;ok);</span><br><span class="line">    <span class="keyword">if</span> (ok) <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;value2: &quot;</span> &lt;&lt; value2;</span><br><span class="line"></span><br><span class="line">    QStringList items;</span><br><span class="line">    items &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;条目1&quot;</span>) &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;条目2&quot;</span>);</span><br><span class="line">    QString item = QInputDialog::<span class="built_in">getItem</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;输入条目对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;请选择或输入一个条目&quot;</span>), items, <span class="number">0</span>, <span class="literal">true</span>, &amp;ok);</span><br><span class="line">    <span class="keyword">if</span> (ok) <span class="built_in">qDebug</span>() &lt;&lt; <span class="string">&quot;item: &quot;</span> &lt;&lt; item;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> ret1 = QMessageBox::<span class="built_in">question</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;问题对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;你了解Qt吗？&quot;</span>), QMessageBox::Yes, QMessageBox::No);</span><br><span class="line">    <span class="keyword">if</span> (ret1 == QMessageBox::Yes) <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;问题！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ret2 = QMessageBox::<span class="built_in">information</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;提示对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;这是Qt书籍！&quot;</span>), QMessageBox::Ok);</span><br><span class="line">    <span class="keyword">if</span> (ret2 == QMessageBox::Ok) <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;提示！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ret3 = QMessageBox::<span class="built_in">warning</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;警告对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;不能提前结束！&quot;</span>), QMessageBox::Abort);</span><br><span class="line">    <span class="keyword">if</span> (ret3 == QMessageBox::Abort) <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;警告！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> ret4 = QMessageBox::<span class="built_in">critical</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;严重错误对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;发现一个严重错误，现在要关闭所有文件！&quot;</span>), QMessageBox::YesAll);</span><br><span class="line">    <span class="keyword">if</span> (ret4 == QMessageBox::YesAll) <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;错误！&quot;</span>);</span><br><span class="line"></span><br><span class="line">    QMessageBox::<span class="built_in">about</span>(<span class="keyword">this</span>, <span class="built_in">tr</span>(<span class="string">&quot;关于对话框&quot;</span>), <span class="built_in">tr</span>(<span class="string">&quot;嗯嗯嗯嗯嗯嗯&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QProgressDialog <span class="title">dialog</span><span class="params">(tr(<span class="string">&quot;文件复制进度&quot;</span>), tr(<span class="string">&quot;取消&quot;</span>), <span class="number">0</span>, <span class="number">50000</span>, <span class="keyword">this</span>)</span></span>;</span><br><span class="line">    dialog.<span class="built_in">setWindowTitle</span>(<span class="string">&quot;进度对话框&quot;</span>);</span><br><span class="line">    dialog.<span class="built_in">setWindowModality</span>(Qt::WindowModal);</span><br><span class="line">    dialog.<span class="built_in">show</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">50000</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        dialog.<span class="built_in">setValue</span>(i);</span><br><span class="line">        QCoreApplication::<span class="built_in">processEvents</span>();</span><br><span class="line">        <span class="keyword">if</span> (dialog.<span class="built_in">wasCanceled</span>()) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    dialog.<span class="built_in">setValue</span>(<span class="number">50000</span>);</span><br><span class="line">    <span class="built_in">qDebug</span>() &lt;&lt; <span class="built_in">tr</span>(<span class="string">&quot;复制结束！&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    errordlg-&gt;<span class="built_in">setWindowTitle</span>(<span class="built_in">tr</span>(<span class="string">&quot;错误信息对话框&quot;</span>));</span><br><span class="line">    errordlg-&gt;<span class="built_in">showMessage</span>(<span class="built_in">tr</span>(<span class="string">&quot;这里是出错信息！&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">MyWidget::show_Dlg8</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">QWizard <span class="title">wizard</span><span class="params">(<span class="keyword">this</span>)</span></span>;</span><br><span class="line">    wizard.<span class="built_in">setWindowTitle</span>(<span class="built_in">tr</span>(<span class="string">&quot;向导对话框&quot;</span>));</span><br><span class="line">    wizard.<span class="built_in">addPage</span>(<span class="built_in">createPage1</span>());</span><br><span class="line">    wizard.<span class="built_in">addPage</span>(<span class="built_in">createPage2</span>());</span><br><span class="line">    wizard.<span class="built_in">addPage</span>(<span class="built_in">createPage3</span>());</span><br><span class="line">    wizard.<span class="built_in">exec</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">QWizardPage * <span class="title">MyWidget::createPage1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QWizardPage *page = <span class="keyword">new</span> QWizardPage;</span><br><span class="line">    page-&gt;<span class="built_in">setTitle</span>(<span class="built_in">tr</span>(<span class="string">&quot;介绍&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">QWizardPage * <span class="title">MyWidget::createPage2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QWizardPage *page = <span class="keyword">new</span> QWizardPage;</span><br><span class="line">    page-&gt;<span class="built_in">setTitle</span>(<span class="built_in">tr</span>(<span class="string">&quot;用户选择信息&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">QWizardPage * <span class="title">MyWidget::createPage3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    QWizardPage *page = <span class="keyword">new</span> QWizardPage;</span><br><span class="line">    page-&gt;<span class="built_in">setTitle</span>(<span class="built_in">tr</span>(<span class="string">&quot;结束&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> page;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验5&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验5&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验5&quot;&gt;&lt;/a&gt;C++桌面应用程序实验5&lt;/h1&gt;&lt;h2 id=&quot;第1题&quot;&gt;&lt;a href=&quot;#第1题&quot; class=&quot;</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="QT creator" scheme="https://coleduck.cn/tags/QT-creator/"/>
    
  </entry>
  
  <entry>
    <title>VS C++桌面应用程序 - 对话框练习</title>
    <link href="https://coleduck.cn/2023/05/14/0002-04/"/>
    <id>https://coleduck.cn/2023/05/14/0002-04/</id>
    <published>2023-05-14T06:09:31.984Z</published>
    <updated>2023-06-18T10:19:11.069Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验4"><a href="#C-桌面应用程序实验4" class="headerlink" title="C++桌面应用程序实验4"></a>C++桌面应用程序实验4</h1><mark class="hl-label green">题目</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">第一题</button></li><li class="tab"><button type="button" data-href="#-2">第二题</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 模式对话框练习：做一简单窗口， 具有弹出式菜单“文件”，文件下面有3个菜单项，分别为“打开”，“保存”，“退</span><br><span class="line">出”，要求</span><br><span class="line"></span><br><span class="line">1） 初始状态下，“打开”“退出”两个菜单项为可用，“保存”菜单项为不可用</span><br><span class="line">2） 点击“打开”，弹出模式对话框，对话框中有一按钮“确定”</span><br><span class="line">3）当点击对话框“确定”按钮时，对话框关闭，窗口用户区中央显示文字“对话框已成功关闭！”，“保存”菜单项为可用</span><br><span class="line">4）点击“保存”菜单项时，跳出消息框，包含标题为“模式对话框”内容为“您已经保存！”，按钮OK。</span><br><span class="line">4）点击“退出”菜单项，窗口关闭，程序退出</span><br><span class="line">5）为上述三个菜单项添加相应加速键，并能正确响应加速键消息</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2. 非模式对话框练习：在第1题中的文件菜单项中“保存”菜单项下加入一分隔线后，添加一个“非模式对话框”菜单项，</span><br><span class="line">当用户点击该菜单项时，在主菜单条下添加一个弹出式菜单“对话框”，下面有菜单项，分别为“打开”、“关闭”、分隔线和</span><br><span class="line">“删除菜单”，初始情况下“删除菜单”为不可用</span><br><span class="line"></span><br><span class="line">1） 当点击“打开”菜单项时，弹出非模式对话框，标题为“非模式对话框”，该对话框有一编辑框和一按钮确定，</span><br><span class="line">2）当用户在编辑框中输入文字，并点击“确定”按钮时，非模式对话框关闭，主窗口左上角显示：“非模式对话框输入文字</span><br><span class="line">为： ”加上编辑框输入的文字。</span><br><span class="line">3）当非模式对话框显示的情况下，点击“关闭”菜单项，也可以关闭非模式对话框，但是此时主窗口不显示非模式对话框</span><br><span class="line">相关文字。</span><br><span class="line">4） 2）和3）种情况发生时，“删除菜单”均变为可用</span><br><span class="line">5）当“删除菜单”可用时，点击之，可以将弹出式菜单“对话框”删除</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><mark class="hl-label green">代码</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">(1)</button></li><li class="tab"><button type="button" data-href="#-2">(2)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Resource.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IDD_DIALOG1                     129</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IDC_TITLE                       1000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_OPEN                         32774</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_SAVE                         32775</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_EXIT                         32776</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ---- 以下是程序部分 ----  */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量:</span></span><br><span class="line"><span class="type">static</span> <span class="type">char</span>* text = <span class="keyword">new</span> <span class="type">char</span>[MAX_LOADSTRING];       <span class="comment">// 主窗口输出文本</span></span><br><span class="line"><span class="type">static</span> <span class="type">char</span>* text_dlg = <span class="keyword">new</span> <span class="type">char</span>[MAX_LOADSTRING];   <span class="comment">// 对话框输出文本</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK    <span class="title">Dialog1</span><span class="params">(HWND, UINT, WPARAM, LPARAM)</span></span>; <span class="comment">// 前向声明</span></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> BOOL flag = TRUE;</span><br><span class="line"></span><br><span class="line">    HDC hdc;</span><br><span class="line">    HMENU hmenu = <span class="built_in">GetMenu</span>(hWnd);</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_OPEN:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1), hWnd, Dialog1);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_SAVE:</span><br><span class="line">                <span class="built_in">strcpy_s</span>(text_dlg, <span class="built_in">sizeof</span>(<span class="string">&quot;您已经保存！&quot;</span>), <span class="string">&quot;您已经保存！&quot;</span>);</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1), hWnd, Dialog1);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; MAX_LOADSTRING; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    text[i] = text_dlg[i] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_SAVE, MF_GRAYED);</span><br><span class="line">                flag = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">TextOut</span>(hdc, <span class="number">10</span>, <span class="number">10</span>, text, <span class="built_in">strlen</span>(text));</span><br><span class="line"></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// “模式对话框”框的消息处理程序。</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">Dialog1</span><span class="params">(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMENU hmenu = <span class="built_in">GetMenu</span>(<span class="built_in">GetParent</span>(hDlg));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lParam);</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_INITDIALOG:</span><br><span class="line">        <span class="built_in">SetDlgItemText</span>(hDlg, IDC_TITLE, text_dlg);</span><br><span class="line">        <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">LOWORD</span>(wParam) == IDOK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy_s</span>(text, <span class="built_in">sizeof</span>(<span class="string">&quot;对话框已成功关闭！&quot;</span>), <span class="string">&quot;对话框已成功关闭！&quot;</span>);</span><br><span class="line">            <span class="built_in">EnableMenuItem</span>(hmenu, ID_SAVE, MF_ENABLED);</span><br><span class="line">            <span class="built_in">EndDialog</span>(hDlg, <span class="built_in">LOWORD</span>(wParam));</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(<span class="built_in">GetParent</span>(hDlg), <span class="literal">NULL</span>, TRUE);</span><br><span class="line">            <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">        <span class="built_in">EndDialog</span>(hDlg, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (INT_PTR)FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//Resource.h</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IDD_DIALOG1                     129</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IDD_DIALOG2                     130</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IDC_TITLE                       1001</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IDC_EDIT                        1002</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_OPEN                         32774</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_SAVE                         32775</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_EXIT                         32776</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_MODALLESS_DEL                32779</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_MODALLESS_CLOSE              32780</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_MODALLESS_OPEN               32781</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ID_MODALLESS                    32783</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ---- 以下是程序部分 ----  */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 全局变量</span></span><br><span class="line">HWND hdlg_modalless;</span><br><span class="line"><span class="type">static</span> <span class="type">char</span>* text = <span class="keyword">new</span> <span class="type">char</span>[MAX_LOADSTRING];       <span class="comment">// 主窗口输出文本</span></span><br><span class="line"><span class="type">static</span> <span class="type">char</span>* text_dlg = <span class="keyword">new</span> <span class="type">char</span>[MAX_LOADSTRING];   <span class="comment">// 对话框输出文本</span></span><br><span class="line"><span class="type">static</span> BOOL flag_center = FALSE;</span><br><span class="line"><span class="function">INT_PTR CALLBACK    <span class="title">Dialog1</span><span class="params">(HWND, UINT, WPARAM, LPARAM)</span></span>;<span class="comment">// 前向声明</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK    <span class="title">Dialog2</span><span class="params">(HWND, UINT, WPARAM, LPARAM)</span></span>;<span class="comment">// 前向声明</span></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> BOOL flag = TRUE;</span><br><span class="line">    <span class="type">static</span> BOOL has_modalless = FALSE;</span><br><span class="line"></span><br><span class="line">    HDC hdc;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line">    HMENU hPopupMenu = <span class="built_in">CreatePopupMenu</span>();</span><br><span class="line">    HMENU hmenu = <span class="built_in">GetMenu</span>(hWnd);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> ID_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_OPEN:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1), hWnd, Dialog1);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_SAVE:</span><br><span class="line">                <span class="built_in">strcpy_s</span>(text_dlg, <span class="built_in">sizeof</span>(<span class="string">&quot;您已经保存！&quot;</span>), <span class="string">&quot;您已经保存！&quot;</span>);</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG1), hWnd, Dialog1);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MODALLESS:</span><br><span class="line">                <span class="keyword">if</span> (!has_modalless)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">AppendMenu</span>(hmenu, MF_ENABLED | MF_POPUP, (INT_PTR)hPopupMenu, <span class="built_in">TEXT</span>(<span class="string">&quot;对话框&quot;</span>));</span><br><span class="line">                    <span class="built_in">AppendMenu</span>(hPopupMenu, MF_ENABLED, ID_MODALLESS_OPEN, <span class="string">&quot;打开&quot;</span>);</span><br><span class="line">                    <span class="built_in">AppendMenu</span>(hPopupMenu, MF_ENABLED, ID_MODALLESS_CLOSE, <span class="string">&quot;关闭&quot;</span>);</span><br><span class="line">                    <span class="built_in">AppendMenu</span>(hPopupMenu, MF_STRING, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">                    <span class="built_in">AppendMenu</span>(hPopupMenu, MF_GRAYED, ID_MODALLESS_DEL, <span class="string">&quot;删除菜单&quot;</span>);</span><br><span class="line">                    <span class="built_in">DrawMenuBar</span>(hWnd);</span><br><span class="line">                    has_modalless = TRUE;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MODALLESS_OPEN:</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MODALLESS_DEL, MF_GRAYED);</span><br><span class="line">                hdlg_modalless = <span class="built_in">CreateDialog</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_DIALOG2), hWnd, Dialog2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MODALLESS_CLOSE:</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MODALLESS_DEL, MF_ENABLED);</span><br><span class="line">                <span class="built_in">EndDialog</span>(hdlg_modalless, <span class="number">0</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MODALLESS_DEL:</span><br><span class="line">                <span class="built_in">RemoveMenu</span>(hmenu, <span class="number">1</span>, MF_BYPOSITION);</span><br><span class="line">                <span class="built_in">DrawMenuBar</span>(hWnd);</span><br><span class="line">                has_modalless = FALSE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; MAX_LOADSTRING; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    text[i] = text_dlg[i] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_SAVE, MF_GRAYED);</span><br><span class="line">                flag = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (flag_center)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">TextOut</span>(hdc, <span class="number">500</span>, <span class="number">250</span>, text, <span class="built_in">strlen</span>(text));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">TextOut</span>(hdc, <span class="number">10</span>, <span class="number">10</span>, text, <span class="built_in">strlen</span>(text));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// “非模式对话框”框的消息处理程序。</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">Dialog2</span><span class="params">(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMENU hmenu = <span class="built_in">GetMenu</span>(<span class="built_in">GetParent</span>(hDlg));</span><br><span class="line">    <span class="type">static</span> <span class="type">char</span>* str = <span class="keyword">new</span> <span class="type">char</span>[MAX_LOADSTRING];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lParam);</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_INITDIALOG:</span><br><span class="line">        <span class="built_in">SetDlgItemText</span>(hDlg, IDC_TITLE, text_dlg);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; MAX_LOADSTRING; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            str[i] = text[i] = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">LOWORD</span>(wParam) == IDOK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">GetDlgItemText</span>(hDlg, IDC_EDIT, str, <span class="number">200</span>);</span><br><span class="line">            <span class="built_in">strcpy_s</span>(text, <span class="built_in">sizeof</span>(<span class="string">&quot;非模式对话框输入文字为：&quot;</span>), <span class="string">&quot;非模式对话框输入文字为：&quot;</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="built_in">strlen</span>(text), j = <span class="number">0</span>; i &lt; MAX_LOADSTRING; i++, j++)</span><br><span class="line">            &#123;</span><br><span class="line">                text[i] = str[j];</span><br><span class="line">            &#125;</span><br><span class="line">            flag_center = FALSE;</span><br><span class="line">            <span class="built_in">EnableMenuItem</span>(hmenu, ID_MODALLESS_DEL, MF_ENABLED);</span><br><span class="line">            <span class="built_in">EndDialog</span>(hDlg, <span class="built_in">LOWORD</span>(wParam));</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(<span class="built_in">GetParent</span>(hDlg), <span class="literal">NULL</span>, TRUE);</span><br><span class="line">            <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">        <span class="built_in">EndDialog</span>(hDlg, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (INT_PTR)FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// “模式对话框”框的消息处理程序。</span></span><br><span class="line"><span class="function">INT_PTR CALLBACK <span class="title">Dialog1</span><span class="params">(HWND hDlg, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMENU hmenu = <span class="built_in">GetMenu</span>(<span class="built_in">GetParent</span>(hDlg));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">UNREFERENCED_PARAMETER</span>(lParam);</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_INITDIALOG:</span><br><span class="line">        <span class="built_in">SetDlgItemText</span>(hDlg, IDC_TITLE, text_dlg);</span><br><span class="line">        <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">LOWORD</span>(wParam) == IDOK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcpy_s</span>(text, <span class="built_in">sizeof</span>(<span class="string">&quot;对话框已成功关闭！&quot;</span>), <span class="string">&quot;对话框已成功关闭！&quot;</span>);</span><br><span class="line">            flag_center = TRUE;</span><br><span class="line">            <span class="built_in">EnableMenuItem</span>(hmenu, ID_SAVE, MF_ENABLED);</span><br><span class="line">            <span class="built_in">EndDialog</span>(hDlg, <span class="built_in">LOWORD</span>(wParam));</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(<span class="built_in">GetParent</span>(hDlg), <span class="literal">NULL</span>, TRUE);</span><br><span class="line">            <span class="keyword">return</span> (INT_PTR)TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_CLOSE:</span><br><span class="line">        <span class="built_in">EndDialog</span>(hDlg, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (INT_PTR)FALSE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验4&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验4&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验4&quot;&gt;&lt;/a&gt;C++桌面应用程序实验4&lt;/h1&gt;&lt;mark class=&quot;hl-label green&quot;&gt;题目&lt;/ma</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Visual Studio" scheme="https://coleduck.cn/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>VS C++桌面应用程序 - 菜单和加速键</title>
    <link href="https://coleduck.cn/2023/05/14/0002-03/"/>
    <id>https://coleduck.cn/2023/05/14/0002-03/</id>
    <published>2023-05-14T06:09:31.982Z</published>
    <updated>2023-06-18T10:19:44.388Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验3"><a href="#C-桌面应用程序实验3" class="headerlink" title="C++桌面应用程序实验3"></a>C++桌面应用程序实验3</h1><mark class="hl-label green">题目</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">第一题</button></li><li class="tab"><button type="button" data-href="#-2">第二题</button></li><li class="tab"><button type="button" data-href="#-3">第三题</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1)菜单资源及其创建。为一简单窗口创建菜单，结构层次和加速键依次为：</span><br><span class="line">文件：打开（Ctrl+O）、保存（Ctrl+S）、另存为、分割线、打印（Ctrl+P）、退出（Ctrl+X）</span><br><span class="line">编辑：复制（Ctrl+C）、粘贴（Ctrl+V）    </span><br><span class="line">帮助：关于（F1）</span><br><span class="line">2) 初始状态下，保存、打印、复制菜单项为灰色</span><br><span class="line">3）完成如下功能，单击“打开””菜单项或者键盘上按下“Ctrl+O”，在窗口用户区中显示“浙江工商大学欢迎你！”，同</span><br><span class="line">时，将“保存“、复制、打印菜单项变为可用状态，打开菜单项变为不可用状态。</span><br><span class="line">4）后点击菜单项“保存“或在键盘上按下”Ctrl+S”，将窗口中显示的文字存成默认路径下的文本文件，文件名为</span><br><span class="line">“data.txt”，将打开菜单项恢复可用状态，同时在其下方插入新的菜单项“导入”，ID号为ID_FILE_LOAD、可用状</span><br><span class="line">态。，加速键为Ctrl+L</span><br><span class="line">5）点击导入菜单项，程序清除屏幕显示，并从data.txt文件导入文件内容，显示于窗口客户区</span><br><span class="line">6）在编辑弹出式菜单下面追加一分割线，并在其下面添加菜单项“颜色”、ID_EDIT_COLOR,初始状态为可用。当点击颜色菜单时，在其后面追加三个菜单项，分别为红色、绿色、蓝色。ID自选，当选中某一颜色菜单项时，如红色，窗口中字体变为红色，同时该菜单前出现选中标识，也就是文字是什么颜色，则相应颜色菜单项出现选中标识。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">续上题</span><br><span class="line"></span><br><span class="line">1）在“编辑“”菜单下追加一分割线，后追加依次两个菜单项（包含加速键）“显示工具菜单（Ctrl+A）” “删除工具</span><br><span class="line">    菜单（Ctrl+D）”初始状态“创建工具菜单”菜单项为可用，“删除工具菜单”项为不可用（灰色）</span><br><span class="line">2）完成如下功能：</span><br><span class="line">      A. 点击（或按相应加速键）“显示工具菜单”项，在菜单条中“编辑”菜单后，增加一弹出式菜单“工具”，包含 </span><br><span class="line">         “红色”,”绿色“、“蓝色”，分隔线、“更改文字（Modal）”、更改文字（Modaless）菜单项；同时“显示工</span><br><span class="line">         具菜单”菜单项变为不可用（变灰），“删除工具菜单”菜单项变为可用。</span><br><span class="line">      B. 点击“删除工具菜单“项，菜单条中弹出式菜单“工具”，被删除，同时“显示工具菜单”菜单项变为可用，“删</span><br><span class="line">         除工具菜单”变灰</span><br><span class="line">      C. 在“工具”菜单项存在的情况下，分别点击“红色”、“绿色”、“蓝色”菜单项，窗口用户区的文字分别显示为</span><br><span class="line">         对应的颜色</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建一窗口，具有弹出式菜单“形状”，下面有菜单项“矩形”、“椭圆”，另有弹出式菜单“颜色”，下面有“红色”、“蓝</span><br><span class="line">色”“绿色”，弹出式菜单项“移动”，下面有菜单项“上”“下”“左”“右”，并为之设置四个方向键为其加速键，要求如下：</span><br><span class="line"></span><br><span class="line">1） 当点击椭圆或矩形菜单（相应的具有选中标识），拖动鼠标同时按下左键，在屏幕上画相应的形状，当放开左键</span><br><span class="line">    时，图形停留在窗口上，</span><br><span class="line">2） 当点击相应的方向（方向键或菜单）时，屏幕图形向该方向移动。</span><br><span class="line">3） 选中颜色菜单，相应改变颜色。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><mark class="hl-label green">代码</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">(1)</button></li><li class="tab"><button type="button" data-href="#-2">(2)</button></li><li class="tab"><button type="button" data-href="#-3">(3)</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第一题和第二题代码写成一份，放在后面</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Resource.h 里添加的定义</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_OPEN                   32781</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_SAVE                   32782</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_SAVES                  32783</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_PASTE                  32784</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_EXIT                   32785</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_COPY                   32786</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_FILELOAD               32787</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_PRINT                  32788</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_ABOUT                  32789</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_COLOR_R                32806</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_COLOR_G                32807</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_COLOR_B                32808</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_COLOR                  32809</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_DELTOOL                32819</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_ADDTOOL                32820</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_TOOL                   32823</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_MODAL                  32821</span></span><br><span class="line"><span class="comment">// #define ID_MENU1_MODALESS               32822</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 加速键的设置内容省略</span></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HDC hdc = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line">    HMENU hmenu = <span class="built_in">GetMenu</span>(hWnd);</span><br><span class="line">    HMENU hPopupMenu = <span class="built_in">CreatePopupMenu</span>();</span><br><span class="line">    <span class="comment">//HMENU hmenu_0 = GetSubMenu(hmenu, 0);</span></span><br><span class="line">    <span class="comment">//HMENU hmenu_1 = GetSubMenu(hmenu, 1);</span></span><br><span class="line">    <span class="comment">//HMENU hmenu_2 = GetSubMenu(hmenu, 2);</span></span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">char</span>* textbuf = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">512</span>];</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> BOOL flag = TRUE;</span><br><span class="line">    <span class="type">static</span> BOOL flag_fileload = TRUE;</span><br><span class="line">    <span class="type">static</span> BOOL flag_text = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL flag_color_r = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL flag_color_g = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL flag_color_b = FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_OPEN:</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_COPY, MF_ENABLED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_SAVE, MF_ENABLED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_PASTE, MF_ENABLED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_OPEN, MF_GRAYED);</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">512</span>; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    textbuf[i] = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">strcpy_s</span>(textbuf, <span class="built_in">sizeof</span>(<span class="string">&quot;浙江工商大学欢迎你！\n&quot;</span>), <span class="string">&quot;浙江工商大学欢迎你！\n&quot;</span>);</span><br><span class="line">                flag_text = TRUE;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_SAVE:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_OPEN, MF_ENABLED);</span><br><span class="line">                    <span class="keyword">if</span> (flag_fileload)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">InsertMenu</span>(hmenu, ID_MENU1_SAVE, MF_BYCOMMAND | MF_ENABLED,</span><br><span class="line">                            ID_MENU1_FILELOAD, <span class="string">&quot;导入(&amp;L)&quot;</span>);</span><br><span class="line">                        flag_fileload = FALSE;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="function">std::ofstream <span class="title">ofs</span><span class="params">(<span class="string">&quot;D:\\Code\\VS_desktop\\test6\\data.txt&quot;</span>, std::ios::app)</span></span>;</span><br><span class="line">                    ofs.<span class="built_in">write</span>(textbuf, <span class="built_in">strlen</span>(textbuf));</span><br><span class="line">                    ofs.<span class="built_in">close</span>();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_FILELOAD:</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">DeleteMenu</span>(hmenu, ID_MENU1_FILELOAD, MF_BYCOMMAND);</span><br><span class="line">                    flag_fileload = TRUE;</span><br><span class="line">                    <span class="function">std::ifstream <span class="title">ifs</span><span class="params">(<span class="string">&quot;D:\\Code\\VS_desktop\\test6\\data.txt&quot;</span>, std::ios::in)</span></span>;</span><br><span class="line">                    ifs.<span class="built_in">read</span>(textbuf, <span class="number">512</span>);</span><br><span class="line">                    ifs.<span class="built_in">close</span>();</span><br><span class="line">                    flag_text = TRUE;</span><br><span class="line">                    <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="comment">//case ID_MENU1_COLOR:</span></span><br><span class="line">            <span class="comment">//    AppendMenu(hmenu_1, MF_ENABLED, ID_MENU1_COLOR_R, &quot;红色&quot;);</span></span><br><span class="line">            <span class="comment">//    AppendMenu(hmenu_1, MF_ENABLED, ID_MENU1_COLOR_G, &quot;绿色&quot;);</span></span><br><span class="line">            <span class="comment">//    AppendMenu(hmenu_1, MF_ENABLED, ID_MENU1_COLOR_B, &quot;蓝色&quot;);</span></span><br><span class="line">            <span class="comment">//    EnableMenuItem(hmenu, ID_MENU1_COLOR, MF_GRAYED);</span></span><br><span class="line">            <span class="comment">//    break;</span></span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_COLOR_R:</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_R, MF_CHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_G, MF_UNCHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_B, MF_UNCHECKED);</span><br><span class="line">                flag_color_r = flag_text = TRUE;</span><br><span class="line">                flag_color_g = flag_color_b = FALSE;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_COLOR_G:</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_R, MF_UNCHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_G, MF_CHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_B, MF_UNCHECKED);</span><br><span class="line">                flag_color_g = flag_text = TRUE;</span><br><span class="line">                flag_color_r = flag_color_b = FALSE;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_COLOR_B:</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_R, MF_UNCHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_G, MF_UNCHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_MENU1_COLOR_B, MF_CHECKED);</span><br><span class="line">                flag_color_b = flag_text = TRUE;</span><br><span class="line">                flag_color_r = flag_color_g = FALSE;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_ADDTOOL:</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_DELTOOL, MF_ENABLED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_ADDTOOL, MF_GRAYED);</span><br><span class="line">                <span class="comment">//hPopupMenu = CreatePopupMenu();</span></span><br><span class="line">                <span class="comment">//AppendMenu(hmenu, MF_POPUP, (UINT_PTR)hPopupmenu, &quot;工具&quot;);</span></span><br><span class="line">                <span class="built_in">InsertMenu</span>(hmenu, <span class="number">2</span>, MF_BYPOSITION | MF_ENABLED | MF_POPUP, (INT_PTR)hPopupMenu, <span class="built_in">TEXT</span>(<span class="string">&quot;工具&quot;</span>));</span><br><span class="line">                <span class="built_in">AppendMenu</span>(hPopupMenu, MF_ENABLED, ID_MENU1_COLOR_R, <span class="string">&quot;红色&quot;</span>);</span><br><span class="line">                <span class="built_in">AppendMenu</span>(hPopupMenu, MF_ENABLED, ID_MENU1_COLOR_G, <span class="string">&quot;绿色&quot;</span>);</span><br><span class="line">                <span class="built_in">AppendMenu</span>(hPopupMenu, MF_ENABLED, ID_MENU1_COLOR_B, <span class="string">&quot;蓝色&quot;</span>);</span><br><span class="line">                <span class="built_in">AppendMenu</span>(hPopupMenu, MF_STRING, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="built_in">AppendMenu</span>(hPopupMenu, MF_ENABLED, ID_MENU1_MODAL, <span class="string">&quot;更改文字（Modal）&quot;</span>);</span><br><span class="line">                <span class="built_in">AppendMenu</span>(hPopupMenu, MF_ENABLED, ID_MENU1_MODALESS, <span class="string">&quot;更改文字（Modaless）&quot;</span>);</span><br><span class="line">                <span class="built_in">DrawMenuBar</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_MENU1_DELTOOL:</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_DELTOOL, MF_GRAYED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_ADDTOOL, MF_ENABLED);</span><br><span class="line">                <span class="built_in">RemoveMenu</span>(hmenu, <span class="number">2</span>, MF_BYPOSITION);</span><br><span class="line">                <span class="built_in">DrawMenuBar</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">            HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flag)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_COPY, MF_GRAYED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_SAVE, MF_GRAYED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_PASTE, MF_GRAYED);</span><br><span class="line">                <span class="built_in">EnableMenuItem</span>(hmenu, ID_MENU1_DELTOOL, MF_GRAYED);</span><br><span class="line">                flag = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flag_text)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (flag_color_r)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (flag_color_g)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (flag_color_b)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">char</span>* str_line = <span class="keyword">new</span> <span class="type">char</span>[<span class="number">512</span>];</span><br><span class="line">                <span class="type">int</span> pos = <span class="number">0</span>, line_cnt = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(textbuf); i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (textbuf[i] != <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        str_line[pos++] = textbuf[i];</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        str_line[pos++] = <span class="number">0</span>;</span><br><span class="line">                        line_cnt++;</span><br><span class="line">                        <span class="built_in">TextOut</span>(hdc, <span class="number">10</span>, <span class="number">10</span> + line_cnt * <span class="number">30</span>, str_line, <span class="built_in">strlen</span>(str_line));</span><br><span class="line">                        pos = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                flag_text = FALSE;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Resource.h 里添加的定义</span></span><br><span class="line"><span class="comment">// #define ID_RECT                         32780</span></span><br><span class="line"><span class="comment">// #define ID_CIRCLE                       32781</span></span><br><span class="line"><span class="comment">// #define ID_RED                          32782</span></span><br><span class="line"><span class="comment">// #define ID_BLUE                         32783</span></span><br><span class="line"><span class="comment">// #define ID_GREEN                        32784</span></span><br><span class="line"><span class="comment">// #define ID_UP                           32785</span></span><br><span class="line"><span class="comment">// #define ID_DOWN                         32786</span></span><br><span class="line"><span class="comment">// #define ID_LEFT                         32787</span></span><br><span class="line"><span class="comment">// #define ID_RIGHT                        32788</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 加速键的设置内容省略</span></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HMENU hmenu = <span class="built_in">GetMenu</span>(hWnd), haddmenu;</span><br><span class="line">    HMENU hmenu_0 = <span class="built_in">GetSubMenu</span>(hmenu, <span class="number">0</span>);</span><br><span class="line">    HMENU hmenu_1 = <span class="built_in">GetSubMenu</span>(hmenu, <span class="number">1</span>);</span><br><span class="line">    HMENU hmenu_2 = <span class="built_in">GetSubMenu</span>(hmenu, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">    HPEN hPen_black = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    HPEN hPen_white = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">5</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    HBRUSH hBrush_white = (HBRUSH)<span class="built_in">GetStockObject</span>(WHITE_BRUSH);</span><br><span class="line">    HBRUSH hBrush_red = (HBRUSH)<span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    HBRUSH hBrush_green = (HBRUSH)<span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">    HBRUSH hBrush_blue = (HBRUSH)<span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> BOOL bRect = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL bCircle = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL bRed = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL bBlue = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL bGreen = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL nLButtonDown = FALSE;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> start_x = <span class="number">0</span>, end_x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> start_y = <span class="number">0</span>, end_y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">int</span> x = <span class="built_in">LOWORD</span>(lParam);</span><br><span class="line">    <span class="type">int</span> y = <span class="built_in">HIWORD</span>(lParam);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    HDC hDC;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> ID_CIRCLE:</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_CIRCLE, MF_CHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_RECT, MF_UNCHECKED);</span><br><span class="line">                bCircle = TRUE; bRect = FALSE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_RECT:</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_RECT, MF_CHECKED);</span><br><span class="line">                <span class="built_in">CheckMenuItem</span>(hmenu, ID_CIRCLE, MF_UNCHECKED);</span><br><span class="line">                bRect = TRUE; bCircle = FALSE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_UP:</span><br><span class="line">                start_y -= <span class="number">50</span>;</span><br><span class="line">                end_y -= <span class="number">50</span>;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_DOWN:</span><br><span class="line">                start_y += <span class="number">50</span>;</span><br><span class="line">                end_y += <span class="number">50</span>;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_LEFT:</span><br><span class="line">                start_x -= <span class="number">50</span>;</span><br><span class="line">                end_x -= <span class="number">50</span>;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_RIGHT:</span><br><span class="line">                start_x += <span class="number">50</span>;</span><br><span class="line">                end_x += <span class="number">50</span>;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_BLUE:</span><br><span class="line">                bBlue = TRUE; bRed = FALSE; bGreen = FALSE;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_RED:</span><br><span class="line">                bRed = TRUE; bBlue = FALSE; bGreen = FALSE;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ID_GREEN:</span><br><span class="line">                bGreen = TRUE; bRed = FALSE; bBlue = FALSE;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">        &#123;</span><br><span class="line">            start_x = end_x = x;</span><br><span class="line">            start_y = end_y = y;</span><br><span class="line">            nLButtonDown = TRUE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONUP:</span><br><span class="line">        &#123;</span><br><span class="line">            nLButtonDown = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_MOUSEMOVE:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nLButtonDown)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">                end_x = x, end_y = y;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            hDC = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hPen_white);</span><br><span class="line">            <span class="built_in">Rectangle</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hPen_black);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (bRed)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hBrush_red);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (bBlue)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hBrush_blue);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (bGreen)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hBrush_green);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (bRect)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, start_x, start_y, end_x, end_y);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (bCircle)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Ellipse</span>(hDC, start_x, start_y, end_x, end_y);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验3&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验3&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验3&quot;&gt;&lt;/a&gt;C++桌面应用程序实验3&lt;/h1&gt;&lt;mark class=&quot;hl-label green&quot;&gt;题目&lt;/ma</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Visual Studio" scheme="https://coleduck.cn/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>VS C++桌面应用程序 - 鼠标键盘编程</title>
    <link href="https://coleduck.cn/2023/05/14/0002-02/"/>
    <id>https://coleduck.cn/2023/05/14/0002-02/</id>
    <published>2023-05-14T06:09:31.980Z</published>
    <updated>2023-06-18T13:15:38.769Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验2"><a href="#C-桌面应用程序实验2" class="headerlink" title="C++桌面应用程序实验2"></a>C++桌面应用程序实验2</h1><mark class="hl-label green">题目</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">第一题</button></li><li class="tab"><button type="button" data-href="#-2">第二题</button></li><li class="tab"><button type="button" data-href="#-3">第三题</button></li><li class="tab"><button type="button" data-href="#-4">第四题</button></li><li class="tab"><button type="button" data-href="#-5">第五题</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.重做书中例题1（旧版教材找到相应题目），测试是否达到要求。(注意，通过此题重新测试)</span><br><span class="line">    (a)大小写问题 (b)复合按键问题(ctrl+A) (c)如果按键既产生按键消息又产生字符消息，谁先谁后？</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2.用户区中央显示一个正方形（大小自定）,然后</span><br><span class="line"></span><br><span class="line">a.按键盘上的方向键，正方形能够按方向键的指示相应移动，大小不变。</span><br><span class="line">b.按键盘上的 b键，正方形涂黑，再按一下b键，正方形又切换为白色填充。如此，可以利用b键</span><br><span class="line">    正方形可以在黑白两色间切换（要求在WM_CHAR消息中对b键进行相应,即在case WM_CHAR:</span><br><span class="line">c.  按下键盘上的ctrl + R键，圆形变为正方形，按下ctrl+C键又变回圆形，如此，可实现圆和正方形间的</span><br><span class="line">    切换，其他功能仍可正常执行。（可能但不一定能用到： GetKeyState(VK_*) &lt; 0 说明VK_*被按下，</span><br><span class="line">    &gt;0 ：VK_*没有按下，但是VK_CAPITAL 除外）</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">创建一个简单窗口， 按下鼠标左键，同时按下键盘上的ctrl键，拖动鼠标，在用户区上画出一个矩形，</span><br><span class="line">矩形左上角以初始按下鼠标的点，右下角为鼠标当前位置，放开鼠标，窗口用户区显示一个最后的矩形。</span><br><span class="line">按下键盘的‘l’(英文字母L的小写)，矩形放大，按下‘s’键，矩形缩小，</span><br><span class="line">并能用方向键实现所画矩形按相应方向移动。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">做一个简单的画图程序，基本功能：</span><br><span class="line"></span><br><span class="line">1）按“L”后，用鼠标拖拽能在屏幕上画直线；</span><br><span class="line">2）按“E”后,用鼠标托拽能在屏幕上画矩形</span><br><span class="line">3）按“C”后，用鼠标拖拽能在屏幕上画圆</span><br><span class="line">4）按“R”“G”“B”能够改变所画图形为红、绿、蓝色</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><p>在窗口用户区中做一个简单的英文文本编辑器，基本功能：</p><p>1）    能够响应键盘输入文字；<br>2）    按Ctrl+A，实现文字底色全部变为蓝色，试着实现Ctrl+C，Ctrl+V<br>    实现复制粘贴功能，粘贴位置紧随原文之后<br>3）    按“Ctrl+S”键能够将所输入文字存成文件<br>4）    分别按“R”“G”“B”能够相应改变文字颜色<br>5）    能够用键盘移动在文字键插入字母<br>6）    如果采用定长数组存储输入文字，当输入越界时给出提示（提示——消息框：<br>    MessageBox(hWnd, “你的输入已经超过了最大存储！”,  “消息框实例”, MB_OK);</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><mark class="hl-label green">代码</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">第一题</button></li><li class="tab"><button type="button" data-href="#-2">第二题</button></li><li class="tab"><button type="button" data-href="#-3">第三题</button></li><li class="tab"><button type="button" data-href="#-4">第四题</button></li><li class="tab"><button type="button" data-href="#-5">第五题</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HDC hDC;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line">    HPEN hPen;</span><br><span class="line">    HBRUSH hBrush;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">char</span> cUp[] = <span class="string">&quot;You had pressed the UP key&quot;</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">char</span> cCtrl[] = <span class="string">&quot;You had pressed the CTRL key&quot;</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">char</span> cShift[] = <span class="string">&quot;You had pressed the SHIFT key&quot;</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">char</span> cCtrl_A[] = <span class="string">&quot;You had pressed the CTRL A key&quot;</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">char</span> cShift_B[] = <span class="string">&quot;You had pressed the SHIFT B key&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> BOOL nUpKeyDown = FALSE, nShiftKeyDown = FALSE, nCtrlKeyDown = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL nCtrlAKeyDown = FALSE, nShiftBKeyDown = FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (wParam)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> VK_UP:</span><br><span class="line">                nUpKeyDown = TRUE;</span><br><span class="line">                nCtrlKeyDown = nCtrlAKeyDown = FALSE;</span><br><span class="line">                nShiftKeyDown = nShiftBKeyDown = FALSE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VK_SHIFT:</span><br><span class="line">                nShiftKeyDown = TRUE;</span><br><span class="line">                nUpKeyDown = nShiftBKeyDown = FALSE;</span><br><span class="line">                nCtrlKeyDown = nCtrlAKeyDown = FALSE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VK_CONTROL:</span><br><span class="line">                nCtrlKeyDown = TRUE;</span><br><span class="line">                nUpKeyDown = nCtrlAKeyDown = FALSE;</span><br><span class="line">                nShiftKeyDown = nShiftBKeyDown = FALSE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//case WM_KEYUP:</span></span><br><span class="line">    <span class="comment">//    InvalidateRect(hWnd, NULL, FALSE);</span></span><br><span class="line">    <span class="comment">//    break;</span></span><br><span class="line">    <span class="keyword">case</span> WM_CHAR:</span><br><span class="line">        <span class="keyword">if</span> (wParam == <span class="string">&#x27;a&#x27;</span> || wParam == <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                nCtrlAKeyDown = TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (wParam == <span class="string">&#x27;b&#x27;</span> || wParam == <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_SHIFT) &lt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                nShiftBKeyDown = TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>;</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line">            hDC = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            hBrush = (HBRUSH)<span class="built_in">GetStockObject</span>(WHITE_BRUSH);</span><br><span class="line">            hPen = (HPEN)<span class="built_in">GetStockObject</span>(WHITE_PEN);</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hPen);</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hBrush);</span><br><span class="line">            <span class="built_in">SetTextColor</span>(hDC, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (nUpKeyDown == TRUE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">                <span class="built_in">TextOut</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, cUp, <span class="built_in">strlen</span>(cUp));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nCtrlAKeyDown == TRUE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">                <span class="built_in">TextOut</span>(hDC, <span class="number">0</span>, <span class="number">100</span>, cCtrl_A, <span class="built_in">strlen</span>(cCtrl_A));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nCtrlKeyDown == TRUE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">                <span class="built_in">TextOut</span>(hDC, <span class="number">0</span>, <span class="number">60</span>, cCtrl, <span class="built_in">strlen</span>(cCtrl));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nShiftBKeyDown == TRUE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">                <span class="built_in">TextOut</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, cShift_B, <span class="built_in">strlen</span>(cShift_B));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nShiftKeyDown == TRUE)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, <span class="number">300</span>, <span class="number">200</span>);</span><br><span class="line">                <span class="built_in">TextOut</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, cShift, <span class="built_in">strlen</span>(cShift));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">DeleteObject</span>(hPen);</span><br><span class="line">            <span class="built_in">DeleteObject</span>(hBrush);</span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HDC hDC;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line">    HPEN hPen_black = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    HPEN hPen_white = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">5</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    HBRUSH hBrush_white = (HBRUSH)<span class="built_in">GetStockObject</span>(WHITE_BRUSH);</span><br><span class="line">    HBRUSH hBrush_black = (HBRUSH)<span class="built_in">GetStockObject</span>(BLACK_BRUSH);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> BOOL backColor_White = TRUE;</span><br><span class="line">    <span class="type">static</span> BOOL shape_circle = FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> start_x = <span class="number">500</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> start_y = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">        &#123;</span><br><span class="line">            hDC = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hPen_white);</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hBrush_white);</span><br><span class="line">            <span class="built_in">Rectangle</span>(hDC, start_x, start_y, start_x + <span class="number">200</span>, start_y + <span class="number">200</span>);</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">switch</span> (wParam)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> VK_UP:</span><br><span class="line">                start_y -= <span class="number">50</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VK_DOWN:</span><br><span class="line">                start_y += <span class="number">50</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VK_LEFT:</span><br><span class="line">                start_x -= <span class="number">50</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> VK_RIGHT:</span><br><span class="line">                start_x += <span class="number">50</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                backColor_White = !backColor_White;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">                    shape_circle = TRUE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">                    shape_circle = FALSE;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">            <span class="built_in">ReleaseDC</span>(hWnd, hDC);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="comment">//case WM_CHAR:</span></span><br><span class="line">    <span class="comment">//    &#123;</span></span><br><span class="line">    <span class="comment">//    if (wParam == &#x27;B&#x27;)</span></span><br><span class="line">    <span class="comment">//        backColor_White = !backColor_White;</span></span><br><span class="line">    <span class="comment">//    else if (wParam == &#x27;R&#x27;)</span></span><br><span class="line">    <span class="comment">//    &#123;</span></span><br><span class="line">    <span class="comment">//        if (GetKeyState(VK_CONTROL) &lt; 0)</span></span><br><span class="line">    <span class="comment">//            shape_circle = FALSE;</span></span><br><span class="line">    <span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">//    else if (wParam == &#x27;C&#x27;)</span></span><br><span class="line">    <span class="comment">//    &#123;</span></span><br><span class="line">    <span class="comment">//        if (GetKeyState(VK_CONTROL) &lt; 0)</span></span><br><span class="line">    <span class="comment">//            shape_circle = TRUE;</span></span><br><span class="line">    <span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">//    InvalidateRect(hWnd, NULL, FALSE);</span></span><br><span class="line">    <span class="comment">//    break;</span></span><br><span class="line">    <span class="comment">//    &#125;</span></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            hDC = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hPen_black);</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hBrush_white);</span><br><span class="line">            <span class="keyword">if</span> (backColor_White == FALSE)</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hBrush_black);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (shape_circle == TRUE)</span><br><span class="line">                <span class="built_in">Ellipse</span>(hDC, start_x, start_y, start_x + <span class="number">200</span>, start_y + <span class="number">200</span>);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, start_x, start_y, start_x + <span class="number">200</span>, start_y + <span class="number">200</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HDC hDC;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line">    HPEN hPen_black = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    HPEN hPen_white = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">5</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    HBRUSH hBrush_white = (HBRUSH)<span class="built_in">GetStockObject</span>(WHITE_BRUSH);</span><br><span class="line">    HBRUSH hBrush_black = (HBRUSH)<span class="built_in">GetStockObject</span>(BLACK_BRUSH);</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> start_x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> start_y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> end_x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> end_y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> increase_x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> increase_y = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> BOOL Rect = FALSE;</span><br><span class="line">    <span class="type">int</span> x = <span class="built_in">LOWORD</span>(lParam);</span><br><span class="line">    <span class="type">int</span> y = <span class="built_in">HIWORD</span>(lParam);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">        hDC = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line">        <span class="built_in">SelectObject</span>(hDC, hPen_white);</span><br><span class="line">        <span class="built_in">Rectangle</span>(hDC, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1000</span>, <span class="number">1000</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Rect = TRUE;</span><br><span class="line">            start_x = x;</span><br><span class="line">            start_y = y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">ReleaseDC</span>(hWnd, hDC);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONUP:</span><br><span class="line">        Rect = FALSE;</span><br><span class="line">        <span class="keyword">if</span> (end_x &lt; start_x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> temp = end_x;</span><br><span class="line">            end_x = start_x;</span><br><span class="line">            start_x = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (end_y &lt; start_y)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> temp = end_y;</span><br><span class="line">            end_y = start_y;</span><br><span class="line">            start_y = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        increase_x = (end_x - start_x) / <span class="number">4</span>;</span><br><span class="line">        increase_y = (end_y - start_y) / <span class="number">4</span>;</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_MOUSEMOVE:</span><br><span class="line">        hDC = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line">        <span class="keyword">if</span> (Rect)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hPen_white);</span><br><span class="line">            <span class="built_in">Rectangle</span>(hDC, start_x, start_y, end_x, end_y);</span><br><span class="line">            end_x = x, end_y = y;</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">ReleaseDC</span>(hWnd, hDC);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">    &#123;</span><br><span class="line">        hDC = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">SelectObject</span>(hDC, hPen_white);</span><br><span class="line">        <span class="built_in">Rectangle</span>(hDC, start_x, start_y, end_x, end_y);</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (wParam)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> VK_UP:</span><br><span class="line">            start_y -= <span class="number">50</span>;</span><br><span class="line">            end_y -= <span class="number">50</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> VK_DOWN:</span><br><span class="line">            start_y += <span class="number">50</span>;</span><br><span class="line">            end_y += <span class="number">50</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> VK_LEFT:</span><br><span class="line">            start_x -= <span class="number">50</span>;</span><br><span class="line">            end_x -= <span class="number">50</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> VK_RIGHT:</span><br><span class="line">            start_x += <span class="number">50</span>;</span><br><span class="line">            end_x += <span class="number">50</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">        <span class="built_in">ReleaseDC</span>(hWnd, hDC);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">case</span> WM_CHAR:</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">if</span> (wParam == <span class="string">&#x27;l&#x27;</span>)</span><br><span class="line">        &#123; </span><br><span class="line">            end_x += increase_x;</span><br><span class="line">            end_y += increase_y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (wParam == <span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            end_x -= increase_x;</span><br><span class="line">            end_y -= increase_y;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, FALSE);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            hDC = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            <span class="built_in">SelectObject</span>(hDC, hPen_black);</span><br><span class="line">            </span><br><span class="line">            <span class="built_in">Rectangle</span>(hDC, start_x, start_y, end_x, end_y);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    为什么我运行之后执行两三次操作就无响应了？？？</span></span><br><span class="line"><span class="comment">    问题是我还不觉得代码哪里有错，Debug不出来呀！！</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HDC hDC;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line"></span><br><span class="line">    HPEN hPen_white = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">5</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    HPEN hPen_black = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    HPEN hPen_red = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    HPEN hPen_green = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">    HPEN hPen_blue = (HPEN)<span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line"></span><br><span class="line">    HBRUSH hBrush_white = (HBRUSH)<span class="built_in">GetStockObject</span>(WHITE_BRUSH);</span><br><span class="line">    HBRUSH hBrush_black = (HBRUSH)<span class="built_in">GetStockObject</span>(BLACK_BRUSH);</span><br><span class="line">    HBRUSH hBrush_red = (HBRUSH)<span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    HBRUSH hBrush_green = (HBRUSH)<span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">    HBRUSH hBrush_blue = (HBRUSH)<span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> BOOL nLKeyDown = FALSE, nEKeyDown = FALSE, nCKeyDown = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL nRKeyDown = FALSE, nGKeyDown = FALSE, nBKeyDown = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL nLButtonKeyDown = FALSE, nEButtonKeyDown = FALSE, nCButtonKeyDown = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL isLButtonDown = FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="type">static</span> <span class="type">int</span> op = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> POINT LeftUp = &#123; <span class="number">0</span>, <span class="number">0</span> &#125;, RightDown = &#123; <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">        op = nRKeyDown = nGKeyDown = nBKeyDown = FALSE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!isLButtonDown) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nLKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                op = <span class="number">1</span>;</span><br><span class="line">                nLButtonKeyDown = TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nEKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                op = <span class="number">2</span>;</span><br><span class="line">                nEButtonKeyDown = TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nCKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                op = <span class="number">3</span>;</span><br><span class="line">                nCButtonKeyDown = TRUE;</span><br><span class="line">            &#125;</span><br><span class="line">            LeftUp = RightDown = &#123; <span class="built_in">LOWORD</span>(lParam), <span class="built_in">HIWORD</span>(lParam) &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        isLButtonDown = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONUP:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (nLButtonKeyDown) </span><br><span class="line">        &#123;</span><br><span class="line">            RightDown = &#123; <span class="built_in">LOWORD</span>(lParam), <span class="built_in">HIWORD</span>(lParam) &#125;;</span><br><span class="line">            nLButtonKeyDown = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (nEButtonKeyDown) </span><br><span class="line">        &#123;</span><br><span class="line">            RightDown = &#123; <span class="built_in">LOWORD</span>(lParam), <span class="built_in">HIWORD</span>(lParam) &#125;;</span><br><span class="line">            nEButtonKeyDown = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (nCButtonKeyDown) </span><br><span class="line">        &#123;</span><br><span class="line">            RightDown = &#123; <span class="built_in">LOWORD</span>(lParam), <span class="built_in">HIWORD</span>(lParam) &#125;;</span><br><span class="line">            nCButtonKeyDown = FALSE;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (LeftUp.x &gt; RightDown.x || LeftUp.y &gt; RightDown.y)</span><br><span class="line">        &#123;</span><br><span class="line">            POINT Temp = LeftUp;</span><br><span class="line">            LeftUp = RightDown;</span><br><span class="line">            RightDown = Temp;</span><br><span class="line">        &#125;</span><br><span class="line">        isLButtonDown = FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_MOUSEMOVE:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isLButtonDown) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nLButtonKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                op = <span class="number">1</span>;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                RightDown = &#123; <span class="built_in">LOWORD</span>(lParam), <span class="built_in">HIWORD</span>(lParam) &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nEButtonKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                op = <span class="number">2</span>;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                RightDown = &#123; <span class="built_in">LOWORD</span>(lParam), <span class="built_in">HIWORD</span>(lParam) &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nCButtonKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                op = <span class="number">3</span>;</span><br><span class="line">                <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                RightDown = &#123; <span class="built_in">LOWORD</span>(lParam), <span class="built_in">HIWORD</span>(lParam) &#125;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">switch</span> (wParam)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;L&#x27;</span>:</span><br><span class="line">            nLKeyDown = TRUE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">            nEKeyDown = TRUE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">            nCKeyDown = TRUE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">            nRKeyDown = TRUE;</span><br><span class="line">            nGKeyDown = nBKeyDown = FALSE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;G&#x27;</span>:</span><br><span class="line">            nGKeyDown = TRUE;</span><br><span class="line">            nRKeyDown = nBKeyDown = FALSE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">            nBKeyDown = TRUE;</span><br><span class="line">            nRKeyDown = nGKeyDown = FALSE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_KEYUP:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">        nLKeyDown = nLButtonKeyDown = FALSE;</span><br><span class="line">        nEKeyDown = nEButtonKeyDown = FALSE;</span><br><span class="line">        nCKeyDown = nCButtonKeyDown = FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">        <span class="comment">// 分析菜单选择:</span></span><br><span class="line">        <span class="keyword">switch</span> (wmId)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">            <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">            <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">    &#123;</span><br><span class="line">        hDC = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        <span class="built_in">SelectObject</span>(hDC, hPen_black);</span><br><span class="line">        <span class="built_in">SelectObject</span>(hDC, hBrush_white);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (op) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (nRKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hPen_red);</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hBrush_red);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nGKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hPen_green);</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hBrush_green);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (nBKeyDown) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hPen_blue);</span><br><span class="line">                <span class="built_in">SelectObject</span>(hDC, hBrush_blue);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (op == <span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">MoveToEx</span>(hDC, LeftUp.x, LeftUp.y, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="built_in">LineTo</span>(hDC, RightDown.x, RightDown.y);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">2</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Rectangle</span>(hDC, LeftUp.x, LeftUp.y, RightDown.x, RightDown.y);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="number">3</span>) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">Ellipse</span>(hDC, LeftUp.x, LeftUp.y, RightDown.x, RightDown.y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    失败了，这题我不会写！！！真的好难呀！</span></span><br><span class="line"><span class="comment">    为什么老师都是刚教会我们走路就要我们去参加赛跑呀</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> IDC_MAIN_EDIT 101</span></span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">static</span> BOOL nRKeyDown = FALSE, nGKeyDown = FALSE, nBKeyDown = FALSE;</span><br><span class="line">    <span class="type">static</span> BOOL KeyDown = FALSE;</span><br><span class="line">    <span class="comment">//static BOOL nBkDown = FALSE;</span></span><br><span class="line"></span><br><span class="line">    HDC hDC;</span><br><span class="line">    HWND hEdit;</span><br><span class="line">    PAINTSTRUCT ps;</span><br><span class="line"></span><br><span class="line">    TCHAR buffer[<span class="number">512</span>] = <span class="string">&quot;这是编辑框的文本内容&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_CTLCOLOREDIT:</span><br><span class="line">    &#123;</span><br><span class="line">        HDC hdc = (HDC)wParam;</span><br><span class="line">        <span class="keyword">if</span> (nRKeyDown)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (nGKeyDown)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">255</span>, <span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (nBKeyDown)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>));</span><br><span class="line">        <span class="comment">//if (nBkDown)</span></span><br><span class="line">        <span class="comment">//&#123;</span></span><br><span class="line">        <span class="comment">//    SetBkColor(hdc, RGB(0, 0, 255));</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line">        <span class="keyword">return</span> (INT_PTR)<span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_CREATE:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//HWND hEdit = CreateWindowEx(</span></span><br><span class="line">        <span class="comment">//    WS_EX_CLIENTEDGE,</span></span><br><span class="line">        <span class="comment">//    &quot;EDIT&quot;,</span></span><br><span class="line">        <span class="comment">//    NULL,</span></span><br><span class="line">        <span class="comment">//    WS_CHILD | WS_VISIBLE | ES_MULTILINE | ES_LEFT |</span></span><br><span class="line">        <span class="comment">//    WS_VSCROLL | ES_AUTOVSCROLL | ES_AUTOHSCROLL,</span></span><br><span class="line">        <span class="comment">//    0, 0, 1000, 1000,</span></span><br><span class="line">        <span class="comment">//    hWnd,</span></span><br><span class="line">        <span class="comment">//    (HMENU)IDC_MAIN_EDIT,</span></span><br><span class="line">        <span class="comment">//    GetModuleHandle(NULL),</span></span><br><span class="line">        <span class="comment">//    NULL);</span></span><br><span class="line">        <span class="comment">//SetWindowText(hEdit, &quot;这是编辑框的文本内容&quot;);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_KEYDOWN:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!KeyDown)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span> (wParam)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;R&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    KeyDown = nRKeyDown = TRUE;</span><br><span class="line">                    nGKeyDown = nBKeyDown = FALSE;</span><br><span class="line">                    <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;G&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    KeyDown = nGKeyDown = TRUE;</span><br><span class="line">                    nRKeyDown = nBKeyDown = FALSE;</span><br><span class="line">                    <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    KeyDown = nBKeyDown = TRUE;</span><br><span class="line">                    nRKeyDown = nGKeyDown = FALSE;</span><br><span class="line">                    <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;P&#x27;</span>:</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">GetKeyState</span>(VK_CONTROL) &lt; <span class="number">0</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    KeyDown = TRUE;</span><br><span class="line">                    nBKeyDown = nRKeyDown = nGKeyDown = FALSE;</span><br><span class="line">                    <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_KEYUP:</span><br><span class="line">    &#123;</span><br><span class="line">        KeyDown = FALSE;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> EM_GETSEL:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            hDC = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line"></span><br><span class="line">            hEdit = <span class="built_in">CreateWindowEx</span>(</span><br><span class="line">                WS_EX_CLIENTEDGE,</span><br><span class="line">                <span class="string">&quot;EDIT&quot;</span>,</span><br><span class="line">                <span class="literal">NULL</span>,</span><br><span class="line">                WS_CHILD | WS_VISIBLE | ES_MULTILINE | ES_LEFT |</span><br><span class="line">                WS_VSCROLL | ES_AUTOVSCROLL | ES_AUTOHSCROLL,</span><br><span class="line">                <span class="number">0</span>, <span class="number">0</span>, <span class="number">1000</span>, <span class="number">1000</span>,</span><br><span class="line">                hWnd,</span><br><span class="line">                (HMENU)IDC_MAIN_EDIT,</span><br><span class="line">                <span class="built_in">GetModuleHandle</span>(<span class="literal">NULL</span>),</span><br><span class="line">                <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">            <span class="built_in">SetWindowText</span>(hEdit, buffer);</span><br><span class="line">            <span class="built_in">GetWindowText</span>(hEdit, buffer, <span class="number">512</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">strlen</span>(buffer) &gt; <span class="number">256</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">MessageBox</span>(hWnd, <span class="string">&quot;你的输入已经超过了最大存储！&quot;</span>, <span class="string">&quot;消息框实例&quot;</span>, MB_OK);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">            <span class="comment">//DestroyWindow(hEdit);</span></span><br><span class="line"></span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验2&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验2&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验2&quot;&gt;&lt;/a&gt;C++桌面应用程序实验2&lt;/h1&gt;&lt;mark class=&quot;hl-label green&quot;&gt;题目&lt;/ma</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Visual Studio" scheme="https://coleduck.cn/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>VS C++桌面应用程序 - 图形文字显示</title>
    <link href="https://coleduck.cn/2023/05/14/0002-01/"/>
    <id>https://coleduck.cn/2023/05/14/0002-01/</id>
    <published>2023-05-14T06:09:31.978Z</published>
    <updated>2023-06-18T10:04:14.383Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-桌面应用程序实验1"><a href="#C-桌面应用程序实验1" class="headerlink" title="C++桌面应用程序实验1"></a>C++桌面应用程序实验1</h1><mark class="hl-label green">题目</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">第一题</button></li><li class="tab"><button type="button" data-href="#-2">第二题</button></li><li class="tab"><button type="button" data-href="#-3">第三题</button></li><li class="tab"><button type="button" data-href="#-4">第四题</button></li><li class="tab"><button type="button" data-href="#-5">第五题</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(一) 编写一个简单的画图程序，要求如下： </span><br><span class="line"></span><br><span class="line">(1) 在例题2.1程序（可以用vc自动生成程序）的基础上，增加画图功能； </span><br><span class="line"></span><br><span class="line">(2) 在窗口函数中处理鼠标左键单击消息。在该消息处理中，绘制一条直线段，要求线段为实线，</span><br><span class="line">    宽度为 2 个像素，颜色为淡蓝色(132, 129, 255)。线段端点为(0, 0)和(100, 100)。</span><br><span class="line">   （注意，首先需要获取到设备环境，然后再进行绘制） </span><br><span class="line"></span><br><span class="line">(3) 认真调试，让程序顺利运行，并且结果正确。 </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(二) 程序二：刷新处理。要求如下： </span><br><span class="line"></span><br><span class="line">(1) 在程序(一)的基础上，完善该程序； </span><br><span class="line"></span><br><span class="line">(2) 大家调整一下窗口大小，是不是发现直线段没了。这是因为，窗口需要刷新。当需要刷新时，</span><br><span class="line">    操作系统会向窗口发送 WM_PAINT 消息，我们需要在 WM_PAINT 消息中，对刷新请求进行处理。</span><br><span class="line"></span><br><span class="line">(3) 怎么处理呢？我们可采用最直接的方法：在 WM_PAINT 消息中，再把直线段绘制一遍（注意，</span><br><span class="line">    在绘制前，也需要先获取到设备环境）。这样，当窗口需要刷新时，该直线段就会重新绘制一遍。</span><br><span class="line"></span><br><span class="line">(4) 认真调试，让程序顺利运行，并且结果正确。（再调整一下窗口，结果正确吗？） </span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(三) 程序三：刷新进阶。要求如下： </span><br><span class="line"></span><br><span class="line">(1) 在上述程序的基础上，改进该程序； </span><br><span class="line"></span><br><span class="line">(2) 定义一个 BOOL 型全局变量 bStatus，初如化其值为 TRUE； </span><br><span class="line"></span><br><span class="line">(3) 在 WM_PAINT 消息处理中，当 bStatus 为 TRUE 时，绘制一个矩形，其左上角在(10, 10)处，</span><br><span class="line">    右下角在(150, 100)处。要求矩形框为虚线，线宽为 1，矩形边框颜色为黑色，</span><br><span class="line">    内部填充色为(100, 167, 201)。当 bStatus 为 FALSE 时，绘制一条直线段，要求线段为实线，</span><br><span class="line">    宽度为 2 个像素，颜色为淡蓝色(132, 129, 255)。线段端点为(0, 0)和(100, 100)。 </span><br><span class="line"></span><br><span class="line">(4) 在 WM_LBUTTONDWON 消息处理中，反转 bStatus 的值，即 bStatus = !bStatus</span><br><span class="line">   （真变假，假变真）。写完后，运行程序。大家有没发现，窗口中的绘制内容并不会随 bStatus 的值</span><br><span class="line">    而更新，我们必需调整窗口大小，窗口中的内容才会更新。即只有请求刷新时，窗口才会刷新重绘。 </span><br><span class="line"></span><br><span class="line">(5) 那有没有无需调整窗口大小请求刷新的方法呢？有的，可通过函数InvalidateRect()，</span><br><span class="line">    大家在 WM_LBUTTONDOWN 消息处理中调用该函数。发现没，现在无需调整窗口大小，</span><br><span class="line">    窗口内容就自动刷新了。函数原型如下： </span><br><span class="line">    BOOL InvalidateRect( </span><br><span class="line">    HWND hWnd，           // 窗口句柄 </span><br><span class="line">    CONST RECT* lpRect,   // 矩形区域 </span><br><span class="line">    BOOL bErase            //是否擦除背景 </span><br><span class="line">    ); </span><br><span class="line">    该函数会放一个 WM_PAINT 消息到消息队列中，因此相当于让窗口变脏重绘。可以这样调用该函数：</span><br><span class="line">    InvalidateRect(hWnd, NULL, TRUE)；关于该函数的具体说明，大家可以去百度。</span><br><span class="line"></span><br><span class="line">(6) 认真调试，让程序顺利运行，并且结果正确。 </span><br><span class="line"></span><br><span class="line">(7) 总结：绘制代码可以放在 WM_PAINT 消息处理中，用于处理刷新。</span><br><span class="line">    而当代码中需要重绘时，可以通过 InvalidateRect()发送一个 WM_PAINT 消息。 </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(四) 做一个窗口，窗口用户区每隔1s颜色变化一次（红-&gt;白-&gt;黑-&gt;蓝）</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(五) 在窗口用户区滚动显示文字“浙江工商大学欢迎你”（效果如“动态文字”程序运行结果）</span><br><span class="line">     要求文字背景为红色，文字为白色。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><mark class="hl-label green">代码</mark> <div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">第一题</button></li><li class="tab"><button type="button" data-href="#-2">第二题</button></li><li class="tab"><button type="button" data-href="#-3">第三题</button></li><li class="tab"><button type="button" data-href="#-4">第四题</button></li><li class="tab"><button type="button" data-href="#-5">第五题</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"> <span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">        <span class="comment">// 分析菜单选择:</span></span><br><span class="line">        <span class="keyword">switch</span> (wmId)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">            <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">            <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">    &#123;</span><br><span class="line">        PAINTSTRUCT ps;</span><br><span class="line">        HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line">        <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">    &#123;</span><br><span class="line">        HDC hdc = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line">        HPEN hPen = <span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">2</span>, <span class="built_in">RGB</span>(<span class="number">132</span>, <span class="number">129</span>, <span class="number">255</span>));</span><br><span class="line">        HGDIOBJ hPenOld = <span class="built_in">SelectObject</span>(hdc, hPen);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">MoveToEx</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="built_in">LineTo</span>(hdc, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">SelectObject</span>(hdc, hPenOld);</span><br><span class="line">        <span class="built_in">DeleteObject</span>(hPen);</span><br><span class="line">        <span class="built_in">ReleaseDC</span>(hWnd, hdc);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">BOOL flag = FALSE;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">            <span class="comment">// 分析菜单选择:</span></span><br><span class="line">            <span class="keyword">switch</span> (wmId)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">                <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">                <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">        &#123;</span><br><span class="line">            PAINTSTRUCT ps;</span><br><span class="line">            HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line"></span><br><span class="line">            HPEN hP = <span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">1</span>, <span class="built_in">RGB</span>(<span class="number">132</span>, <span class="number">129</span>, <span class="number">255</span>));</span><br><span class="line">            HGDIOBJ hPenOld = <span class="built_in">SelectObject</span>(hdc, hP);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="built_in">MoveToEx</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">                <span class="built_in">LineTo</span>(hdc, <span class="number">100</span>, <span class="number">100</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="built_in">SelectObject</span>(hdc, hPenOld);</span><br><span class="line">            <span class="built_in">DeleteObject</span>(hP);</span><br><span class="line">            <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">        &#123;</span><br><span class="line">            flag = TRUE;</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-3"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">BOOL bStatus = TRUE;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">        <span class="comment">// 分析菜单选择:</span></span><br><span class="line">        <span class="keyword">switch</span> (wmId)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">            <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">            <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">    &#123;</span><br><span class="line">        PAINTSTRUCT ps;</span><br><span class="line">        HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line"></span><br><span class="line">        HPEN hP1 = <span class="built_in">CreatePen</span>(PS_SOLID, <span class="number">1</span>, <span class="built_in">RGB</span>(<span class="number">132</span>, <span class="number">129</span>, <span class="number">255</span>));</span><br><span class="line">        HPEN hP2 = <span class="built_in">CreatePen</span>(PS_DASH, <span class="number">0</span>, <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        HGDIOBJ hPenOld = <span class="built_in">SelectObject</span>(hdc, hP1);</span><br><span class="line"></span><br><span class="line">        HBRUSH hBr1 = <span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">100</span>, <span class="number">167</span>, <span class="number">201</span>));</span><br><span class="line">        HGDIOBJ hBrOld = <span class="built_in">SelectObject</span>(hdc, hBr1);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (bStatus) &#123;</span><br><span class="line">            hPenOld = <span class="built_in">SelectObject</span>(hdc, hP2);</span><br><span class="line">            hBrOld = <span class="built_in">SelectObject</span>(hdc, hBr1);</span><br><span class="line">            <span class="built_in">Rectangle</span>(hdc, <span class="number">10</span>, <span class="number">10</span>, <span class="number">150</span>, <span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            hPenOld = <span class="built_in">SelectObject</span>(hdc, hP1);</span><br><span class="line">            <span class="built_in">MoveToEx</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, <span class="literal">NULL</span>);</span><br><span class="line">            <span class="built_in">LineTo</span>(hdc, <span class="number">100</span>, <span class="number">100</span>);            </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">SelectObject</span>(hdc, hPenOld);</span><br><span class="line">        <span class="built_in">DeleteObject</span>(hP1);</span><br><span class="line">        <span class="built_in">DeleteObject</span>(hP2);</span><br><span class="line">        <span class="built_in">SelectObject</span>(hdc, hBrOld);</span><br><span class="line">        <span class="built_in">DeleteObject</span>(hBr1);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_LBUTTONDOWN:</span><br><span class="line">    &#123;</span><br><span class="line">        HDC hdc = <span class="built_in">GetDC</span>(hWnd);</span><br><span class="line">        bStatus = !bStatus;</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">        <span class="built_in">ReleaseDC</span>(hWnd, hdc);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-4"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">int</span> TIMER_ID = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> Index = <span class="number">0</span>;</span><br><span class="line">COLORREF colors[] = &#123; <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">255</span>) &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_CREATE:</span><br><span class="line">        <span class="built_in">SetTimer</span>(hWnd, TIMER_ID, <span class="number">1000</span>, <span class="literal">NULL</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_TIMER:</span><br><span class="line">        Index = (Index + <span class="number">1</span>) % <span class="number">4</span>;</span><br><span class="line">        <span class="built_in">SetClassLongPtr</span>(hWnd, GCLP_HBRBACKGROUND, </span><br><span class="line">                        (LONG)<span class="built_in">CreateSolidBrush</span>(colors[Index]));</span><br><span class="line">        <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">        <span class="comment">// 分析菜单选择:</span></span><br><span class="line">        <span class="keyword">switch</span> (wmId)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">            <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">            <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">    &#123;</span><br><span class="line">        PAINTSTRUCT ps;</span><br><span class="line">        HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line">        <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-5"><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">LRESULT CALLBACK <span class="title">WndProc</span><span class="params">(HWND hWnd, UINT message, WPARAM wParam, LPARAM lParam)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (message)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> WM_COMMAND:</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> wmId = <span class="built_in">LOWORD</span>(wParam);</span><br><span class="line">        <span class="comment">// 分析菜单选择:</span></span><br><span class="line">        <span class="keyword">switch</span> (wmId)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> IDM_ABOUT:</span><br><span class="line">            <span class="built_in">DialogBox</span>(hInst, <span class="built_in">MAKEINTRESOURCE</span>(IDD_ABOUTBOX), hWnd, About);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IDM_EXIT:</span><br><span class="line">            <span class="built_in">DestroyWindow</span>(hWnd);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_PAINT:</span><br><span class="line">    &#123;</span><br><span class="line">        PAINTSTRUCT ps;</span><br><span class="line">        HDC hdc = <span class="built_in">BeginPaint</span>(hWnd, &amp;ps);</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span> 在此处添加使用 hdc 的任何绘图代码...</span></span><br><span class="line"></span><br><span class="line">        HBRUSH hBr = <span class="built_in">CreateSolidBrush</span>(<span class="built_in">RGB</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        HGDIOBJ hBrOld = <span class="built_in">SelectObject</span>(hdc, hBr);</span><br><span class="line">        HFONT hFont = <span class="built_in">CreateFont</span>(<span class="number">50</span>, <span class="number">30</span>, <span class="number">0</span>, <span class="number">0</span>, FW_NORMAL, FALSE, FALSE,</span><br><span class="line">            FALSE, DEFAULT_CHARSET,</span><br><span class="line">            OUT_DEFAULT_PRECIS,</span><br><span class="line">            CLIP_DEFAULT_PRECIS,</span><br><span class="line">            DEFAULT_QUALITY,</span><br><span class="line">            DEFAULT_PITCH | FF_SWISS,</span><br><span class="line">            <span class="string">&quot;Arial&quot;</span>); <span class="comment">// 创建一个新的字体对象</span></span><br><span class="line">        HFONT hOldFont = (HFONT)<span class="built_in">SelectObject</span>(hdc, hFont);</span><br><span class="line"></span><br><span class="line">        <span class="type">const</span> CHAR* textbuf[] =</span><br><span class="line">        &#123; <span class="string">&quot;浙江工商大学欢迎你    &quot;</span> ,</span><br><span class="line">            <span class="string">&quot;江工商大学欢迎你    &quot;</span>,</span><br><span class="line">            <span class="string">&quot;工商大学欢迎你    &quot;</span>,</span><br><span class="line">            <span class="string">&quot;商大学欢迎你    &quot;</span>,</span><br><span class="line">            <span class="string">&quot;大学欢迎你    &quot;</span>,</span><br><span class="line">            <span class="string">&quot;学欢迎你    &quot;</span>,</span><br><span class="line">            <span class="string">&quot;欢迎你    &quot;</span>,</span><br><span class="line">            <span class="string">&quot;迎你    &quot;</span>,</span><br><span class="line">            <span class="string">&quot;你    &quot;</span></span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="built_in">SetBkColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="built_in">SetTextColor</span>(hdc, <span class="built_in">RGB</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">0</span>; x &lt; <span class="number">9</span>; x++) &#123;</span><br><span class="line">            <span class="built_in">TextOut</span>(hdc, <span class="number">0</span>, <span class="number">0</span>, textbuf[x], <span class="built_in">lstrlen</span>(textbuf[x]));</span><br><span class="line">            <span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line">            <span class="built_in">InvalidateRect</span>(hWnd, <span class="literal">NULL</span>, TRUE);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">Sleep</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="built_in">SelectObject</span>(hdc, hOldFont); <span class="comment">// 恢复原来的字体</span></span><br><span class="line">        <span class="built_in">DeleteObject</span>(hFont); <span class="comment">// 删除新创建的字体对象</span></span><br><span class="line">        <span class="built_in">SelectObject</span>(hdc, hBrOld);</span><br><span class="line">        <span class="built_in">DeleteObject</span>(hBr);</span><br><span class="line">        <span class="built_in">EndPaint</span>(hWnd, &amp;ps);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> WM_DESTROY:</span><br><span class="line">        <span class="built_in">PostQuitMessage</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">DefWindowProc</span>(hWnd, message, wParam, lParam);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;C-桌面应用程序实验1&quot;&gt;&lt;a href=&quot;#C-桌面应用程序实验1&quot; class=&quot;headerlink&quot; title=&quot;C++桌面应用程序实验1&quot;&gt;&lt;/a&gt;C++桌面应用程序实验1&lt;/h1&gt;&lt;mark class=&quot;hl-label green&quot;&gt;题目&lt;/ma</summary>
      
    
    
    
    <category term="C++桌面应用程序" scheme="https://coleduck.cn/categories/C-%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    
    <category term="C++" scheme="https://coleduck.cn/tags/C/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="桌面应用程序" scheme="https://coleduck.cn/tags/%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
    
    <category term="Visual Studio" scheme="https://coleduck.cn/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>数字图像处理实验4</title>
    <link href="https://coleduck.cn/2023/05/14/0004-04/"/>
    <id>https://coleduck.cn/2023/05/14/0004-04/</id>
    <published>2023-05-14T06:09:31.959Z</published>
    <updated>2023-05-08T07:31:12.975Z</updated>
    
    <content type="html"><![CDATA[<mark class="hl-label green">图像下载链接</mark> <p><a href="https://coleduck.cn/annex/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/TestFigures.7z">data.zip</a></p><h2 id="4-A-基于区域的图像分割"><a href="#4-A-基于区域的图像分割" class="headerlink" title="4-A  基于区域的图像分割"></a>4-A  基于区域的图像分割</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li><li class="tab"><button type="button" data-href="#-2">解答</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 打 开 TestFigures 目录中的 BirdFlying.png, 将其转换成灰度图像, 以cv2.adaptiveThreshold()对其进行自</span><br><span class="line">适应阈值化分割，该函数的用法参见如下（或阅读示例代码），理解各个参数的意义，且尝试不同的参数所得的结果。</span><br><span class="line"></span><br><span class="line">2. 打开 TestFigures 目录中的 BirdFlying.png，以 cv2.floodFill()对其进行漫水填充分割，该函数的用法参见如</span><br><span class="line">下（或阅读示例代码），理解各个参数的意义，且尝试不同的参数所得的结果。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">from</span> ipdb <span class="keyword">import</span> set_trace</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">flood_fill</span>(<span class="params">src</span>):</span><br><span class="line">    mask = np.zeros((src.shape[<span class="number">0</span>]+<span class="number">2</span>, src.shape[<span class="number">1</span>] +<span class="number">2</span>), dtype=np.uint8)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    实现漫水填充: cv2.floodFill(im, mask, seed_point, new_val, low_diff, up_diff, flags)</span></span><br><span class="line"><span class="string">    im--8位或浮点输入图像;  mask -- 单通道8位掩膜图像, 长宽需比输入图像大两个像素，算法不填充掩膜非零像素区域</span></span><br><span class="line"><span class="string">    seed_point -- 种子点;  new_val -- 像素点填充后被染色的值</span></span><br><span class="line"><span class="string">    low_diff -- 待加入的像素与当前观察像素之间的颜色的最大负差值</span></span><br><span class="line"><span class="string">    up_diff -- 待加入的像素与当前观察像素之间的颜色的最大正差值</span></span><br><span class="line"><span class="string">    flags -- 操作标志符, 低八位用于控制算法的连通性，可取4(默认4连通)或者8，高8位建议 FLOODFILL_FIXED_RANGE, 此时考虑当前像素与种子像素之间的差，否则将考虑当前像素与其相邻像素的差</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    newVal = (<span class="number">200</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">    lowV   = (<span class="number">60</span>, <span class="number">60</span>, <span class="number">60</span>)</span><br><span class="line">    upV    = (<span class="number">30</span>, <span class="number">30</span>, <span class="number">30</span>)</span><br><span class="line">    seed   = (<span class="number">650</span>, <span class="number">220</span>)</span><br><span class="line">    flags  = <span class="number">4</span>|cv2.FLOODFILL_FIXED_RANGE</span><br><span class="line">    ret, bin_im, mask, rect = cv2.floodFill(src.copy(), mask, seed, newVal, lowV, upV, flags)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bin_im</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">adapt_thresh</span>(<span class="params">src</span>):</span><br><span class="line">    gray = cv2.cvtColor(src, cv2.COLOR_BGR2GRAY)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    cv2.adaptiveThreshold(src, maxValue, adaptiveMethod, thresholdType, blockSize, C)</span></span><br><span class="line"><span class="string">    src -- 输入的灰度图像； maxValue -- 二值化后图像中的较大灰度值</span></span><br><span class="line"><span class="string">    adaptiveMethod -- 自适应阈值算法, 可选 ADAPTIVE_THRESH_MEAN_C 或 ADAPTIVE_THRESH_GAUSSIAN_C</span></span><br><span class="line"><span class="string">    thresholdType -- 二值化方法，只能选 THRESH_BINARY 或 THRESH_BINARY_INV, 其它如THRESH_TRUNC等似乎无法选</span></span><br><span class="line"><span class="string">    blockSize -- 区域大小，取奇数, 需多试几次；  C -- 常数，每个区域计算出的阈值的基础上在减去这个常数作为这个区域的最终阈值</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    bin_im = cv2.adaptiveThreshold(gray, <span class="number">255</span>, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY, <span class="number">301</span>, <span class="number">5</span>) </span><br><span class="line">    </span><br><span class="line">    se = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">7</span>, <span class="number">7</span>), (-<span class="number">1</span>, -<span class="number">1</span>))</span><br><span class="line">    bin_im = cv2.morphologyEx(bin_im, cv2.MORPH_OPEN, se)   <span class="comment"># 开运算去除噪声</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> bin_im</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  </span><br><span class="line">    image = cv2.imread(<span class="string">&#x27;D:/Code/Python/Vscode/TestFigures/BirdFly.png&#x27;</span>)  </span><br><span class="line">    </span><br><span class="line">    bin_adapt = adapt_thresh(image)   <span class="comment"># 1</span></span><br><span class="line">    bin_flood = flood_fill(image)     <span class="comment"># 2</span></span><br><span class="line">    </span><br><span class="line">    plt.subplot(<span class="number">131</span>), plt.title(<span class="string">&#x27;original&#x27;</span>)</span><br><span class="line">    plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">132</span>), plt.title(<span class="string">&#x27;adapt_thresh&#x27;</span>)</span><br><span class="line">    plt.imshow(bin_adapt, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">133</span>), plt.title(<span class="string">&#x27;flood_fill&#x27;</span>)</span><br><span class="line">    plt.imshow(cv2.cvtColor(bin_flood, cv2.COLOR_BGR2RGB))</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="4-B-练习图像分离、截取、转换等函数的使用"><a href="#4-B-练习图像分离、截取、转换等函数的使用" class="headerlink" title="4-B  练习图像分离、截取、转换等函数的使用"></a>4-B  练习图像分离、截取、转换等函数的使用</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li><li class="tab"><button type="button" data-href="#-2">解答</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 打开 linux.jpg（保存在 TestFigures 目录），使用 cvtColor()转换成灰度图像，使用 threshold()对图像作阈</span><br><span class="line">值化处理，以 erode()函数对图像作腐蚀运算，dilate()函数对图像作膨胀运算，分别显示结果。</span><br><span class="line"></span><br><span class="line">2. 打开 j_outnoise.png，使用 cvtColor()转换成灰度图像，使用 threshold()对图像作阈值化处理，使用 </span><br><span class="line">morphologyEx()对图像作开运算，观察开运算的结果。</span><br><span class="line"></span><br><span class="line">3. 打开 j_innoise.png，使用 cvtColor()转换成灰度图像，使用 threshold()对图像作阈值化处理，使用 </span><br><span class="line">morphologyEx()对图像作闭运算，观察闭运算的结果。函数用法请参见课件。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">二值形态学处理</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">from</span> ipdb <span class="keyword">import</span> set_trace</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dilate_erode</span>(<span class="params">image</span>):</span><br><span class="line">    se = np.ones((<span class="number">3</span>, <span class="number">3</span>), dtype=np.uint8)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    ret_thr, dst = cv2.threshold(src, thr, maxVal, type)</span></span><br><span class="line"><span class="string">    src -- 灰度图像, thr -- 阈值,  maxVal -- 大于阈值的像素给出的值, type -- 使用的算法类型, cv2.THRESH_BINARY, cv2.THRESH_BINARY_INV, ...</span></span><br><span class="line"><span class="string">    # 返回值 ret_thr--得到的阈值, dst -- 结果图像</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    ret_thr, bin_im = cv2.threshold(image, <span class="number">160</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    dilate 操作, dst = cv2.dilate(src, se, iterations), opencv的膨胀操作, 每个通道独立处理, 可对单个通道执行多次递归操作</span></span><br><span class="line"><span class="string">    src -- 源图像, se -- 结构元素, iterations -- 操作次数</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    dil_im = cv2.dilate(bin_im, se, iterations = <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    腐蚀: dst = cv2.erode(src, kernel, iterations)</span></span><br><span class="line"><span class="string">    参数基本同 dilate()</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    ero_im = cv2.erode(dil_im, se, iterations = <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 显示比较</span></span><br><span class="line">    plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">1</span>); plt.title(<span class="string">&#x27;original&#x27;</span>)</span><br><span class="line">    plt.imshow(image, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>); plt.title(<span class="string">&#x27;dilated&#x27;</span>)</span><br><span class="line">    plt.imshow(dil_im, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">1</span>, <span class="number">3</span>, <span class="number">3</span>); plt.title(<span class="string">&#x27;eroded&#x27;</span>)</span><br><span class="line">    plt.imshow(ero_im, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">open_close</span>(<span class="params">im2open, im2close</span>):</span><br><span class="line"></span><br><span class="line">    <span class="comment"># cv2.getStructuringElement()--返回指定形状和尺寸的结构元素</span></span><br><span class="line">    se = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">7</span>, <span class="number">7</span>), (-<span class="number">1</span>, -<span class="number">1</span>))</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    cv2.morphologyEx(src, op, kernel)</span></span><br><span class="line"><span class="string">    op -- cv2.MORPH_OPEN, 开运算； cv2.MORPH_CLOSE--闭运算</span></span><br><span class="line"><span class="string">    开运算可消除外部噪音, 闭运算可消除内部噪声</span></span><br><span class="line"><span class="string">    kernel -- 结构元素</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    ret_thr, bin_im = cv2.threshold(im2open, <span class="number">160</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    bin_opened = cv2.morphologyEx(bin_im, cv2.MORPH_OPEN, se)</span><br><span class="line"></span><br><span class="line">    ret_thr, bin_im = cv2.threshold(im2close, <span class="number">160</span>, <span class="number">255</span>, cv2.THRESH_BINARY)    </span><br><span class="line">    bin_closed = cv2.morphologyEx(bin_im, cv2.MORPH_CLOSE, se)</span><br><span class="line">    </span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">1</span>); plt.title(<span class="string">&#x27;to open&#x27;</span>)</span><br><span class="line">    plt.imshow(im2open, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>); plt.title(<span class="string">&#x27;to close&#x27;</span>)</span><br><span class="line">    plt.imshow(im2close, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">3</span>); plt.title(<span class="string">&#x27;opened&#x27;</span>)</span><br><span class="line">    plt.imshow(bin_opened, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">2</span>, <span class="number">2</span>, <span class="number">4</span>); plt.title(<span class="string">&#x27;closed&#x27;</span>)</span><br><span class="line">    plt.imshow(bin_closed, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.show()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 1</span></span><br><span class="line">    image = cv2.imread(<span class="string">&#x27;D:/Code/Python/Vscode/TestFigures/linux.jpg&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">    dilate_erode(image)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 2 , 3</span></span><br><span class="line">    im2open = cv2.imread(<span class="string">&#x27;D:/Code/Python/Vscode/TestFigures/j_outnoise.png&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">    im2close = cv2.imread(<span class="string">&#x27;D:/Code/Python/Vscode/TestFigures/j_innoise.png&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">    open_close(im2open, im2close)</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="4-C-图像颜色变换"><a href="#4-C-图像颜色变换" class="headerlink" title="4-C  图像颜色变换"></a>4-C  图像颜色变换</h2><div class="tabs" id=""><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#-1">题目</button></li><li class="tab"><button type="button" data-href="#-2">解答</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="-1"><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 打开 TestFigures 目录下的 j_pattern.png 文件，使用合适的形态学操作得到如下图的结果</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="-2"><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt </span><br><span class="line"><span class="keyword">from</span> ipdb <span class="keyword">import</span> set_trace</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gradient_proc</span>(<span class="params">image</span>):</span><br><span class="line">    ret_thr, bin_im = cv2.threshold(image, <span class="number">160</span>, <span class="number">255</span>, cv2.THRESH_BINARY)</span><br><span class="line">    se = cv2.getStructuringElement(cv2.MORPH_RECT, (<span class="number">5</span>, <span class="number">5</span>), (-<span class="number">1</span>, -<span class="number">1</span>))  </span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    梯度运算: cv2.morphologyEx(src, op, kernel)</span></span><br><span class="line"><span class="string">    op -- cv2.MORPH_GRADIENT, 梯度运算， 结果为: 梯度 = 膨胀(src) - 腐蚀(src)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line">    bin_grad = cv2.morphologyEx(bin_im, cv2.MORPH_GRADIENT, se)</span><br><span class="line"></span><br><span class="line">    plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">1</span>); plt.title(<span class="string">&#x27;open and close&#x27;</span>)</span><br><span class="line">    plt.imshow(image, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">    plt.subplot(<span class="number">1</span>, <span class="number">2</span>, <span class="number">2</span>); plt.title(<span class="string">&#x27;gradient&#x27;</span>)</span><br><span class="line">    plt.imshow(bin_grad, cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">    plt.show()</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:  </span><br><span class="line">    </span><br><span class="line">    im = cv2.imread(<span class="string">&#x27;D:/Code/Python/Vscode/TestFigures/j_pattern.png&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">    gradient_proc(im)</span><br><span class="line"></span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;mark class=&quot;hl-label green&quot;&gt;图像下载链接&lt;/mark&gt; 
&lt;p&gt;&lt;a href=&quot;https://coleduck.cn/annex/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/Tes</summary>
      
    
    
    
    <category term="数字图像处理" scheme="https://coleduck.cn/categories/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
    
    <category term="Python" scheme="https://coleduck.cn/tags/Python/"/>
    
    <category term="作业" scheme="https://coleduck.cn/tags/%E4%BD%9C%E4%B8%9A/"/>
    
    <category term="专业课" scheme="https://coleduck.cn/tags/%E4%B8%93%E4%B8%9A%E8%AF%BE/"/>
    
    <category term="实验报告" scheme="https://coleduck.cn/tags/%E5%AE%9E%E9%AA%8C%E6%8A%A5%E5%91%8A/"/>
    
    <category term="OpenCV" scheme="https://coleduck.cn/tags/OpenCV/"/>
    
    <category term="Visual Studio Code" scheme="https://coleduck.cn/tags/Visual-Studio-Code/"/>
    
    <category term="数字图像处理" scheme="https://coleduck.cn/tags/%E6%95%B0%E5%AD%97%E5%9B%BE%E5%83%8F%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
</feed>
